/*
 -----------------------------------------------------------
 * Module: Ultrasonic
 *
 * File: hc_sr_04.c
 *
 * Description: Ultrasonic Driver Source File
 *
 * Author: Bodz
 -----------------------------------------------------------
 */

#include "hc_sr_04.h"
#include "icu.h"
#include "gpio.h"
#include "atmega32_memory_mapped_reg.h"
#include <util/delay.h>

ICU_ConfigType ICU_Configurations =
{ US_CLOCK_TYPE, RISING };

uint16 start_time = 0;
uint16 end_time = 0;

/*
 -------------------------------------------------------------
 | 	 	 	      Functions Prototypes (Private              |
 -------------------------------------------------------------
 */
static void Ultrasonic_Trigger(void);

/*----------------------------------------------------------*/

/* Initialize Ultrasonic
 *
 * Description: Initialize the ICU driver as required.
 * Set up the ICU callback function.
 * Set the direction for the trigger pin as output through the GPIO driver.
 *
 * Return: void
 *
 */
void Ultrasonic_init(void)
{
	SREG |= (1 << 7);
	ICU_init(&ICU_Configurations);
	ICU_setCallBack(Ultrasonic_edgeProcessing);
	GPIO_setupPinDirection(TRIGGER_PORT, TRIGGER_PIN, PIN_OUTPUT);
}

/*----------------------------------------------------------*/

/* Trigger the Ultrasonic
 *
 * Description: Send the trigger pulse to the ultrasonic sensor.
 *
 * Return: void
 *
 */
static void Ultrasonic_Trigger(void)
{
	GPIO_writePin(TRIGGER_PORT, TRIGGER_PIN, LOGIC_HIGH);
	_delay_us(10);
	GPIO_writePin(TRIGGER_PORT, TRIGGER_PIN, LOGIC_LOW);
}

/*----------------------------------------------------------*/

/* Read Ultrasonic measured distance
 *
 * Description: Send the trigger pulse by using the Ultrasonic_Trigger function.
 * Start the measurement process via the ICU driver.
 *
 * Return: The measured distance in centimeters.
 *
 */
uint16 Ultrasonic_readDistance(void)
{
	Ultrasonic_Trigger();
	return (uint16) ()

}
/*----------------------------------------------------------*/

/* Read Ultrasonic measured distance
 *
 * Description: This is the callback function called by the ICU driver.
 * It calculates the high time (pulse time) generated by the ultrasonic sensor.
 *
 * Return: void
 *
 */
void Ultrasonic_edgeProcessing(void)
{
	static ICU_EdgeType last_edge = RISING;
	if (last_edge == RISING)
	{
		start_time = ICU_getInputCaptureValue();
		ICU_setEdgeDetectionType(FALLING);
		last_edge = FALLING;
	}
	else
	{
		end_time = ICU_getInputCaptureValue();
		ICU_setEdgeDetectionType(RISING);
		last_edge = RISING;
	}
}

/*----------------------------------------------------------*/
