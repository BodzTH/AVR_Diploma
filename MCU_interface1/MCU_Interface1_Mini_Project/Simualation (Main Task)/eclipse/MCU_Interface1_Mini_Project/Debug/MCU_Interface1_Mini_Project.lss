
MCU_Interface1_Mini_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002f0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00002f0c  00002fa0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000007  0080006a  0080006a  00002faa  2**0
                  ALLOC
  3 .stab         00001b0c  00000000  00000000  00002fac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000083e  00000000  00000000  00004ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  000052f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00005436  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  000055a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000071ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000080da  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00008e88  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00009275  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009a43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 1c 06 	jmp	0xc38	; 0xc38 <__vector_1>
       8:	0c 94 5c 06 	jmp	0xcb8	; 0xcb8 <__vector_2>
       c:	0c 94 84 06 	jmp	0xd08	; 0xd08 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 ac 06 	jmp	0xd58	; 0xd58 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e0       	ldi	r30, 0x0C	; 12
      68:	ff e2       	ldi	r31, 0x2F	; 47
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 37       	cpi	r26, 0x71	; 113
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 24 08 	call	0x1048	; 0x1048 <main>
      8a:	0c 94 84 17 	jmp	0x2f08	; 0x2f08 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 4d 17 	jmp	0x2e9a	; 0x2e9a <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 69 17 	jmp	0x2ed2	; 0x2ed2 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 4d 17 	jmp	0x2e9a	; 0x2e9a <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 69 17 	jmp	0x2ed2	; 0x2ed2 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 59 17 	jmp	0x2eb2	; 0x2eb2 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 75 17 	jmp	0x2eea	; 0x2eea <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 5d 17 	jmp	0x2eba	; 0x2eba <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 79 17 	jmp	0x2ef2	; 0x2ef2 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <GPIO_Init>:
unsigned char mode = 0; /*To Hold Decrementing/Incrementing Mode*/
unsigned char buttonFlag = 1; /*A Flag to prevent level signal execution*/
unsigned char resetFlag = 1; /*A Flag to turn off/on time out Buzzer/Led*/

void GPIO_Init(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62

	DDRA = 0x3F; /*Set PA0-PA5 as output pins and PA6,PA7 as input pins*/
     b4e:	ea e3       	ldi	r30, 0x3A	; 58
     b50:	f0 e0       	ldi	r31, 0x00	; 0
     b52:	8f e3       	ldi	r24, 0x3F	; 63
     b54:	80 83       	st	Z, r24
	DDRB = 0x00; /*Set PB0-PB7 as input pins*/
     b56:	e7 e3       	ldi	r30, 0x37	; 55
     b58:	f0 e0       	ldi	r31, 0x00	; 0
     b5a:	10 82       	st	Z, r1
	DDRC = (DDRC & 0x3F) | 0x0F; /*Set PC0-PC3 as output pins and PC6,PC7 as input pins*/
     b5c:	a4 e3       	ldi	r26, 0x34	; 52
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	e4 e3       	ldi	r30, 0x34	; 52
     b62:	f0 e0       	ldi	r31, 0x00	; 0
     b64:	80 81       	ld	r24, Z
     b66:	80 73       	andi	r24, 0x30	; 48
     b68:	8f 60       	ori	r24, 0x0F	; 15
     b6a:	8c 93       	st	X, r24
	DDRD = (DDRD & 0x03) | 0x01; /*Set PD0,PD4,PD5 as output pins and PD2,PD3,PD6,PD7 as input pins*/
     b6c:	a1 e3       	ldi	r26, 0x31	; 49
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	e1 e3       	ldi	r30, 0x31	; 49
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	80 81       	ld	r24, Z
     b76:	82 70       	andi	r24, 0x02	; 2
     b78:	81 60       	ori	r24, 0x01	; 1
     b7a:	8c 93       	st	X, r24

	PORTA = 0xFF; /*Enable internal pullup resistor for PA6,PA7 and enable all six 7-Segment*/
     b7c:	eb e3       	ldi	r30, 0x3B	; 59
     b7e:	f0 e0       	ldi	r31, 0x00	; 0
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	80 83       	st	Z, r24
	PORTC = (PORTC & 0xF0) | 0xC0; /*Enable internal pullup resistor for PC6,PC7 and display 0 on 7-segment*/
     b84:	a5 e3       	ldi	r26, 0x35	; 53
     b86:	b0 e0       	ldi	r27, 0x00	; 0
     b88:	e5 e3       	ldi	r30, 0x35	; 53
     b8a:	f0 e0       	ldi	r31, 0x00	; 0
     b8c:	80 81       	ld	r24, Z
     b8e:	80 73       	andi	r24, 0x30	; 48
     b90:	80 6c       	ori	r24, 0xC0	; 192
     b92:	8c 93       	st	X, r24
	PORTB = 0xFF; /*Enable internal pullup resistor for PB0-PB7*/
     b94:	e8 e3       	ldi	r30, 0x38	; 56
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	8f ef       	ldi	r24, 0xFF	; 255
     b9a:	80 83       	st	Z, r24
	PORTD = (PORTD & 0x02) | 0xD4; /*Enable internal pullup resistor for PD2,PD6,PD7 and turn on PD4*/
     b9c:	a2 e3       	ldi	r26, 0x32	; 50
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	e2 e3       	ldi	r30, 0x32	; 50
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	80 81       	ld	r24, Z
     ba6:	82 70       	andi	r24, 0x02	; 2
     ba8:	84 6d       	ori	r24, 0xD4	; 212
     baa:	8c 93       	st	X, r24

}
     bac:	cf 91       	pop	r28
     bae:	df 91       	pop	r29
     bb0:	08 95       	ret

00000bb2 <INT012_Init>:
void INT012_Init(void)
{
     bb2:	df 93       	push	r29
     bb4:	cf 93       	push	r28
     bb6:	cd b7       	in	r28, 0x3d	; 61
     bb8:	de b7       	in	r29, 0x3e	; 62
	//Raise Interrupt 1 Flag with rising edge
	MCUCR |= (1 << ISC01) | (1 << ISC10) | (1 << ISC11); /*(1 << ISC01) for INT0*/
     bba:	a5 e5       	ldi	r26, 0x55	; 85
     bbc:	b0 e0       	ldi	r27, 0x00	; 0
     bbe:	e5 e5       	ldi	r30, 0x55	; 85
     bc0:	f0 e0       	ldi	r31, 0x00	; 0
     bc2:	80 81       	ld	r24, Z
     bc4:	8e 60       	ori	r24, 0x0E	; 14
     bc6:	8c 93       	st	X, r24
	//Raise Interrupt 0 Flag with falling edge
	MCUCR &= ~(1 << ISC00);
     bc8:	a5 e5       	ldi	r26, 0x55	; 85
     bca:	b0 e0       	ldi	r27, 0x00	; 0
     bcc:	e5 e5       	ldi	r30, 0x55	; 85
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	80 81       	ld	r24, Z
     bd2:	8e 7f       	andi	r24, 0xFE	; 254
     bd4:	8c 93       	st	X, r24
	//Raise Interrupt 2 Flag with falling edge
	MCUCSR &= ~(1 << ISC2);
     bd6:	a4 e5       	ldi	r26, 0x54	; 84
     bd8:	b0 e0       	ldi	r27, 0x00	; 0
     bda:	e4 e5       	ldi	r30, 0x54	; 84
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	80 81       	ld	r24, Z
     be0:	8f 7b       	andi	r24, 0xBF	; 191
     be2:	8c 93       	st	X, r24
	//Enable INT012 External Interrupt Request
	GICR |= 0xE0;
     be4:	ab e5       	ldi	r26, 0x5B	; 91
     be6:	b0 e0       	ldi	r27, 0x00	; 0
     be8:	eb e5       	ldi	r30, 0x5B	; 91
     bea:	f0 e0       	ldi	r31, 0x00	; 0
     bec:	80 81       	ld	r24, Z
     bee:	80 6e       	ori	r24, 0xE0	; 224
     bf0:	8c 93       	st	X, r24
}
     bf2:	cf 91       	pop	r28
     bf4:	df 91       	pop	r29
     bf6:	08 95       	ret

00000bf8 <TIMER1_Init>:
void TIMER1_Init(void)
{
     bf8:	df 93       	push	r29
     bfa:	cf 93       	push	r28
     bfc:	cd b7       	in	r28, 0x3d	; 61
     bfe:	de b7       	in	r29, 0x3e	; 62
	TCCR1A = (1 << FOC1A); /*non-PWM mode*/
     c00:	ef e4       	ldi	r30, 0x4F	; 79
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	88 e0       	ldi	r24, 0x08	; 8
     c06:	80 83       	st	Z, r24
	TCCR1B = (1 << WGM12) | (1 << CS12) | (1 << CS10); /*Mode 4 Top=OCR1A N=1024*/
     c08:	ee e4       	ldi	r30, 0x4E	; 78
     c0a:	f0 e0       	ldi	r31, 0x00	; 0
     c0c:	8d e0       	ldi	r24, 0x0D	; 13
     c0e:	80 83       	st	Z, r24
	TCNT1 = 0; /*Start counting from 0*/
     c10:	ec e4       	ldi	r30, 0x4C	; 76
     c12:	f0 e0       	ldi	r31, 0x00	; 0
     c14:	11 82       	std	Z+1, r1	; 0x01
     c16:	10 82       	st	Z, r1
	OCR1A = 15625; /*16M/1024 = 15625Hz, 1 Second after 15625 Clock Tick*/
     c18:	ea e4       	ldi	r30, 0x4A	; 74
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	89 e0       	ldi	r24, 0x09	; 9
     c1e:	9d e3       	ldi	r25, 0x3D	; 61
     c20:	91 83       	std	Z+1, r25	; 0x01
     c22:	80 83       	st	Z, r24
	TIMSK |= (1 << OCIE1A); /*Enable Timer1A_CTC Mode Interrupt Request*/
     c24:	a9 e5       	ldi	r26, 0x59	; 89
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	e9 e5       	ldi	r30, 0x59	; 89
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	80 81       	ld	r24, Z
     c2e:	80 61       	ori	r24, 0x10	; 16
     c30:	8c 93       	st	X, r24
}
     c32:	cf 91       	pop	r28
     c34:	df 91       	pop	r29
     c36:	08 95       	ret

00000c38 <__vector_1>:
//Reset Button PD2
ISR( INT0_vect)
{
     c38:	1f 92       	push	r1
     c3a:	0f 92       	push	r0
     c3c:	0f b6       	in	r0, 0x3f	; 63
     c3e:	0f 92       	push	r0
     c40:	11 24       	eor	r1, r1
     c42:	8f 93       	push	r24
     c44:	af 93       	push	r26
     c46:	bf 93       	push	r27
     c48:	ef 93       	push	r30
     c4a:	ff 93       	push	r31
     c4c:	df 93       	push	r29
     c4e:	cf 93       	push	r28
     c50:	cd b7       	in	r28, 0x3d	; 61
     c52:	de b7       	in	r29, 0x3e	; 62
	//Assign all Timer variables to start from 0
	hours1 = hours2 = minutes3 = minutes4 = seconds5 = seconds6 = 0;
     c54:	10 92 6a 00 	sts	0x006A, r1
     c58:	80 91 6a 00 	lds	r24, 0x006A
     c5c:	80 93 6b 00 	sts	0x006B, r24
     c60:	80 91 6b 00 	lds	r24, 0x006B
     c64:	80 93 6c 00 	sts	0x006C, r24
     c68:	80 91 6c 00 	lds	r24, 0x006C
     c6c:	80 93 6d 00 	sts	0x006D, r24
     c70:	80 91 6d 00 	lds	r24, 0x006D
     c74:	80 93 6e 00 	sts	0x006E, r24
     c78:	80 91 6e 00 	lds	r24, 0x006E
     c7c:	80 93 6f 00 	sts	0x006F, r24
	resetFlag = 0; /*As reset button pushed clear the flag as countdown mode check for it*/
     c80:	10 92 69 00 	sts	0x0069, r1
	PORTD &= ~(1 << PD0); /*As reset button pushed turnoff  time out Buzzer/LED*/
     c84:	a2 e3       	ldi	r26, 0x32	; 50
     c86:	b0 e0       	ldi	r27, 0x00	; 0
     c88:	e2 e3       	ldi	r30, 0x32	; 50
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	8e 7f       	andi	r24, 0xFE	; 254
     c90:	8c 93       	st	X, r24
	GIFR |= (1 << INTF0); /*write logic one to clear the INTF0 Flag bit*/
     c92:	aa e5       	ldi	r26, 0x5A	; 90
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	ea e5       	ldi	r30, 0x5A	; 90
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	80 64       	ori	r24, 0x40	; 64
     c9e:	8c 93       	st	X, r24

}
     ca0:	cf 91       	pop	r28
     ca2:	df 91       	pop	r29
     ca4:	ff 91       	pop	r31
     ca6:	ef 91       	pop	r30
     ca8:	bf 91       	pop	r27
     caa:	af 91       	pop	r26
     cac:	8f 91       	pop	r24
     cae:	0f 90       	pop	r0
     cb0:	0f be       	out	0x3f, r0	; 63
     cb2:	0f 90       	pop	r0
     cb4:	1f 90       	pop	r1
     cb6:	18 95       	reti

00000cb8 <__vector_2>:
//Pause Button PD3
ISR( INT1_vect)
{
     cb8:	1f 92       	push	r1
     cba:	0f 92       	push	r0
     cbc:	0f b6       	in	r0, 0x3f	; 63
     cbe:	0f 92       	push	r0
     cc0:	11 24       	eor	r1, r1
     cc2:	8f 93       	push	r24
     cc4:	af 93       	push	r26
     cc6:	bf 93       	push	r27
     cc8:	ef 93       	push	r30
     cca:	ff 93       	push	r31
     ccc:	df 93       	push	r29
     cce:	cf 93       	push	r28
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
	TCCR1B &= ~(1 << CS12) & ~(1 << CS10); /*Disable Clock source*/
     cd4:	ae e4       	ldi	r26, 0x4E	; 78
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	ee e4       	ldi	r30, 0x4E	; 78
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	80 81       	ld	r24, Z
     cde:	8a 7f       	andi	r24, 0xFA	; 250
     ce0:	8c 93       	st	X, r24
	GIFR |= (1 << INTF1); /*write logic one to clear the INTF1 Flag bit*/
     ce2:	aa e5       	ldi	r26, 0x5A	; 90
     ce4:	b0 e0       	ldi	r27, 0x00	; 0
     ce6:	ea e5       	ldi	r30, 0x5A	; 90
     ce8:	f0 e0       	ldi	r31, 0x00	; 0
     cea:	80 81       	ld	r24, Z
     cec:	80 68       	ori	r24, 0x80	; 128
     cee:	8c 93       	st	X, r24
}
     cf0:	cf 91       	pop	r28
     cf2:	df 91       	pop	r29
     cf4:	ff 91       	pop	r31
     cf6:	ef 91       	pop	r30
     cf8:	bf 91       	pop	r27
     cfa:	af 91       	pop	r26
     cfc:	8f 91       	pop	r24
     cfe:	0f 90       	pop	r0
     d00:	0f be       	out	0x3f, r0	; 63
     d02:	0f 90       	pop	r0
     d04:	1f 90       	pop	r1
     d06:	18 95       	reti

00000d08 <__vector_3>:
//Resume Button PB2
ISR( INT2_vect)
{
     d08:	1f 92       	push	r1
     d0a:	0f 92       	push	r0
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	0f 92       	push	r0
     d10:	11 24       	eor	r1, r1
     d12:	8f 93       	push	r24
     d14:	af 93       	push	r26
     d16:	bf 93       	push	r27
     d18:	ef 93       	push	r30
     d1a:	ff 93       	push	r31
     d1c:	df 93       	push	r29
     d1e:	cf 93       	push	r28
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
	TCCR1B |= (1 << CS12) | (1 << CS10); /*Enable Clock source N=1024*/
     d24:	ae e4       	ldi	r26, 0x4E	; 78
     d26:	b0 e0       	ldi	r27, 0x00	; 0
     d28:	ee e4       	ldi	r30, 0x4E	; 78
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	85 60       	ori	r24, 0x05	; 5
     d30:	8c 93       	st	X, r24
	GIFR |= (1 << INTF2); /*write logic one to clear the INTF2 Flag bit*/
     d32:	aa e5       	ldi	r26, 0x5A	; 90
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	ea e5       	ldi	r30, 0x5A	; 90
     d38:	f0 e0       	ldi	r31, 0x00	; 0
     d3a:	80 81       	ld	r24, Z
     d3c:	80 62       	ori	r24, 0x20	; 32
     d3e:	8c 93       	st	X, r24
}
     d40:	cf 91       	pop	r28
     d42:	df 91       	pop	r29
     d44:	ff 91       	pop	r31
     d46:	ef 91       	pop	r30
     d48:	bf 91       	pop	r27
     d4a:	af 91       	pop	r26
     d4c:	8f 91       	pop	r24
     d4e:	0f 90       	pop	r0
     d50:	0f be       	out	0x3f, r0	; 63
     d52:	0f 90       	pop	r0
     d54:	1f 90       	pop	r1
     d56:	18 95       	reti

00000d58 <__vector_7>:
//TIMER1 Interrupt for every 1 second count
ISR( TIMER1_COMPA_vect)
{
     d58:	1f 92       	push	r1
     d5a:	0f 92       	push	r0
     d5c:	0f b6       	in	r0, 0x3f	; 63
     d5e:	0f 92       	push	r0
     d60:	11 24       	eor	r1, r1
     d62:	8f 93       	push	r24
     d64:	af 93       	push	r26
     d66:	bf 93       	push	r27
     d68:	ef 93       	push	r30
     d6a:	ff 93       	push	r31
     d6c:	df 93       	push	r29
     d6e:	cf 93       	push	r28
     d70:	cd b7       	in	r28, 0x3d	; 61
     d72:	de b7       	in	r29, 0x3e	; 62
	SREG |= (1 << 7); /*To enable nested interrupts to pause/reset/resume stop watch at any time*/
     d74:	af e5       	ldi	r26, 0x5F	; 95
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	ef e5       	ldi	r30, 0x5F	; 95
     d7a:	f0 e0       	ldi	r31, 0x00	; 0
     d7c:	80 81       	ld	r24, Z
     d7e:	80 68       	ori	r24, 0x80	; 128
     d80:	8c 93       	st	X, r24
	if (!mode) //if count up mode
     d82:	80 91 70 00 	lds	r24, 0x0070
     d86:	88 23       	and	r24, r24
     d88:	09 f0       	breq	.+2      	; 0xd8c <__vector_7+0x34>
     d8a:	75 c0       	rjmp	.+234    	; 0xe76 <__vector_7+0x11e>
	{
		resetFlag = 1; /*Enable the reset flag as count mode changed*/
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	80 93 69 00 	sts	0x0069, r24
		//increment only if less than 9
		if (seconds6 < 9)
     d92:	80 91 6a 00 	lds	r24, 0x006A
     d96:	89 30       	cpi	r24, 0x09	; 9
     d98:	30 f4       	brcc	.+12     	; 0xda6 <__vector_7+0x4e>
		{
			seconds6++;
     d9a:	80 91 6a 00 	lds	r24, 0x006A
     d9e:	8f 5f       	subi	r24, 0xFF	; 255
     da0:	80 93 6a 00 	sts	0x006A, r24
     da4:	3a c0       	rjmp	.+116    	; 0xe1a <__vector_7+0xc2>
		}
		//else if to count until 59 seconds before reseting the stopwatch
		else if (hours1 == 9 && hours2 == 9 && minutes3 == 5 && minutes4 == 9
     da6:	80 91 6f 00 	lds	r24, 0x006F
     daa:	89 30       	cpi	r24, 0x09	; 9
     dac:	59 f5       	brne	.+86     	; 0xe04 <__vector_7+0xac>
     dae:	80 91 6e 00 	lds	r24, 0x006E
     db2:	89 30       	cpi	r24, 0x09	; 9
     db4:	39 f5       	brne	.+78     	; 0xe04 <__vector_7+0xac>
     db6:	80 91 6d 00 	lds	r24, 0x006D
     dba:	85 30       	cpi	r24, 0x05	; 5
     dbc:	19 f5       	brne	.+70     	; 0xe04 <__vector_7+0xac>
     dbe:	80 91 6c 00 	lds	r24, 0x006C
     dc2:	89 30       	cpi	r24, 0x09	; 9
     dc4:	f9 f4       	brne	.+62     	; 0xe04 <__vector_7+0xac>
     dc6:	80 91 6b 00 	lds	r24, 0x006B
     dca:	85 30       	cpi	r24, 0x05	; 5
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__vector_7+0xac>
     dce:	80 91 6a 00 	lds	r24, 0x006A
     dd2:	89 30       	cpi	r24, 0x09	; 9
     dd4:	b9 f4       	brne	.+46     	; 0xe04 <__vector_7+0xac>
				&& seconds5 == 5 && seconds6 == 9)
		{
			hours1 = hours2 = minutes3 = minutes4 = seconds5 = seconds6 = 0;
     dd6:	10 92 6a 00 	sts	0x006A, r1
     dda:	80 91 6a 00 	lds	r24, 0x006A
     dde:	80 93 6b 00 	sts	0x006B, r24
     de2:	80 91 6b 00 	lds	r24, 0x006B
     de6:	80 93 6c 00 	sts	0x006C, r24
     dea:	80 91 6c 00 	lds	r24, 0x006C
     dee:	80 93 6d 00 	sts	0x006D, r24
     df2:	80 91 6d 00 	lds	r24, 0x006D
     df6:	80 93 6e 00 	sts	0x006E, r24
     dfa:	80 91 6e 00 	lds	r24, 0x006E
     dfe:	80 93 6f 00 	sts	0x006F, r24
     e02:	0b c0       	rjmp	.+22     	; 0xe1a <__vector_7+0xc2>
		}
		//else if to count to 9 before clearing seconds6
		else if (seconds6 == 9)
     e04:	80 91 6a 00 	lds	r24, 0x006A
     e08:	89 30       	cpi	r24, 0x09	; 9
     e0a:	39 f4       	brne	.+14     	; 0xe1a <__vector_7+0xc2>
		{
			seconds6 = 0;
     e0c:	10 92 6a 00 	sts	0x006A, r1
			seconds5++;
     e10:	80 91 6b 00 	lds	r24, 0x006B
     e14:	8f 5f       	subi	r24, 0xFF	; 255
     e16:	80 93 6b 00 	sts	0x006B, r24
		}
		// if statements to count and reset based on max eligible value
		if (seconds5 == 6)
     e1a:	80 91 6b 00 	lds	r24, 0x006B
     e1e:	86 30       	cpi	r24, 0x06	; 6
     e20:	39 f4       	brne	.+14     	; 0xe30 <__vector_7+0xd8>
		{
			seconds5 = 0;
     e22:	10 92 6b 00 	sts	0x006B, r1
			minutes4++;
     e26:	80 91 6c 00 	lds	r24, 0x006C
     e2a:	8f 5f       	subi	r24, 0xFF	; 255
     e2c:	80 93 6c 00 	sts	0x006C, r24
		}
		if (minutes4 == 10)
     e30:	80 91 6c 00 	lds	r24, 0x006C
     e34:	8a 30       	cpi	r24, 0x0A	; 10
     e36:	39 f4       	brne	.+14     	; 0xe46 <__vector_7+0xee>
		{
			minutes4 = 0;
     e38:	10 92 6c 00 	sts	0x006C, r1
			minutes3++;
     e3c:	80 91 6d 00 	lds	r24, 0x006D
     e40:	8f 5f       	subi	r24, 0xFF	; 255
     e42:	80 93 6d 00 	sts	0x006D, r24
		}
		if (minutes3 == 6)
     e46:	80 91 6d 00 	lds	r24, 0x006D
     e4a:	86 30       	cpi	r24, 0x06	; 6
     e4c:	39 f4       	brne	.+14     	; 0xe5c <__vector_7+0x104>
		{
			minutes3 = 0;
     e4e:	10 92 6d 00 	sts	0x006D, r1
			hours2++;
     e52:	80 91 6e 00 	lds	r24, 0x006E
     e56:	8f 5f       	subi	r24, 0xFF	; 255
     e58:	80 93 6e 00 	sts	0x006E, r24
		}
		if (hours2 == 10)
     e5c:	80 91 6e 00 	lds	r24, 0x006E
     e60:	8a 30       	cpi	r24, 0x0A	; 10
     e62:	09 f0       	breq	.+2      	; 0xe66 <__vector_7+0x10e>
     e64:	de c0       	rjmp	.+444    	; 0x1022 <__vector_7+0x2ca>
		{
			hours2 = 0;
     e66:	10 92 6e 00 	sts	0x006E, r1
			hours1++;
     e6a:	80 91 6f 00 	lds	r24, 0x006F
     e6e:	8f 5f       	subi	r24, 0xFF	; 255
     e70:	80 93 6f 00 	sts	0x006F, r24
     e74:	d6 c0       	rjmp	.+428    	; 0x1022 <__vector_7+0x2ca>
		}
	}
	else
	{
		//Only decrement if one of the six 7-segment not equal 0
		if (seconds6 != 0 || seconds5 != 0 || minutes4 != 0 || minutes3 != 0
     e76:	80 91 6a 00 	lds	r24, 0x006A
     e7a:	88 23       	and	r24, r24
     e7c:	a1 f4       	brne	.+40     	; 0xea6 <__vector_7+0x14e>
     e7e:	80 91 6b 00 	lds	r24, 0x006B
     e82:	88 23       	and	r24, r24
     e84:	81 f4       	brne	.+32     	; 0xea6 <__vector_7+0x14e>
     e86:	80 91 6c 00 	lds	r24, 0x006C
     e8a:	88 23       	and	r24, r24
     e8c:	61 f4       	brne	.+24     	; 0xea6 <__vector_7+0x14e>
     e8e:	80 91 6d 00 	lds	r24, 0x006D
     e92:	88 23       	and	r24, r24
     e94:	41 f4       	brne	.+16     	; 0xea6 <__vector_7+0x14e>
     e96:	80 91 6e 00 	lds	r24, 0x006E
     e9a:	88 23       	and	r24, r24
     e9c:	21 f4       	brne	.+8      	; 0xea6 <__vector_7+0x14e>
     e9e:	80 91 6f 00 	lds	r24, 0x006F
     ea2:	88 23       	and	r24, r24
     ea4:	29 f0       	breq	.+10     	; 0xeb0 <__vector_7+0x158>
				|| hours2 != 0 || hours1 != 0)
		{
			seconds6--;
     ea6:	80 91 6a 00 	lds	r24, 0x006A
     eaa:	81 50       	subi	r24, 0x01	; 1
     eac:	80 93 6a 00 	sts	0x006A, r24
		}
		//decrement if seconds6 overflows and seconds5 not equal 0
		if (seconds5 != 0 && seconds6 == 255)
     eb0:	80 91 6b 00 	lds	r24, 0x006B
     eb4:	88 23       	and	r24, r24
     eb6:	61 f0       	breq	.+24     	; 0xed0 <__vector_7+0x178>
     eb8:	80 91 6a 00 	lds	r24, 0x006A
     ebc:	8f 3f       	cpi	r24, 0xFF	; 255
     ebe:	41 f4       	brne	.+16     	; 0xed0 <__vector_7+0x178>
		{
			seconds5--;
     ec0:	80 91 6b 00 	lds	r24, 0x006B
     ec4:	81 50       	subi	r24, 0x01	; 1
     ec6:	80 93 6b 00 	sts	0x006B, r24
			seconds6 = 9;
     eca:	89 e0       	ldi	r24, 0x09	; 9
     ecc:	80 93 6a 00 	sts	0x006A, r24
		}
		//decrement if seconds6 overflows and seconds5 equal 0 and minutes4 not equal 0
		if (minutes4 != 0 && seconds5 == 0 && seconds6 == 255)
     ed0:	80 91 6c 00 	lds	r24, 0x006C
     ed4:	88 23       	and	r24, r24
     ed6:	99 f0       	breq	.+38     	; 0xefe <__vector_7+0x1a6>
     ed8:	80 91 6b 00 	lds	r24, 0x006B
     edc:	88 23       	and	r24, r24
     ede:	79 f4       	brne	.+30     	; 0xefe <__vector_7+0x1a6>
     ee0:	80 91 6a 00 	lds	r24, 0x006A
     ee4:	8f 3f       	cpi	r24, 0xFF	; 255
     ee6:	59 f4       	brne	.+22     	; 0xefe <__vector_7+0x1a6>
		{
			minutes4--;
     ee8:	80 91 6c 00 	lds	r24, 0x006C
     eec:	81 50       	subi	r24, 0x01	; 1
     eee:	80 93 6c 00 	sts	0x006C, r24
			seconds5 = 5;
     ef2:	85 e0       	ldi	r24, 0x05	; 5
     ef4:	80 93 6b 00 	sts	0x006B, r24
			seconds6 = 9;
     ef8:	89 e0       	ldi	r24, 0x09	; 9
     efa:	80 93 6a 00 	sts	0x006A, r24
		}
		//same logic as previous statement
		if (minutes3 != 0 && minutes4 == 0 && seconds5 == 0 && seconds6 == 255)
     efe:	80 91 6d 00 	lds	r24, 0x006D
     f02:	88 23       	and	r24, r24
     f04:	d1 f0       	breq	.+52     	; 0xf3a <__vector_7+0x1e2>
     f06:	80 91 6c 00 	lds	r24, 0x006C
     f0a:	88 23       	and	r24, r24
     f0c:	b1 f4       	brne	.+44     	; 0xf3a <__vector_7+0x1e2>
     f0e:	80 91 6b 00 	lds	r24, 0x006B
     f12:	88 23       	and	r24, r24
     f14:	91 f4       	brne	.+36     	; 0xf3a <__vector_7+0x1e2>
     f16:	80 91 6a 00 	lds	r24, 0x006A
     f1a:	8f 3f       	cpi	r24, 0xFF	; 255
     f1c:	71 f4       	brne	.+28     	; 0xf3a <__vector_7+0x1e2>
		{
			minutes3--;
     f1e:	80 91 6d 00 	lds	r24, 0x006D
     f22:	81 50       	subi	r24, 0x01	; 1
     f24:	80 93 6d 00 	sts	0x006D, r24
			minutes4 = 9;
     f28:	89 e0       	ldi	r24, 0x09	; 9
     f2a:	80 93 6c 00 	sts	0x006C, r24
			seconds5 = 5;
     f2e:	85 e0       	ldi	r24, 0x05	; 5
     f30:	80 93 6b 00 	sts	0x006B, r24
			seconds6 = 9;
     f34:	89 e0       	ldi	r24, 0x09	; 9
     f36:	80 93 6a 00 	sts	0x006A, r24
		}
		//same logic as previous statement
		if (hours2 != 0 && minutes3 == 0 && minutes4 == 0 && seconds5 == 0
     f3a:	80 91 6e 00 	lds	r24, 0x006E
     f3e:	88 23       	and	r24, r24
     f40:	09 f1       	breq	.+66     	; 0xf84 <__vector_7+0x22c>
     f42:	80 91 6d 00 	lds	r24, 0x006D
     f46:	88 23       	and	r24, r24
     f48:	e9 f4       	brne	.+58     	; 0xf84 <__vector_7+0x22c>
     f4a:	80 91 6c 00 	lds	r24, 0x006C
     f4e:	88 23       	and	r24, r24
     f50:	c9 f4       	brne	.+50     	; 0xf84 <__vector_7+0x22c>
     f52:	80 91 6b 00 	lds	r24, 0x006B
     f56:	88 23       	and	r24, r24
     f58:	a9 f4       	brne	.+42     	; 0xf84 <__vector_7+0x22c>
     f5a:	80 91 6a 00 	lds	r24, 0x006A
     f5e:	8f 3f       	cpi	r24, 0xFF	; 255
     f60:	89 f4       	brne	.+34     	; 0xf84 <__vector_7+0x22c>
				&& seconds6 == 255)
		{
			hours2--;
     f62:	80 91 6e 00 	lds	r24, 0x006E
     f66:	81 50       	subi	r24, 0x01	; 1
     f68:	80 93 6e 00 	sts	0x006E, r24
			minutes3 = 5;
     f6c:	85 e0       	ldi	r24, 0x05	; 5
     f6e:	80 93 6d 00 	sts	0x006D, r24
			minutes4 = 9;
     f72:	89 e0       	ldi	r24, 0x09	; 9
     f74:	80 93 6c 00 	sts	0x006C, r24
			seconds5 = 5;
     f78:	85 e0       	ldi	r24, 0x05	; 5
     f7a:	80 93 6b 00 	sts	0x006B, r24
			seconds6 = 9;
     f7e:	89 e0       	ldi	r24, 0x09	; 9
     f80:	80 93 6a 00 	sts	0x006A, r24
		}
		//same logic as previous statement
		if (hours1 != 0 && hours2 == 0 && minutes3 == 0 && minutes4 == 0
     f84:	80 91 6f 00 	lds	r24, 0x006F
     f88:	88 23       	and	r24, r24
     f8a:	41 f1       	breq	.+80     	; 0xfdc <__vector_7+0x284>
     f8c:	80 91 6e 00 	lds	r24, 0x006E
     f90:	88 23       	and	r24, r24
     f92:	21 f5       	brne	.+72     	; 0xfdc <__vector_7+0x284>
     f94:	80 91 6d 00 	lds	r24, 0x006D
     f98:	88 23       	and	r24, r24
     f9a:	01 f5       	brne	.+64     	; 0xfdc <__vector_7+0x284>
     f9c:	80 91 6c 00 	lds	r24, 0x006C
     fa0:	88 23       	and	r24, r24
     fa2:	e1 f4       	brne	.+56     	; 0xfdc <__vector_7+0x284>
     fa4:	80 91 6b 00 	lds	r24, 0x006B
     fa8:	88 23       	and	r24, r24
     faa:	c1 f4       	brne	.+48     	; 0xfdc <__vector_7+0x284>
     fac:	80 91 6a 00 	lds	r24, 0x006A
     fb0:	8f 3f       	cpi	r24, 0xFF	; 255
     fb2:	a1 f4       	brne	.+40     	; 0xfdc <__vector_7+0x284>
				&& seconds5 == 0 && seconds6 == 255)
		{
			hours1--;
     fb4:	80 91 6f 00 	lds	r24, 0x006F
     fb8:	81 50       	subi	r24, 0x01	; 1
     fba:	80 93 6f 00 	sts	0x006F, r24
			hours2 = 9;
     fbe:	89 e0       	ldi	r24, 0x09	; 9
     fc0:	80 93 6e 00 	sts	0x006E, r24
			minutes3 = 5;
     fc4:	85 e0       	ldi	r24, 0x05	; 5
     fc6:	80 93 6d 00 	sts	0x006D, r24
			minutes4 = 9;
     fca:	89 e0       	ldi	r24, 0x09	; 9
     fcc:	80 93 6c 00 	sts	0x006C, r24
			seconds5 = 5;
     fd0:	85 e0       	ldi	r24, 0x05	; 5
     fd2:	80 93 6b 00 	sts	0x006B, r24
			seconds6 = 9;
     fd6:	89 e0       	ldi	r24, 0x09	; 9
     fd8:	80 93 6a 00 	sts	0x006A, r24
		}
		//if all count variables equal 0 and the resetflag is 1,
		//then turn on time out Buzzer/LED
		if (hours1 == 0 && hours2 == 0 && minutes3 == 0 && minutes4 == 0
     fdc:	80 91 6f 00 	lds	r24, 0x006F
     fe0:	88 23       	and	r24, r24
     fe2:	f9 f4       	brne	.+62     	; 0x1022 <__vector_7+0x2ca>
     fe4:	80 91 6e 00 	lds	r24, 0x006E
     fe8:	88 23       	and	r24, r24
     fea:	d9 f4       	brne	.+54     	; 0x1022 <__vector_7+0x2ca>
     fec:	80 91 6d 00 	lds	r24, 0x006D
     ff0:	88 23       	and	r24, r24
     ff2:	b9 f4       	brne	.+46     	; 0x1022 <__vector_7+0x2ca>
     ff4:	80 91 6c 00 	lds	r24, 0x006C
     ff8:	88 23       	and	r24, r24
     ffa:	99 f4       	brne	.+38     	; 0x1022 <__vector_7+0x2ca>
     ffc:	80 91 6b 00 	lds	r24, 0x006B
    1000:	88 23       	and	r24, r24
    1002:	79 f4       	brne	.+30     	; 0x1022 <__vector_7+0x2ca>
    1004:	80 91 6a 00 	lds	r24, 0x006A
    1008:	88 23       	and	r24, r24
    100a:	59 f4       	brne	.+22     	; 0x1022 <__vector_7+0x2ca>
    100c:	80 91 69 00 	lds	r24, 0x0069
    1010:	88 23       	and	r24, r24
    1012:	39 f0       	breq	.+14     	; 0x1022 <__vector_7+0x2ca>
				&& seconds5 == 0 && seconds6 == 0 && resetFlag)
		{
			PORTD |= (1 << PD0);
    1014:	a2 e3       	ldi	r26, 0x32	; 50
    1016:	b0 e0       	ldi	r27, 0x00	; 0
    1018:	e2 e3       	ldi	r30, 0x32	; 50
    101a:	f0 e0       	ldi	r31, 0x00	; 0
    101c:	80 81       	ld	r24, Z
    101e:	81 60       	ori	r24, 0x01	; 1
    1020:	8c 93       	st	X, r24
		}
	}
	TIFR |= (1 << OCF1A); /*Write logic one to clear the OCF1A Flag bit*/
    1022:	a8 e5       	ldi	r26, 0x58	; 88
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	e8 e5       	ldi	r30, 0x58	; 88
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	80 81       	ld	r24, Z
    102c:	80 61       	ori	r24, 0x10	; 16
    102e:	8c 93       	st	X, r24
}
    1030:	cf 91       	pop	r28
    1032:	df 91       	pop	r29
    1034:	ff 91       	pop	r31
    1036:	ef 91       	pop	r30
    1038:	bf 91       	pop	r27
    103a:	af 91       	pop	r26
    103c:	8f 91       	pop	r24
    103e:	0f 90       	pop	r0
    1040:	0f be       	out	0x3f, r0	; 63
    1042:	0f 90       	pop	r0
    1044:	1f 90       	pop	r1
    1046:	18 95       	reti

00001048 <main>:

int main(void)
{
    1048:	0f 93       	push	r16
    104a:	1f 93       	push	r17
    104c:	df 93       	push	r29
    104e:	cf 93       	push	r28
    1050:	cd b7       	in	r28, 0x3d	; 61
    1052:	de b7       	in	r29, 0x3e	; 62
    1054:	ca 50       	subi	r28, 0x0A	; 10
    1056:	d1 40       	sbci	r29, 0x01	; 1
    1058:	0f b6       	in	r0, 0x3f	; 63
    105a:	f8 94       	cli
    105c:	de bf       	out	0x3e, r29	; 62
    105e:	0f be       	out	0x3f, r0	; 63
    1060:	cd bf       	out	0x3d, r28	; 61
	//Enable Global Interrupt Request
	SREG |= (1 << 7);
    1062:	af e5       	ldi	r26, 0x5F	; 95
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	ef e5       	ldi	r30, 0x5F	; 95
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	80 68       	ori	r24, 0x80	; 128
    106e:	8c 93       	st	X, r24
	GPIO_Init();
    1070:	0e 94 a3 05 	call	0xb46	; 0xb46 <GPIO_Init>
	INT012_Init();
    1074:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <INT012_Init>
	TIMER1_Init();
    1078:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <TIMER1_Init>

	while (1)
	{
		if (!(PINB & (1 << PINB7))) /*check if change mode button pushed*/
    107c:	e6 e3       	ldi	r30, 0x36	; 54
    107e:	f0 e0       	ldi	r31, 0x00	; 0
    1080:	80 81       	ld	r24, Z
    1082:	88 23       	and	r24, r24
    1084:	0c f4       	brge	.+2      	; 0x1088 <main+0x40>
    1086:	f3 c0       	rjmp	.+486    	; 0x126e <main+0x226>
    1088:	fe 01       	movw	r30, r28
    108a:	e9 5f       	subi	r30, 0xF9	; 249
    108c:	fe 4f       	sbci	r31, 0xFE	; 254
    108e:	80 e0       	ldi	r24, 0x00	; 0
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	a0 ef       	ldi	r26, 0xF0	; 240
    1094:	b1 e4       	ldi	r27, 0x41	; 65
    1096:	80 83       	st	Z, r24
    1098:	91 83       	std	Z+1, r25	; 0x01
    109a:	a2 83       	std	Z+2, r26	; 0x02
    109c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    109e:	8e 01       	movw	r16, r28
    10a0:	0d 5f       	subi	r16, 0xFD	; 253
    10a2:	1e 4f       	sbci	r17, 0xFE	; 254
    10a4:	fe 01       	movw	r30, r28
    10a6:	e9 5f       	subi	r30, 0xF9	; 249
    10a8:	fe 4f       	sbci	r31, 0xFE	; 254
    10aa:	60 81       	ld	r22, Z
    10ac:	71 81       	ldd	r23, Z+1	; 0x01
    10ae:	82 81       	ldd	r24, Z+2	; 0x02
    10b0:	93 81       	ldd	r25, Z+3	; 0x03
    10b2:	20 e0       	ldi	r18, 0x00	; 0
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	4a e7       	ldi	r20, 0x7A	; 122
    10b8:	55 e4       	ldi	r21, 0x45	; 69
    10ba:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    10be:	dc 01       	movw	r26, r24
    10c0:	cb 01       	movw	r24, r22
    10c2:	f8 01       	movw	r30, r16
    10c4:	80 83       	st	Z, r24
    10c6:	91 83       	std	Z+1, r25	; 0x01
    10c8:	a2 83       	std	Z+2, r26	; 0x02
    10ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10cc:	fe 01       	movw	r30, r28
    10ce:	ed 5f       	subi	r30, 0xFD	; 253
    10d0:	fe 4f       	sbci	r31, 0xFE	; 254
    10d2:	60 81       	ld	r22, Z
    10d4:	71 81       	ldd	r23, Z+1	; 0x01
    10d6:	82 81       	ldd	r24, Z+2	; 0x02
    10d8:	93 81       	ldd	r25, Z+3	; 0x03
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	40 e8       	ldi	r20, 0x80	; 128
    10e0:	5f e3       	ldi	r21, 0x3F	; 63
    10e2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    10e6:	88 23       	and	r24, r24
    10e8:	44 f4       	brge	.+16     	; 0x10fa <main+0xb2>
		__ticks = 1;
    10ea:	fe 01       	movw	r30, r28
    10ec:	ef 5f       	subi	r30, 0xFF	; 255
    10ee:	fe 4f       	sbci	r31, 0xFE	; 254
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	91 83       	std	Z+1, r25	; 0x01
    10f6:	80 83       	st	Z, r24
    10f8:	64 c0       	rjmp	.+200    	; 0x11c2 <main+0x17a>
	else if (__tmp > 65535)
    10fa:	fe 01       	movw	r30, r28
    10fc:	ed 5f       	subi	r30, 0xFD	; 253
    10fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1100:	60 81       	ld	r22, Z
    1102:	71 81       	ldd	r23, Z+1	; 0x01
    1104:	82 81       	ldd	r24, Z+2	; 0x02
    1106:	93 81       	ldd	r25, Z+3	; 0x03
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	3f ef       	ldi	r19, 0xFF	; 255
    110c:	4f e7       	ldi	r20, 0x7F	; 127
    110e:	57 e4       	ldi	r21, 0x47	; 71
    1110:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1114:	18 16       	cp	r1, r24
    1116:	0c f0       	brlt	.+2      	; 0x111a <main+0xd2>
    1118:	43 c0       	rjmp	.+134    	; 0x11a0 <main+0x158>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    111a:	fe 01       	movw	r30, r28
    111c:	e9 5f       	subi	r30, 0xF9	; 249
    111e:	fe 4f       	sbci	r31, 0xFE	; 254
    1120:	60 81       	ld	r22, Z
    1122:	71 81       	ldd	r23, Z+1	; 0x01
    1124:	82 81       	ldd	r24, Z+2	; 0x02
    1126:	93 81       	ldd	r25, Z+3	; 0x03
    1128:	20 e0       	ldi	r18, 0x00	; 0
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	40 e2       	ldi	r20, 0x20	; 32
    112e:	51 e4       	ldi	r21, 0x41	; 65
    1130:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1134:	dc 01       	movw	r26, r24
    1136:	cb 01       	movw	r24, r22
    1138:	8e 01       	movw	r16, r28
    113a:	0f 5f       	subi	r16, 0xFF	; 255
    113c:	1e 4f       	sbci	r17, 0xFE	; 254
    113e:	bc 01       	movw	r22, r24
    1140:	cd 01       	movw	r24, r26
    1142:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	f8 01       	movw	r30, r16
    114c:	91 83       	std	Z+1, r25	; 0x01
    114e:	80 83       	st	Z, r24
    1150:	1f c0       	rjmp	.+62     	; 0x1190 <main+0x148>
    1152:	fe 01       	movw	r30, r28
    1154:	e1 50       	subi	r30, 0x01	; 1
    1156:	ff 4f       	sbci	r31, 0xFF	; 255
    1158:	80 e9       	ldi	r24, 0x90	; 144
    115a:	91 e0       	ldi	r25, 0x01	; 1
    115c:	91 83       	std	Z+1, r25	; 0x01
    115e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1160:	fe 01       	movw	r30, r28
    1162:	e1 50       	subi	r30, 0x01	; 1
    1164:	ff 4f       	sbci	r31, 0xFF	; 255
    1166:	80 81       	ld	r24, Z
    1168:	91 81       	ldd	r25, Z+1	; 0x01
    116a:	01 97       	sbiw	r24, 0x01	; 1
    116c:	f1 f7       	brne	.-4      	; 0x116a <main+0x122>
    116e:	fe 01       	movw	r30, r28
    1170:	e1 50       	subi	r30, 0x01	; 1
    1172:	ff 4f       	sbci	r31, 0xFF	; 255
    1174:	91 83       	std	Z+1, r25	; 0x01
    1176:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1178:	de 01       	movw	r26, r28
    117a:	af 5f       	subi	r26, 0xFF	; 255
    117c:	be 4f       	sbci	r27, 0xFE	; 254
    117e:	fe 01       	movw	r30, r28
    1180:	ef 5f       	subi	r30, 0xFF	; 255
    1182:	fe 4f       	sbci	r31, 0xFE	; 254
    1184:	80 81       	ld	r24, Z
    1186:	91 81       	ldd	r25, Z+1	; 0x01
    1188:	01 97       	sbiw	r24, 0x01	; 1
    118a:	11 96       	adiw	r26, 0x01	; 1
    118c:	9c 93       	st	X, r25
    118e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1190:	fe 01       	movw	r30, r28
    1192:	ef 5f       	subi	r30, 0xFF	; 255
    1194:	fe 4f       	sbci	r31, 0xFE	; 254
    1196:	80 81       	ld	r24, Z
    1198:	91 81       	ldd	r25, Z+1	; 0x01
    119a:	00 97       	sbiw	r24, 0x00	; 0
    119c:	d1 f6       	brne	.-76     	; 0x1152 <main+0x10a>
    119e:	28 c0       	rjmp	.+80     	; 0x11f0 <main+0x1a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11a0:	8e 01       	movw	r16, r28
    11a2:	0f 5f       	subi	r16, 0xFF	; 255
    11a4:	1e 4f       	sbci	r17, 0xFE	; 254
    11a6:	fe 01       	movw	r30, r28
    11a8:	ed 5f       	subi	r30, 0xFD	; 253
    11aa:	fe 4f       	sbci	r31, 0xFE	; 254
    11ac:	60 81       	ld	r22, Z
    11ae:	71 81       	ldd	r23, Z+1	; 0x01
    11b0:	82 81       	ldd	r24, Z+2	; 0x02
    11b2:	93 81       	ldd	r25, Z+3	; 0x03
    11b4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11b8:	dc 01       	movw	r26, r24
    11ba:	cb 01       	movw	r24, r22
    11bc:	f8 01       	movw	r30, r16
    11be:	91 83       	std	Z+1, r25	; 0x01
    11c0:	80 83       	st	Z, r24
    11c2:	de 01       	movw	r26, r28
    11c4:	a3 50       	subi	r26, 0x03	; 3
    11c6:	bf 4f       	sbci	r27, 0xFF	; 255
    11c8:	fe 01       	movw	r30, r28
    11ca:	ef 5f       	subi	r30, 0xFF	; 255
    11cc:	fe 4f       	sbci	r31, 0xFE	; 254
    11ce:	80 81       	ld	r24, Z
    11d0:	91 81       	ldd	r25, Z+1	; 0x01
    11d2:	11 96       	adiw	r26, 0x01	; 1
    11d4:	9c 93       	st	X, r25
    11d6:	8e 93       	st	-X, r24
    11d8:	fe 01       	movw	r30, r28
    11da:	e3 50       	subi	r30, 0x03	; 3
    11dc:	ff 4f       	sbci	r31, 0xFF	; 255
    11de:	80 81       	ld	r24, Z
    11e0:	91 81       	ldd	r25, Z+1	; 0x01
    11e2:	01 97       	sbiw	r24, 0x01	; 1
    11e4:	f1 f7       	brne	.-4      	; 0x11e2 <main+0x19a>
    11e6:	fe 01       	movw	r30, r28
    11e8:	e3 50       	subi	r30, 0x03	; 3
    11ea:	ff 4f       	sbci	r31, 0xFF	; 255
    11ec:	91 83       	std	Z+1, r25	; 0x01
    11ee:	80 83       	st	Z, r24
		{
			_delay_ms(30); /*To prevent signal bouncing*/
			if (!(PINB & (1 << PINB7)))
    11f0:	e6 e3       	ldi	r30, 0x36	; 54
    11f2:	f0 e0       	ldi	r31, 0x00	; 0
    11f4:	80 81       	ld	r24, Z
    11f6:	88 23       	and	r24, r24
    11f8:	14 f4       	brge	.+4      	; 0x11fe <main+0x1b6>
    11fa:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag) /*To execute rising/falling edge only once*/
    11fe:	80 91 68 00 	lds	r24, 0x0068
    1202:	88 23       	and	r24, r24
    1204:	11 f4       	brne	.+4      	; 0x120a <main+0x1c2>
    1206:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				{
					mode ^= 1; /*Toggle count mode*/
    120a:	90 91 70 00 	lds	r25, 0x0070
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	89 27       	eor	r24, r25
    1212:	80 93 70 00 	sts	0x0070, r24
					if (!mode)
    1216:	80 91 70 00 	lds	r24, 0x0070
    121a:	88 23       	and	r24, r24
    121c:	b1 f4       	brne	.+44     	; 0x124a <main+0x202>
					{
						//Turn off count down LED and time out Buzzer/LED
						//and turn on count up LED
						PORTD &= ~(1 << PD5);
    121e:	a2 e3       	ldi	r26, 0x32	; 50
    1220:	b0 e0       	ldi	r27, 0x00	; 0
    1222:	e2 e3       	ldi	r30, 0x32	; 50
    1224:	f0 e0       	ldi	r31, 0x00	; 0
    1226:	80 81       	ld	r24, Z
    1228:	8f 7d       	andi	r24, 0xDF	; 223
    122a:	8c 93       	st	X, r24
						PORTD |= (1 << PD4);
    122c:	a2 e3       	ldi	r26, 0x32	; 50
    122e:	b0 e0       	ldi	r27, 0x00	; 0
    1230:	e2 e3       	ldi	r30, 0x32	; 50
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	80 81       	ld	r24, Z
    1236:	80 61       	ori	r24, 0x10	; 16
    1238:	8c 93       	st	X, r24
						PORTD &= ~(1 << PD0);
    123a:	a2 e3       	ldi	r26, 0x32	; 50
    123c:	b0 e0       	ldi	r27, 0x00	; 0
    123e:	e2 e3       	ldi	r30, 0x32	; 50
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	8e 7f       	andi	r24, 0xFE	; 254
    1246:	8c 93       	st	X, r24
    1248:	0e c0       	rjmp	.+28     	; 0x1266 <main+0x21e>
					}
					else
					{
						//Turn off count up LED and turn on count down LED
						PORTD &= ~(1 << PD4);
    124a:	a2 e3       	ldi	r26, 0x32	; 50
    124c:	b0 e0       	ldi	r27, 0x00	; 0
    124e:	e2 e3       	ldi	r30, 0x32	; 50
    1250:	f0 e0       	ldi	r31, 0x00	; 0
    1252:	80 81       	ld	r24, Z
    1254:	8f 7e       	andi	r24, 0xEF	; 239
    1256:	8c 93       	st	X, r24
						PORTD |= (1 << PD5);
    1258:	a2 e3       	ldi	r26, 0x32	; 50
    125a:	b0 e0       	ldi	r27, 0x00	; 0
    125c:	e2 e3       	ldi	r30, 0x32	; 50
    125e:	f0 e0       	ldi	r31, 0x00	; 0
    1260:	80 81       	ld	r24, Z
    1262:	80 62       	ori	r24, 0x20	; 32
    1264:	8c 93       	st	X, r24
					}
					buttonFlag = 0; /*Clear the variable as the button is pushed*/
    1266:	10 92 68 00 	sts	0x0068, r1
    126a:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				}
			}
		}
		//HOURS 1st Digit
		else if (!(PINB & (1 << PINB0))) /*Decrement button*/
    126e:	e6 e3       	ldi	r30, 0x36	; 54
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	80 81       	ld	r24, Z
    1274:	88 2f       	mov	r24, r24
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	81 70       	andi	r24, 0x01	; 1
    127a:	90 70       	andi	r25, 0x00	; 0
    127c:	00 97       	sbiw	r24, 0x00	; 0
    127e:	09 f0       	breq	.+2      	; 0x1282 <main+0x23a>
    1280:	e3 c0       	rjmp	.+454    	; 0x1448 <main+0x400>
    1282:	fe 01       	movw	r30, r28
    1284:	e7 50       	subi	r30, 0x07	; 7
    1286:	ff 4f       	sbci	r31, 0xFF	; 255
    1288:	80 e0       	ldi	r24, 0x00	; 0
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	a0 ef       	ldi	r26, 0xF0	; 240
    128e:	b1 e4       	ldi	r27, 0x41	; 65
    1290:	80 83       	st	Z, r24
    1292:	91 83       	std	Z+1, r25	; 0x01
    1294:	a2 83       	std	Z+2, r26	; 0x02
    1296:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1298:	8e 01       	movw	r16, r28
    129a:	0b 50       	subi	r16, 0x0B	; 11
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	fe 01       	movw	r30, r28
    12a0:	e7 50       	subi	r30, 0x07	; 7
    12a2:	ff 4f       	sbci	r31, 0xFF	; 255
    12a4:	60 81       	ld	r22, Z
    12a6:	71 81       	ldd	r23, Z+1	; 0x01
    12a8:	82 81       	ldd	r24, Z+2	; 0x02
    12aa:	93 81       	ldd	r25, Z+3	; 0x03
    12ac:	20 e0       	ldi	r18, 0x00	; 0
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	4a e7       	ldi	r20, 0x7A	; 122
    12b2:	55 e4       	ldi	r21, 0x45	; 69
    12b4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    12b8:	dc 01       	movw	r26, r24
    12ba:	cb 01       	movw	r24, r22
    12bc:	f8 01       	movw	r30, r16
    12be:	80 83       	st	Z, r24
    12c0:	91 83       	std	Z+1, r25	; 0x01
    12c2:	a2 83       	std	Z+2, r26	; 0x02
    12c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12c6:	fe 01       	movw	r30, r28
    12c8:	eb 50       	subi	r30, 0x0B	; 11
    12ca:	ff 4f       	sbci	r31, 0xFF	; 255
    12cc:	60 81       	ld	r22, Z
    12ce:	71 81       	ldd	r23, Z+1	; 0x01
    12d0:	82 81       	ldd	r24, Z+2	; 0x02
    12d2:	93 81       	ldd	r25, Z+3	; 0x03
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	40 e8       	ldi	r20, 0x80	; 128
    12da:	5f e3       	ldi	r21, 0x3F	; 63
    12dc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    12e0:	88 23       	and	r24, r24
    12e2:	44 f4       	brge	.+16     	; 0x12f4 <main+0x2ac>
		__ticks = 1;
    12e4:	fe 01       	movw	r30, r28
    12e6:	ed 50       	subi	r30, 0x0D	; 13
    12e8:	ff 4f       	sbci	r31, 0xFF	; 255
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	91 83       	std	Z+1, r25	; 0x01
    12f0:	80 83       	st	Z, r24
    12f2:	64 c0       	rjmp	.+200    	; 0x13bc <main+0x374>
	else if (__tmp > 65535)
    12f4:	fe 01       	movw	r30, r28
    12f6:	eb 50       	subi	r30, 0x0B	; 11
    12f8:	ff 4f       	sbci	r31, 0xFF	; 255
    12fa:	60 81       	ld	r22, Z
    12fc:	71 81       	ldd	r23, Z+1	; 0x01
    12fe:	82 81       	ldd	r24, Z+2	; 0x02
    1300:	93 81       	ldd	r25, Z+3	; 0x03
    1302:	20 e0       	ldi	r18, 0x00	; 0
    1304:	3f ef       	ldi	r19, 0xFF	; 255
    1306:	4f e7       	ldi	r20, 0x7F	; 127
    1308:	57 e4       	ldi	r21, 0x47	; 71
    130a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    130e:	18 16       	cp	r1, r24
    1310:	0c f0       	brlt	.+2      	; 0x1314 <main+0x2cc>
    1312:	43 c0       	rjmp	.+134    	; 0x139a <main+0x352>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1314:	fe 01       	movw	r30, r28
    1316:	e7 50       	subi	r30, 0x07	; 7
    1318:	ff 4f       	sbci	r31, 0xFF	; 255
    131a:	60 81       	ld	r22, Z
    131c:	71 81       	ldd	r23, Z+1	; 0x01
    131e:	82 81       	ldd	r24, Z+2	; 0x02
    1320:	93 81       	ldd	r25, Z+3	; 0x03
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	30 e0       	ldi	r19, 0x00	; 0
    1326:	40 e2       	ldi	r20, 0x20	; 32
    1328:	51 e4       	ldi	r21, 0x41	; 65
    132a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    132e:	dc 01       	movw	r26, r24
    1330:	cb 01       	movw	r24, r22
    1332:	8e 01       	movw	r16, r28
    1334:	0d 50       	subi	r16, 0x0D	; 13
    1336:	1f 4f       	sbci	r17, 0xFF	; 255
    1338:	bc 01       	movw	r22, r24
    133a:	cd 01       	movw	r24, r26
    133c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1340:	dc 01       	movw	r26, r24
    1342:	cb 01       	movw	r24, r22
    1344:	f8 01       	movw	r30, r16
    1346:	91 83       	std	Z+1, r25	; 0x01
    1348:	80 83       	st	Z, r24
    134a:	1f c0       	rjmp	.+62     	; 0x138a <main+0x342>
    134c:	fe 01       	movw	r30, r28
    134e:	ef 50       	subi	r30, 0x0F	; 15
    1350:	ff 4f       	sbci	r31, 0xFF	; 255
    1352:	80 e9       	ldi	r24, 0x90	; 144
    1354:	91 e0       	ldi	r25, 0x01	; 1
    1356:	91 83       	std	Z+1, r25	; 0x01
    1358:	80 83       	st	Z, r24
    135a:	fe 01       	movw	r30, r28
    135c:	ef 50       	subi	r30, 0x0F	; 15
    135e:	ff 4f       	sbci	r31, 0xFF	; 255
    1360:	80 81       	ld	r24, Z
    1362:	91 81       	ldd	r25, Z+1	; 0x01
    1364:	01 97       	sbiw	r24, 0x01	; 1
    1366:	f1 f7       	brne	.-4      	; 0x1364 <main+0x31c>
    1368:	fe 01       	movw	r30, r28
    136a:	ef 50       	subi	r30, 0x0F	; 15
    136c:	ff 4f       	sbci	r31, 0xFF	; 255
    136e:	91 83       	std	Z+1, r25	; 0x01
    1370:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1372:	de 01       	movw	r26, r28
    1374:	ad 50       	subi	r26, 0x0D	; 13
    1376:	bf 4f       	sbci	r27, 0xFF	; 255
    1378:	fe 01       	movw	r30, r28
    137a:	ed 50       	subi	r30, 0x0D	; 13
    137c:	ff 4f       	sbci	r31, 0xFF	; 255
    137e:	80 81       	ld	r24, Z
    1380:	91 81       	ldd	r25, Z+1	; 0x01
    1382:	01 97       	sbiw	r24, 0x01	; 1
    1384:	11 96       	adiw	r26, 0x01	; 1
    1386:	9c 93       	st	X, r25
    1388:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    138a:	fe 01       	movw	r30, r28
    138c:	ed 50       	subi	r30, 0x0D	; 13
    138e:	ff 4f       	sbci	r31, 0xFF	; 255
    1390:	80 81       	ld	r24, Z
    1392:	91 81       	ldd	r25, Z+1	; 0x01
    1394:	00 97       	sbiw	r24, 0x00	; 0
    1396:	d1 f6       	brne	.-76     	; 0x134c <main+0x304>
    1398:	28 c0       	rjmp	.+80     	; 0x13ea <main+0x3a2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    139a:	8e 01       	movw	r16, r28
    139c:	0d 50       	subi	r16, 0x0D	; 13
    139e:	1f 4f       	sbci	r17, 0xFF	; 255
    13a0:	fe 01       	movw	r30, r28
    13a2:	eb 50       	subi	r30, 0x0B	; 11
    13a4:	ff 4f       	sbci	r31, 0xFF	; 255
    13a6:	60 81       	ld	r22, Z
    13a8:	71 81       	ldd	r23, Z+1	; 0x01
    13aa:	82 81       	ldd	r24, Z+2	; 0x02
    13ac:	93 81       	ldd	r25, Z+3	; 0x03
    13ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    13b2:	dc 01       	movw	r26, r24
    13b4:	cb 01       	movw	r24, r22
    13b6:	f8 01       	movw	r30, r16
    13b8:	91 83       	std	Z+1, r25	; 0x01
    13ba:	80 83       	st	Z, r24
    13bc:	de 01       	movw	r26, r28
    13be:	a1 51       	subi	r26, 0x11	; 17
    13c0:	bf 4f       	sbci	r27, 0xFF	; 255
    13c2:	fe 01       	movw	r30, r28
    13c4:	ed 50       	subi	r30, 0x0D	; 13
    13c6:	ff 4f       	sbci	r31, 0xFF	; 255
    13c8:	80 81       	ld	r24, Z
    13ca:	91 81       	ldd	r25, Z+1	; 0x01
    13cc:	11 96       	adiw	r26, 0x01	; 1
    13ce:	9c 93       	st	X, r25
    13d0:	8e 93       	st	-X, r24
    13d2:	fe 01       	movw	r30, r28
    13d4:	e1 51       	subi	r30, 0x11	; 17
    13d6:	ff 4f       	sbci	r31, 0xFF	; 255
    13d8:	80 81       	ld	r24, Z
    13da:	91 81       	ldd	r25, Z+1	; 0x01
    13dc:	01 97       	sbiw	r24, 0x01	; 1
    13de:	f1 f7       	brne	.-4      	; 0x13dc <main+0x394>
    13e0:	fe 01       	movw	r30, r28
    13e2:	e1 51       	subi	r30, 0x11	; 17
    13e4:	ff 4f       	sbci	r31, 0xFF	; 255
    13e6:	91 83       	std	Z+1, r25	; 0x01
    13e8:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB0)))
    13ea:	e6 e3       	ldi	r30, 0x36	; 54
    13ec:	f0 e0       	ldi	r31, 0x00	; 0
    13ee:	80 81       	ld	r24, Z
    13f0:	88 2f       	mov	r24, r24
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	81 70       	andi	r24, 0x01	; 1
    13f6:	90 70       	andi	r25, 0x00	; 0
    13f8:	00 97       	sbiw	r24, 0x00	; 0
    13fa:	11 f0       	breq	.+4      	; 0x1400 <main+0x3b8>
    13fc:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    1400:	80 91 68 00 	lds	r24, 0x0068
    1404:	88 23       	and	r24, r24
    1406:	11 f4       	brne	.+4      	; 0x140c <main+0x3c4>
    1408:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				{
					if (hours2 != 0)
    140c:	80 91 6e 00 	lds	r24, 0x006E
    1410:	88 23       	and	r24, r24
    1412:	31 f0       	breq	.+12     	; 0x1420 <main+0x3d8>
					{
						hours2--;
    1414:	80 91 6e 00 	lds	r24, 0x006E
    1418:	81 50       	subi	r24, 0x01	; 1
    141a:	80 93 6e 00 	sts	0x006E, r24
    141e:	10 c0       	rjmp	.+32     	; 0x1440 <main+0x3f8>
					}
					else if (hours1 != 0 && hours2 == 0)
    1420:	80 91 6f 00 	lds	r24, 0x006F
    1424:	88 23       	and	r24, r24
    1426:	61 f0       	breq	.+24     	; 0x1440 <main+0x3f8>
    1428:	80 91 6e 00 	lds	r24, 0x006E
    142c:	88 23       	and	r24, r24
    142e:	41 f4       	brne	.+16     	; 0x1440 <main+0x3f8>
					{
						hours1--;
    1430:	80 91 6f 00 	lds	r24, 0x006F
    1434:	81 50       	subi	r24, 0x01	; 1
    1436:	80 93 6f 00 	sts	0x006F, r24
						hours2 = 9;
    143a:	89 e0       	ldi	r24, 0x09	; 9
    143c:	80 93 6e 00 	sts	0x006E, r24
					}
					buttonFlag = 0;
    1440:	10 92 68 00 	sts	0x0068, r1
    1444:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PINB & (1 << PINB1))) /*Increment button*/
    1448:	e6 e3       	ldi	r30, 0x36	; 54
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	88 2f       	mov	r24, r24
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	82 70       	andi	r24, 0x02	; 2
    1454:	90 70       	andi	r25, 0x00	; 0
    1456:	00 97       	sbiw	r24, 0x00	; 0
    1458:	09 f0       	breq	.+2      	; 0x145c <main+0x414>
    145a:	e5 c0       	rjmp	.+458    	; 0x1626 <main+0x5de>
    145c:	fe 01       	movw	r30, r28
    145e:	e5 51       	subi	r30, 0x15	; 21
    1460:	ff 4f       	sbci	r31, 0xFF	; 255
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	a0 ef       	ldi	r26, 0xF0	; 240
    1468:	b1 e4       	ldi	r27, 0x41	; 65
    146a:	80 83       	st	Z, r24
    146c:	91 83       	std	Z+1, r25	; 0x01
    146e:	a2 83       	std	Z+2, r26	; 0x02
    1470:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1472:	8e 01       	movw	r16, r28
    1474:	09 51       	subi	r16, 0x19	; 25
    1476:	1f 4f       	sbci	r17, 0xFF	; 255
    1478:	fe 01       	movw	r30, r28
    147a:	e5 51       	subi	r30, 0x15	; 21
    147c:	ff 4f       	sbci	r31, 0xFF	; 255
    147e:	60 81       	ld	r22, Z
    1480:	71 81       	ldd	r23, Z+1	; 0x01
    1482:	82 81       	ldd	r24, Z+2	; 0x02
    1484:	93 81       	ldd	r25, Z+3	; 0x03
    1486:	20 e0       	ldi	r18, 0x00	; 0
    1488:	30 e0       	ldi	r19, 0x00	; 0
    148a:	4a e7       	ldi	r20, 0x7A	; 122
    148c:	55 e4       	ldi	r21, 0x45	; 69
    148e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1492:	dc 01       	movw	r26, r24
    1494:	cb 01       	movw	r24, r22
    1496:	f8 01       	movw	r30, r16
    1498:	80 83       	st	Z, r24
    149a:	91 83       	std	Z+1, r25	; 0x01
    149c:	a2 83       	std	Z+2, r26	; 0x02
    149e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14a0:	fe 01       	movw	r30, r28
    14a2:	e9 51       	subi	r30, 0x19	; 25
    14a4:	ff 4f       	sbci	r31, 0xFF	; 255
    14a6:	60 81       	ld	r22, Z
    14a8:	71 81       	ldd	r23, Z+1	; 0x01
    14aa:	82 81       	ldd	r24, Z+2	; 0x02
    14ac:	93 81       	ldd	r25, Z+3	; 0x03
    14ae:	20 e0       	ldi	r18, 0x00	; 0
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	40 e8       	ldi	r20, 0x80	; 128
    14b4:	5f e3       	ldi	r21, 0x3F	; 63
    14b6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    14ba:	88 23       	and	r24, r24
    14bc:	44 f4       	brge	.+16     	; 0x14ce <main+0x486>
		__ticks = 1;
    14be:	fe 01       	movw	r30, r28
    14c0:	eb 51       	subi	r30, 0x1B	; 27
    14c2:	ff 4f       	sbci	r31, 0xFF	; 255
    14c4:	81 e0       	ldi	r24, 0x01	; 1
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	91 83       	std	Z+1, r25	; 0x01
    14ca:	80 83       	st	Z, r24
    14cc:	64 c0       	rjmp	.+200    	; 0x1596 <main+0x54e>
	else if (__tmp > 65535)
    14ce:	fe 01       	movw	r30, r28
    14d0:	e9 51       	subi	r30, 0x19	; 25
    14d2:	ff 4f       	sbci	r31, 0xFF	; 255
    14d4:	60 81       	ld	r22, Z
    14d6:	71 81       	ldd	r23, Z+1	; 0x01
    14d8:	82 81       	ldd	r24, Z+2	; 0x02
    14da:	93 81       	ldd	r25, Z+3	; 0x03
    14dc:	20 e0       	ldi	r18, 0x00	; 0
    14de:	3f ef       	ldi	r19, 0xFF	; 255
    14e0:	4f e7       	ldi	r20, 0x7F	; 127
    14e2:	57 e4       	ldi	r21, 0x47	; 71
    14e4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    14e8:	18 16       	cp	r1, r24
    14ea:	0c f0       	brlt	.+2      	; 0x14ee <main+0x4a6>
    14ec:	43 c0       	rjmp	.+134    	; 0x1574 <main+0x52c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14ee:	fe 01       	movw	r30, r28
    14f0:	e5 51       	subi	r30, 0x15	; 21
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	60 81       	ld	r22, Z
    14f6:	71 81       	ldd	r23, Z+1	; 0x01
    14f8:	82 81       	ldd	r24, Z+2	; 0x02
    14fa:	93 81       	ldd	r25, Z+3	; 0x03
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	40 e2       	ldi	r20, 0x20	; 32
    1502:	51 e4       	ldi	r21, 0x41	; 65
    1504:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1508:	dc 01       	movw	r26, r24
    150a:	cb 01       	movw	r24, r22
    150c:	8e 01       	movw	r16, r28
    150e:	0b 51       	subi	r16, 0x1B	; 27
    1510:	1f 4f       	sbci	r17, 0xFF	; 255
    1512:	bc 01       	movw	r22, r24
    1514:	cd 01       	movw	r24, r26
    1516:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    151a:	dc 01       	movw	r26, r24
    151c:	cb 01       	movw	r24, r22
    151e:	f8 01       	movw	r30, r16
    1520:	91 83       	std	Z+1, r25	; 0x01
    1522:	80 83       	st	Z, r24
    1524:	1f c0       	rjmp	.+62     	; 0x1564 <main+0x51c>
    1526:	fe 01       	movw	r30, r28
    1528:	ed 51       	subi	r30, 0x1D	; 29
    152a:	ff 4f       	sbci	r31, 0xFF	; 255
    152c:	80 e9       	ldi	r24, 0x90	; 144
    152e:	91 e0       	ldi	r25, 0x01	; 1
    1530:	91 83       	std	Z+1, r25	; 0x01
    1532:	80 83       	st	Z, r24
    1534:	fe 01       	movw	r30, r28
    1536:	ed 51       	subi	r30, 0x1D	; 29
    1538:	ff 4f       	sbci	r31, 0xFF	; 255
    153a:	80 81       	ld	r24, Z
    153c:	91 81       	ldd	r25, Z+1	; 0x01
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	f1 f7       	brne	.-4      	; 0x153e <main+0x4f6>
    1542:	fe 01       	movw	r30, r28
    1544:	ed 51       	subi	r30, 0x1D	; 29
    1546:	ff 4f       	sbci	r31, 0xFF	; 255
    1548:	91 83       	std	Z+1, r25	; 0x01
    154a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    154c:	de 01       	movw	r26, r28
    154e:	ab 51       	subi	r26, 0x1B	; 27
    1550:	bf 4f       	sbci	r27, 0xFF	; 255
    1552:	fe 01       	movw	r30, r28
    1554:	eb 51       	subi	r30, 0x1B	; 27
    1556:	ff 4f       	sbci	r31, 0xFF	; 255
    1558:	80 81       	ld	r24, Z
    155a:	91 81       	ldd	r25, Z+1	; 0x01
    155c:	01 97       	sbiw	r24, 0x01	; 1
    155e:	11 96       	adiw	r26, 0x01	; 1
    1560:	9c 93       	st	X, r25
    1562:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1564:	fe 01       	movw	r30, r28
    1566:	eb 51       	subi	r30, 0x1B	; 27
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	80 81       	ld	r24, Z
    156c:	91 81       	ldd	r25, Z+1	; 0x01
    156e:	00 97       	sbiw	r24, 0x00	; 0
    1570:	d1 f6       	brne	.-76     	; 0x1526 <main+0x4de>
    1572:	28 c0       	rjmp	.+80     	; 0x15c4 <main+0x57c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1574:	8e 01       	movw	r16, r28
    1576:	0b 51       	subi	r16, 0x1B	; 27
    1578:	1f 4f       	sbci	r17, 0xFF	; 255
    157a:	fe 01       	movw	r30, r28
    157c:	e9 51       	subi	r30, 0x19	; 25
    157e:	ff 4f       	sbci	r31, 0xFF	; 255
    1580:	60 81       	ld	r22, Z
    1582:	71 81       	ldd	r23, Z+1	; 0x01
    1584:	82 81       	ldd	r24, Z+2	; 0x02
    1586:	93 81       	ldd	r25, Z+3	; 0x03
    1588:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    158c:	dc 01       	movw	r26, r24
    158e:	cb 01       	movw	r24, r22
    1590:	f8 01       	movw	r30, r16
    1592:	91 83       	std	Z+1, r25	; 0x01
    1594:	80 83       	st	Z, r24
    1596:	de 01       	movw	r26, r28
    1598:	af 51       	subi	r26, 0x1F	; 31
    159a:	bf 4f       	sbci	r27, 0xFF	; 255
    159c:	fe 01       	movw	r30, r28
    159e:	eb 51       	subi	r30, 0x1B	; 27
    15a0:	ff 4f       	sbci	r31, 0xFF	; 255
    15a2:	80 81       	ld	r24, Z
    15a4:	91 81       	ldd	r25, Z+1	; 0x01
    15a6:	11 96       	adiw	r26, 0x01	; 1
    15a8:	9c 93       	st	X, r25
    15aa:	8e 93       	st	-X, r24
    15ac:	fe 01       	movw	r30, r28
    15ae:	ef 51       	subi	r30, 0x1F	; 31
    15b0:	ff 4f       	sbci	r31, 0xFF	; 255
    15b2:	80 81       	ld	r24, Z
    15b4:	91 81       	ldd	r25, Z+1	; 0x01
    15b6:	01 97       	sbiw	r24, 0x01	; 1
    15b8:	f1 f7       	brne	.-4      	; 0x15b6 <main+0x56e>
    15ba:	fe 01       	movw	r30, r28
    15bc:	ef 51       	subi	r30, 0x1F	; 31
    15be:	ff 4f       	sbci	r31, 0xFF	; 255
    15c0:	91 83       	std	Z+1, r25	; 0x01
    15c2:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB1)))
    15c4:	e6 e3       	ldi	r30, 0x36	; 54
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	80 81       	ld	r24, Z
    15ca:	88 2f       	mov	r24, r24
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	82 70       	andi	r24, 0x02	; 2
    15d0:	90 70       	andi	r25, 0x00	; 0
    15d2:	00 97       	sbiw	r24, 0x00	; 0
    15d4:	11 f0       	breq	.+4      	; 0x15da <main+0x592>
    15d6:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    15da:	80 91 68 00 	lds	r24, 0x0068
    15de:	88 23       	and	r24, r24
    15e0:	11 f4       	brne	.+4      	; 0x15e6 <main+0x59e>
    15e2:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				{
					if (hours2 < 9)
    15e6:	80 91 6e 00 	lds	r24, 0x006E
    15ea:	89 30       	cpi	r24, 0x09	; 9
    15ec:	30 f4       	brcc	.+12     	; 0x15fa <main+0x5b2>
					{
						hours2++;
    15ee:	80 91 6e 00 	lds	r24, 0x006E
    15f2:	8f 5f       	subi	r24, 0xFF	; 255
    15f4:	80 93 6e 00 	sts	0x006E, r24
    15f8:	0f c0       	rjmp	.+30     	; 0x1618 <main+0x5d0>
					}
					else if (hours1 < 9 && hours2 == 9)
    15fa:	80 91 6f 00 	lds	r24, 0x006F
    15fe:	89 30       	cpi	r24, 0x09	; 9
    1600:	58 f4       	brcc	.+22     	; 0x1618 <main+0x5d0>
    1602:	80 91 6e 00 	lds	r24, 0x006E
    1606:	89 30       	cpi	r24, 0x09	; 9
    1608:	39 f4       	brne	.+14     	; 0x1618 <main+0x5d0>
					{
						hours2 = 0;
    160a:	10 92 6e 00 	sts	0x006E, r1
						hours1++;
    160e:	80 91 6f 00 	lds	r24, 0x006F
    1612:	8f 5f       	subi	r24, 0xFF	; 255
    1614:	80 93 6f 00 	sts	0x006F, r24
					}
					buttonFlag = 0;
    1618:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    161c:	81 e0       	ldi	r24, 0x01	; 1
    161e:	80 93 69 00 	sts	0x0069, r24
    1622:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				}
			}
		}
		//HOURS 2nd Digit
		else if (!(PIND & (1 << PIND6))) /*Decrement button*/
    1626:	e0 e3       	ldi	r30, 0x30	; 48
    1628:	f0 e0       	ldi	r31, 0x00	; 0
    162a:	80 81       	ld	r24, Z
    162c:	88 2f       	mov	r24, r24
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	80 74       	andi	r24, 0x40	; 64
    1632:	90 70       	andi	r25, 0x00	; 0
    1634:	00 97       	sbiw	r24, 0x00	; 0
    1636:	09 f0       	breq	.+2      	; 0x163a <main+0x5f2>
    1638:	d2 c0       	rjmp	.+420    	; 0x17de <main+0x796>
    163a:	fe 01       	movw	r30, r28
    163c:	e3 52       	subi	r30, 0x23	; 35
    163e:	ff 4f       	sbci	r31, 0xFF	; 255
    1640:	80 e0       	ldi	r24, 0x00	; 0
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	a0 ef       	ldi	r26, 0xF0	; 240
    1646:	b1 e4       	ldi	r27, 0x41	; 65
    1648:	80 83       	st	Z, r24
    164a:	91 83       	std	Z+1, r25	; 0x01
    164c:	a2 83       	std	Z+2, r26	; 0x02
    164e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1650:	8e 01       	movw	r16, r28
    1652:	07 52       	subi	r16, 0x27	; 39
    1654:	1f 4f       	sbci	r17, 0xFF	; 255
    1656:	fe 01       	movw	r30, r28
    1658:	e3 52       	subi	r30, 0x23	; 35
    165a:	ff 4f       	sbci	r31, 0xFF	; 255
    165c:	60 81       	ld	r22, Z
    165e:	71 81       	ldd	r23, Z+1	; 0x01
    1660:	82 81       	ldd	r24, Z+2	; 0x02
    1662:	93 81       	ldd	r25, Z+3	; 0x03
    1664:	20 e0       	ldi	r18, 0x00	; 0
    1666:	30 e0       	ldi	r19, 0x00	; 0
    1668:	4a e7       	ldi	r20, 0x7A	; 122
    166a:	55 e4       	ldi	r21, 0x45	; 69
    166c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1670:	dc 01       	movw	r26, r24
    1672:	cb 01       	movw	r24, r22
    1674:	f8 01       	movw	r30, r16
    1676:	80 83       	st	Z, r24
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	a2 83       	std	Z+2, r26	; 0x02
    167c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    167e:	fe 01       	movw	r30, r28
    1680:	e7 52       	subi	r30, 0x27	; 39
    1682:	ff 4f       	sbci	r31, 0xFF	; 255
    1684:	60 81       	ld	r22, Z
    1686:	71 81       	ldd	r23, Z+1	; 0x01
    1688:	82 81       	ldd	r24, Z+2	; 0x02
    168a:	93 81       	ldd	r25, Z+3	; 0x03
    168c:	20 e0       	ldi	r18, 0x00	; 0
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	40 e8       	ldi	r20, 0x80	; 128
    1692:	5f e3       	ldi	r21, 0x3F	; 63
    1694:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1698:	88 23       	and	r24, r24
    169a:	44 f4       	brge	.+16     	; 0x16ac <main+0x664>
		__ticks = 1;
    169c:	fe 01       	movw	r30, r28
    169e:	e9 52       	subi	r30, 0x29	; 41
    16a0:	ff 4f       	sbci	r31, 0xFF	; 255
    16a2:	81 e0       	ldi	r24, 0x01	; 1
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	91 83       	std	Z+1, r25	; 0x01
    16a8:	80 83       	st	Z, r24
    16aa:	64 c0       	rjmp	.+200    	; 0x1774 <main+0x72c>
	else if (__tmp > 65535)
    16ac:	fe 01       	movw	r30, r28
    16ae:	e7 52       	subi	r30, 0x27	; 39
    16b0:	ff 4f       	sbci	r31, 0xFF	; 255
    16b2:	60 81       	ld	r22, Z
    16b4:	71 81       	ldd	r23, Z+1	; 0x01
    16b6:	82 81       	ldd	r24, Z+2	; 0x02
    16b8:	93 81       	ldd	r25, Z+3	; 0x03
    16ba:	20 e0       	ldi	r18, 0x00	; 0
    16bc:	3f ef       	ldi	r19, 0xFF	; 255
    16be:	4f e7       	ldi	r20, 0x7F	; 127
    16c0:	57 e4       	ldi	r21, 0x47	; 71
    16c2:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    16c6:	18 16       	cp	r1, r24
    16c8:	0c f0       	brlt	.+2      	; 0x16cc <main+0x684>
    16ca:	43 c0       	rjmp	.+134    	; 0x1752 <main+0x70a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16cc:	fe 01       	movw	r30, r28
    16ce:	e3 52       	subi	r30, 0x23	; 35
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	60 81       	ld	r22, Z
    16d4:	71 81       	ldd	r23, Z+1	; 0x01
    16d6:	82 81       	ldd	r24, Z+2	; 0x02
    16d8:	93 81       	ldd	r25, Z+3	; 0x03
    16da:	20 e0       	ldi	r18, 0x00	; 0
    16dc:	30 e0       	ldi	r19, 0x00	; 0
    16de:	40 e2       	ldi	r20, 0x20	; 32
    16e0:	51 e4       	ldi	r21, 0x41	; 65
    16e2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16e6:	dc 01       	movw	r26, r24
    16e8:	cb 01       	movw	r24, r22
    16ea:	8e 01       	movw	r16, r28
    16ec:	09 52       	subi	r16, 0x29	; 41
    16ee:	1f 4f       	sbci	r17, 0xFF	; 255
    16f0:	bc 01       	movw	r22, r24
    16f2:	cd 01       	movw	r24, r26
    16f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16f8:	dc 01       	movw	r26, r24
    16fa:	cb 01       	movw	r24, r22
    16fc:	f8 01       	movw	r30, r16
    16fe:	91 83       	std	Z+1, r25	; 0x01
    1700:	80 83       	st	Z, r24
    1702:	1f c0       	rjmp	.+62     	; 0x1742 <main+0x6fa>
    1704:	fe 01       	movw	r30, r28
    1706:	eb 52       	subi	r30, 0x2B	; 43
    1708:	ff 4f       	sbci	r31, 0xFF	; 255
    170a:	80 e9       	ldi	r24, 0x90	; 144
    170c:	91 e0       	ldi	r25, 0x01	; 1
    170e:	91 83       	std	Z+1, r25	; 0x01
    1710:	80 83       	st	Z, r24
    1712:	fe 01       	movw	r30, r28
    1714:	eb 52       	subi	r30, 0x2B	; 43
    1716:	ff 4f       	sbci	r31, 0xFF	; 255
    1718:	80 81       	ld	r24, Z
    171a:	91 81       	ldd	r25, Z+1	; 0x01
    171c:	01 97       	sbiw	r24, 0x01	; 1
    171e:	f1 f7       	brne	.-4      	; 0x171c <main+0x6d4>
    1720:	fe 01       	movw	r30, r28
    1722:	eb 52       	subi	r30, 0x2B	; 43
    1724:	ff 4f       	sbci	r31, 0xFF	; 255
    1726:	91 83       	std	Z+1, r25	; 0x01
    1728:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    172a:	de 01       	movw	r26, r28
    172c:	a9 52       	subi	r26, 0x29	; 41
    172e:	bf 4f       	sbci	r27, 0xFF	; 255
    1730:	fe 01       	movw	r30, r28
    1732:	e9 52       	subi	r30, 0x29	; 41
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	80 81       	ld	r24, Z
    1738:	91 81       	ldd	r25, Z+1	; 0x01
    173a:	01 97       	sbiw	r24, 0x01	; 1
    173c:	11 96       	adiw	r26, 0x01	; 1
    173e:	9c 93       	st	X, r25
    1740:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1742:	fe 01       	movw	r30, r28
    1744:	e9 52       	subi	r30, 0x29	; 41
    1746:	ff 4f       	sbci	r31, 0xFF	; 255
    1748:	80 81       	ld	r24, Z
    174a:	91 81       	ldd	r25, Z+1	; 0x01
    174c:	00 97       	sbiw	r24, 0x00	; 0
    174e:	d1 f6       	brne	.-76     	; 0x1704 <main+0x6bc>
    1750:	28 c0       	rjmp	.+80     	; 0x17a2 <main+0x75a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1752:	8e 01       	movw	r16, r28
    1754:	09 52       	subi	r16, 0x29	; 41
    1756:	1f 4f       	sbci	r17, 0xFF	; 255
    1758:	fe 01       	movw	r30, r28
    175a:	e7 52       	subi	r30, 0x27	; 39
    175c:	ff 4f       	sbci	r31, 0xFF	; 255
    175e:	60 81       	ld	r22, Z
    1760:	71 81       	ldd	r23, Z+1	; 0x01
    1762:	82 81       	ldd	r24, Z+2	; 0x02
    1764:	93 81       	ldd	r25, Z+3	; 0x03
    1766:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    176a:	dc 01       	movw	r26, r24
    176c:	cb 01       	movw	r24, r22
    176e:	f8 01       	movw	r30, r16
    1770:	91 83       	std	Z+1, r25	; 0x01
    1772:	80 83       	st	Z, r24
    1774:	de 01       	movw	r26, r28
    1776:	ad 52       	subi	r26, 0x2D	; 45
    1778:	bf 4f       	sbci	r27, 0xFF	; 255
    177a:	fe 01       	movw	r30, r28
    177c:	e9 52       	subi	r30, 0x29	; 41
    177e:	ff 4f       	sbci	r31, 0xFF	; 255
    1780:	80 81       	ld	r24, Z
    1782:	91 81       	ldd	r25, Z+1	; 0x01
    1784:	11 96       	adiw	r26, 0x01	; 1
    1786:	9c 93       	st	X, r25
    1788:	8e 93       	st	-X, r24
    178a:	fe 01       	movw	r30, r28
    178c:	ed 52       	subi	r30, 0x2D	; 45
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	80 81       	ld	r24, Z
    1792:	91 81       	ldd	r25, Z+1	; 0x01
    1794:	01 97       	sbiw	r24, 0x01	; 1
    1796:	f1 f7       	brne	.-4      	; 0x1794 <main+0x74c>
    1798:	fe 01       	movw	r30, r28
    179a:	ed 52       	subi	r30, 0x2D	; 45
    179c:	ff 4f       	sbci	r31, 0xFF	; 255
    179e:	91 83       	std	Z+1, r25	; 0x01
    17a0:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PIND & (1 << PIND6)))
    17a2:	e0 e3       	ldi	r30, 0x30	; 48
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	80 81       	ld	r24, Z
    17a8:	88 2f       	mov	r24, r24
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	80 74       	andi	r24, 0x40	; 64
    17ae:	90 70       	andi	r25, 0x00	; 0
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	11 f0       	breq	.+4      	; 0x17b8 <main+0x770>
    17b4:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    17b8:	80 91 68 00 	lds	r24, 0x0068
    17bc:	88 23       	and	r24, r24
    17be:	11 f4       	brne	.+4      	; 0x17c4 <main+0x77c>
    17c0:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				{

					if (hours1 != 0)
    17c4:	80 91 6f 00 	lds	r24, 0x006F
    17c8:	88 23       	and	r24, r24
    17ca:	29 f0       	breq	.+10     	; 0x17d6 <main+0x78e>
					{
						hours1--;
    17cc:	80 91 6f 00 	lds	r24, 0x006F
    17d0:	81 50       	subi	r24, 0x01	; 1
    17d2:	80 93 6f 00 	sts	0x006F, r24
					}

					buttonFlag = 0;
    17d6:	10 92 68 00 	sts	0x0068, r1
    17da:	0c 94 d2 13 	jmp	0x27a4	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PIND & (1 << PIND7))) /*Increment button*/
    17de:	e0 e3       	ldi	r30, 0x30	; 48
    17e0:	f0 e0       	ldi	r31, 0x00	; 0
    17e2:	80 81       	ld	r24, Z
    17e4:	88 23       	and	r24, r24
    17e6:	0c f4       	brge	.+2      	; 0x17ea <main+0x7a2>
    17e8:	ce c0       	rjmp	.+412    	; 0x1986 <main+0x93e>
    17ea:	fe 01       	movw	r30, r28
    17ec:	e1 53       	subi	r30, 0x31	; 49
    17ee:	ff 4f       	sbci	r31, 0xFF	; 255
    17f0:	80 e0       	ldi	r24, 0x00	; 0
    17f2:	90 e0       	ldi	r25, 0x00	; 0
    17f4:	a0 ef       	ldi	r26, 0xF0	; 240
    17f6:	b1 e4       	ldi	r27, 0x41	; 65
    17f8:	80 83       	st	Z, r24
    17fa:	91 83       	std	Z+1, r25	; 0x01
    17fc:	a2 83       	std	Z+2, r26	; 0x02
    17fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1800:	8e 01       	movw	r16, r28
    1802:	05 53       	subi	r16, 0x35	; 53
    1804:	1f 4f       	sbci	r17, 0xFF	; 255
    1806:	fe 01       	movw	r30, r28
    1808:	e1 53       	subi	r30, 0x31	; 49
    180a:	ff 4f       	sbci	r31, 0xFF	; 255
    180c:	60 81       	ld	r22, Z
    180e:	71 81       	ldd	r23, Z+1	; 0x01
    1810:	82 81       	ldd	r24, Z+2	; 0x02
    1812:	93 81       	ldd	r25, Z+3	; 0x03
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	4a e7       	ldi	r20, 0x7A	; 122
    181a:	55 e4       	ldi	r21, 0x45	; 69
    181c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1820:	dc 01       	movw	r26, r24
    1822:	cb 01       	movw	r24, r22
    1824:	f8 01       	movw	r30, r16
    1826:	80 83       	st	Z, r24
    1828:	91 83       	std	Z+1, r25	; 0x01
    182a:	a2 83       	std	Z+2, r26	; 0x02
    182c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    182e:	fe 01       	movw	r30, r28
    1830:	e5 53       	subi	r30, 0x35	; 53
    1832:	ff 4f       	sbci	r31, 0xFF	; 255
    1834:	60 81       	ld	r22, Z
    1836:	71 81       	ldd	r23, Z+1	; 0x01
    1838:	82 81       	ldd	r24, Z+2	; 0x02
    183a:	93 81       	ldd	r25, Z+3	; 0x03
    183c:	20 e0       	ldi	r18, 0x00	; 0
    183e:	30 e0       	ldi	r19, 0x00	; 0
    1840:	40 e8       	ldi	r20, 0x80	; 128
    1842:	5f e3       	ldi	r21, 0x3F	; 63
    1844:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1848:	88 23       	and	r24, r24
    184a:	44 f4       	brge	.+16     	; 0x185c <main+0x814>
		__ticks = 1;
    184c:	fe 01       	movw	r30, r28
    184e:	e7 53       	subi	r30, 0x37	; 55
    1850:	ff 4f       	sbci	r31, 0xFF	; 255
    1852:	81 e0       	ldi	r24, 0x01	; 1
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	80 83       	st	Z, r24
    185a:	64 c0       	rjmp	.+200    	; 0x1924 <main+0x8dc>
	else if (__tmp > 65535)
    185c:	fe 01       	movw	r30, r28
    185e:	e5 53       	subi	r30, 0x35	; 53
    1860:	ff 4f       	sbci	r31, 0xFF	; 255
    1862:	60 81       	ld	r22, Z
    1864:	71 81       	ldd	r23, Z+1	; 0x01
    1866:	82 81       	ldd	r24, Z+2	; 0x02
    1868:	93 81       	ldd	r25, Z+3	; 0x03
    186a:	20 e0       	ldi	r18, 0x00	; 0
    186c:	3f ef       	ldi	r19, 0xFF	; 255
    186e:	4f e7       	ldi	r20, 0x7F	; 127
    1870:	57 e4       	ldi	r21, 0x47	; 71
    1872:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1876:	18 16       	cp	r1, r24
    1878:	0c f0       	brlt	.+2      	; 0x187c <main+0x834>
    187a:	43 c0       	rjmp	.+134    	; 0x1902 <main+0x8ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    187c:	fe 01       	movw	r30, r28
    187e:	e1 53       	subi	r30, 0x31	; 49
    1880:	ff 4f       	sbci	r31, 0xFF	; 255
    1882:	60 81       	ld	r22, Z
    1884:	71 81       	ldd	r23, Z+1	; 0x01
    1886:	82 81       	ldd	r24, Z+2	; 0x02
    1888:	93 81       	ldd	r25, Z+3	; 0x03
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	40 e2       	ldi	r20, 0x20	; 32
    1890:	51 e4       	ldi	r21, 0x41	; 65
    1892:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	8e 01       	movw	r16, r28
    189c:	07 53       	subi	r16, 0x37	; 55
    189e:	1f 4f       	sbci	r17, 0xFF	; 255
    18a0:	bc 01       	movw	r22, r24
    18a2:	cd 01       	movw	r24, r26
    18a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18a8:	dc 01       	movw	r26, r24
    18aa:	cb 01       	movw	r24, r22
    18ac:	f8 01       	movw	r30, r16
    18ae:	91 83       	std	Z+1, r25	; 0x01
    18b0:	80 83       	st	Z, r24
    18b2:	1f c0       	rjmp	.+62     	; 0x18f2 <main+0x8aa>
    18b4:	fe 01       	movw	r30, r28
    18b6:	e9 53       	subi	r30, 0x39	; 57
    18b8:	ff 4f       	sbci	r31, 0xFF	; 255
    18ba:	80 e9       	ldi	r24, 0x90	; 144
    18bc:	91 e0       	ldi	r25, 0x01	; 1
    18be:	91 83       	std	Z+1, r25	; 0x01
    18c0:	80 83       	st	Z, r24
    18c2:	fe 01       	movw	r30, r28
    18c4:	e9 53       	subi	r30, 0x39	; 57
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	80 81       	ld	r24, Z
    18ca:	91 81       	ldd	r25, Z+1	; 0x01
    18cc:	01 97       	sbiw	r24, 0x01	; 1
    18ce:	f1 f7       	brne	.-4      	; 0x18cc <main+0x884>
    18d0:	fe 01       	movw	r30, r28
    18d2:	e9 53       	subi	r30, 0x39	; 57
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	91 83       	std	Z+1, r25	; 0x01
    18d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18da:	de 01       	movw	r26, r28
    18dc:	a7 53       	subi	r26, 0x37	; 55
    18de:	bf 4f       	sbci	r27, 0xFF	; 255
    18e0:	fe 01       	movw	r30, r28
    18e2:	e7 53       	subi	r30, 0x37	; 55
    18e4:	ff 4f       	sbci	r31, 0xFF	; 255
    18e6:	80 81       	ld	r24, Z
    18e8:	91 81       	ldd	r25, Z+1	; 0x01
    18ea:	01 97       	sbiw	r24, 0x01	; 1
    18ec:	11 96       	adiw	r26, 0x01	; 1
    18ee:	9c 93       	st	X, r25
    18f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18f2:	fe 01       	movw	r30, r28
    18f4:	e7 53       	subi	r30, 0x37	; 55
    18f6:	ff 4f       	sbci	r31, 0xFF	; 255
    18f8:	80 81       	ld	r24, Z
    18fa:	91 81       	ldd	r25, Z+1	; 0x01
    18fc:	00 97       	sbiw	r24, 0x00	; 0
    18fe:	d1 f6       	brne	.-76     	; 0x18b4 <main+0x86c>
    1900:	28 c0       	rjmp	.+80     	; 0x1952 <main+0x90a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1902:	8e 01       	movw	r16, r28
    1904:	07 53       	subi	r16, 0x37	; 55
    1906:	1f 4f       	sbci	r17, 0xFF	; 255
    1908:	fe 01       	movw	r30, r28
    190a:	e5 53       	subi	r30, 0x35	; 53
    190c:	ff 4f       	sbci	r31, 0xFF	; 255
    190e:	60 81       	ld	r22, Z
    1910:	71 81       	ldd	r23, Z+1	; 0x01
    1912:	82 81       	ldd	r24, Z+2	; 0x02
    1914:	93 81       	ldd	r25, Z+3	; 0x03
    1916:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    191a:	dc 01       	movw	r26, r24
    191c:	cb 01       	movw	r24, r22
    191e:	f8 01       	movw	r30, r16
    1920:	91 83       	std	Z+1, r25	; 0x01
    1922:	80 83       	st	Z, r24
    1924:	de 01       	movw	r26, r28
    1926:	ab 53       	subi	r26, 0x3B	; 59
    1928:	bf 4f       	sbci	r27, 0xFF	; 255
    192a:	fe 01       	movw	r30, r28
    192c:	e7 53       	subi	r30, 0x37	; 55
    192e:	ff 4f       	sbci	r31, 0xFF	; 255
    1930:	80 81       	ld	r24, Z
    1932:	91 81       	ldd	r25, Z+1	; 0x01
    1934:	11 96       	adiw	r26, 0x01	; 1
    1936:	9c 93       	st	X, r25
    1938:	8e 93       	st	-X, r24
    193a:	fe 01       	movw	r30, r28
    193c:	eb 53       	subi	r30, 0x3B	; 59
    193e:	ff 4f       	sbci	r31, 0xFF	; 255
    1940:	80 81       	ld	r24, Z
    1942:	91 81       	ldd	r25, Z+1	; 0x01
    1944:	01 97       	sbiw	r24, 0x01	; 1
    1946:	f1 f7       	brne	.-4      	; 0x1944 <main+0x8fc>
    1948:	fe 01       	movw	r30, r28
    194a:	eb 53       	subi	r30, 0x3B	; 59
    194c:	ff 4f       	sbci	r31, 0xFF	; 255
    194e:	91 83       	std	Z+1, r25	; 0x01
    1950:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PIND & (1 << PIND7)))
    1952:	e0 e3       	ldi	r30, 0x30	; 48
    1954:	f0 e0       	ldi	r31, 0x00	; 0
    1956:	80 81       	ld	r24, Z
    1958:	88 23       	and	r24, r24
    195a:	0c f4       	brge	.+2      	; 0x195e <main+0x916>
    195c:	23 c7       	rjmp	.+3654   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    195e:	80 91 68 00 	lds	r24, 0x0068
    1962:	88 23       	and	r24, r24
    1964:	09 f4       	brne	.+2      	; 0x1968 <main+0x920>
    1966:	1e c7       	rjmp	.+3644   	; 0x27a4 <main+0x175c>
				{
					if (hours1 < 9)
    1968:	80 91 6f 00 	lds	r24, 0x006F
    196c:	89 30       	cpi	r24, 0x09	; 9
    196e:	28 f4       	brcc	.+10     	; 0x197a <main+0x932>
					{
						hours1++;
    1970:	80 91 6f 00 	lds	r24, 0x006F
    1974:	8f 5f       	subi	r24, 0xFF	; 255
    1976:	80 93 6f 00 	sts	0x006F, r24
					}

					buttonFlag = 0;
    197a:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	80 93 69 00 	sts	0x0069, r24
    1984:	0f c7       	rjmp	.+3614   	; 0x27a4 <main+0x175c>
				}
			}
		}
		//MINUTES 1st Digit
		else if (!(PINB & (1 << PINB3))) /*Decrement button*/
    1986:	e6 e3       	ldi	r30, 0x36	; 54
    1988:	f0 e0       	ldi	r31, 0x00	; 0
    198a:	80 81       	ld	r24, Z
    198c:	88 2f       	mov	r24, r24
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	88 70       	andi	r24, 0x08	; 8
    1992:	90 70       	andi	r25, 0x00	; 0
    1994:	00 97       	sbiw	r24, 0x00	; 0
    1996:	09 f0       	breq	.+2      	; 0x199a <main+0x952>
    1998:	e0 c0       	rjmp	.+448    	; 0x1b5a <main+0xb12>
    199a:	fe 01       	movw	r30, r28
    199c:	ef 53       	subi	r30, 0x3F	; 63
    199e:	ff 4f       	sbci	r31, 0xFF	; 255
    19a0:	80 e0       	ldi	r24, 0x00	; 0
    19a2:	90 e0       	ldi	r25, 0x00	; 0
    19a4:	a0 ef       	ldi	r26, 0xF0	; 240
    19a6:	b1 e4       	ldi	r27, 0x41	; 65
    19a8:	80 83       	st	Z, r24
    19aa:	91 83       	std	Z+1, r25	; 0x01
    19ac:	a2 83       	std	Z+2, r26	; 0x02
    19ae:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19b0:	8e 01       	movw	r16, r28
    19b2:	03 54       	subi	r16, 0x43	; 67
    19b4:	1f 4f       	sbci	r17, 0xFF	; 255
    19b6:	fe 01       	movw	r30, r28
    19b8:	ef 53       	subi	r30, 0x3F	; 63
    19ba:	ff 4f       	sbci	r31, 0xFF	; 255
    19bc:	60 81       	ld	r22, Z
    19be:	71 81       	ldd	r23, Z+1	; 0x01
    19c0:	82 81       	ldd	r24, Z+2	; 0x02
    19c2:	93 81       	ldd	r25, Z+3	; 0x03
    19c4:	20 e0       	ldi	r18, 0x00	; 0
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	4a e7       	ldi	r20, 0x7A	; 122
    19ca:	55 e4       	ldi	r21, 0x45	; 69
    19cc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19d0:	dc 01       	movw	r26, r24
    19d2:	cb 01       	movw	r24, r22
    19d4:	f8 01       	movw	r30, r16
    19d6:	80 83       	st	Z, r24
    19d8:	91 83       	std	Z+1, r25	; 0x01
    19da:	a2 83       	std	Z+2, r26	; 0x02
    19dc:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    19de:	fe 01       	movw	r30, r28
    19e0:	e3 54       	subi	r30, 0x43	; 67
    19e2:	ff 4f       	sbci	r31, 0xFF	; 255
    19e4:	60 81       	ld	r22, Z
    19e6:	71 81       	ldd	r23, Z+1	; 0x01
    19e8:	82 81       	ldd	r24, Z+2	; 0x02
    19ea:	93 81       	ldd	r25, Z+3	; 0x03
    19ec:	20 e0       	ldi	r18, 0x00	; 0
    19ee:	30 e0       	ldi	r19, 0x00	; 0
    19f0:	40 e8       	ldi	r20, 0x80	; 128
    19f2:	5f e3       	ldi	r21, 0x3F	; 63
    19f4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    19f8:	88 23       	and	r24, r24
    19fa:	44 f4       	brge	.+16     	; 0x1a0c <main+0x9c4>
		__ticks = 1;
    19fc:	fe 01       	movw	r30, r28
    19fe:	e5 54       	subi	r30, 0x45	; 69
    1a00:	ff 4f       	sbci	r31, 0xFF	; 255
    1a02:	81 e0       	ldi	r24, 0x01	; 1
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	91 83       	std	Z+1, r25	; 0x01
    1a08:	80 83       	st	Z, r24
    1a0a:	64 c0       	rjmp	.+200    	; 0x1ad4 <main+0xa8c>
	else if (__tmp > 65535)
    1a0c:	fe 01       	movw	r30, r28
    1a0e:	e3 54       	subi	r30, 0x43	; 67
    1a10:	ff 4f       	sbci	r31, 0xFF	; 255
    1a12:	60 81       	ld	r22, Z
    1a14:	71 81       	ldd	r23, Z+1	; 0x01
    1a16:	82 81       	ldd	r24, Z+2	; 0x02
    1a18:	93 81       	ldd	r25, Z+3	; 0x03
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	3f ef       	ldi	r19, 0xFF	; 255
    1a1e:	4f e7       	ldi	r20, 0x7F	; 127
    1a20:	57 e4       	ldi	r21, 0x47	; 71
    1a22:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a26:	18 16       	cp	r1, r24
    1a28:	0c f0       	brlt	.+2      	; 0x1a2c <main+0x9e4>
    1a2a:	43 c0       	rjmp	.+134    	; 0x1ab2 <main+0xa6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	ef 53       	subi	r30, 0x3F	; 63
    1a30:	ff 4f       	sbci	r31, 0xFF	; 255
    1a32:	60 81       	ld	r22, Z
    1a34:	71 81       	ldd	r23, Z+1	; 0x01
    1a36:	82 81       	ldd	r24, Z+2	; 0x02
    1a38:	93 81       	ldd	r25, Z+3	; 0x03
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e2       	ldi	r20, 0x20	; 32
    1a40:	51 e4       	ldi	r21, 0x41	; 65
    1a42:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a46:	dc 01       	movw	r26, r24
    1a48:	cb 01       	movw	r24, r22
    1a4a:	8e 01       	movw	r16, r28
    1a4c:	05 54       	subi	r16, 0x45	; 69
    1a4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a50:	bc 01       	movw	r22, r24
    1a52:	cd 01       	movw	r24, r26
    1a54:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a58:	dc 01       	movw	r26, r24
    1a5a:	cb 01       	movw	r24, r22
    1a5c:	f8 01       	movw	r30, r16
    1a5e:	91 83       	std	Z+1, r25	; 0x01
    1a60:	80 83       	st	Z, r24
    1a62:	1f c0       	rjmp	.+62     	; 0x1aa2 <main+0xa5a>
    1a64:	fe 01       	movw	r30, r28
    1a66:	e7 54       	subi	r30, 0x47	; 71
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 e9       	ldi	r24, 0x90	; 144
    1a6c:	91 e0       	ldi	r25, 0x01	; 1
    1a6e:	91 83       	std	Z+1, r25	; 0x01
    1a70:	80 83       	st	Z, r24
    1a72:	fe 01       	movw	r30, r28
    1a74:	e7 54       	subi	r30, 0x47	; 71
    1a76:	ff 4f       	sbci	r31, 0xFF	; 255
    1a78:	80 81       	ld	r24, Z
    1a7a:	91 81       	ldd	r25, Z+1	; 0x01
    1a7c:	01 97       	sbiw	r24, 0x01	; 1
    1a7e:	f1 f7       	brne	.-4      	; 0x1a7c <main+0xa34>
    1a80:	fe 01       	movw	r30, r28
    1a82:	e7 54       	subi	r30, 0x47	; 71
    1a84:	ff 4f       	sbci	r31, 0xFF	; 255
    1a86:	91 83       	std	Z+1, r25	; 0x01
    1a88:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a8a:	de 01       	movw	r26, r28
    1a8c:	a5 54       	subi	r26, 0x45	; 69
    1a8e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a90:	fe 01       	movw	r30, r28
    1a92:	e5 54       	subi	r30, 0x45	; 69
    1a94:	ff 4f       	sbci	r31, 0xFF	; 255
    1a96:	80 81       	ld	r24, Z
    1a98:	91 81       	ldd	r25, Z+1	; 0x01
    1a9a:	01 97       	sbiw	r24, 0x01	; 1
    1a9c:	11 96       	adiw	r26, 0x01	; 1
    1a9e:	9c 93       	st	X, r25
    1aa0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa2:	fe 01       	movw	r30, r28
    1aa4:	e5 54       	subi	r30, 0x45	; 69
    1aa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa8:	80 81       	ld	r24, Z
    1aaa:	91 81       	ldd	r25, Z+1	; 0x01
    1aac:	00 97       	sbiw	r24, 0x00	; 0
    1aae:	d1 f6       	brne	.-76     	; 0x1a64 <main+0xa1c>
    1ab0:	28 c0       	rjmp	.+80     	; 0x1b02 <main+0xaba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ab2:	8e 01       	movw	r16, r28
    1ab4:	05 54       	subi	r16, 0x45	; 69
    1ab6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ab8:	fe 01       	movw	r30, r28
    1aba:	e3 54       	subi	r30, 0x43	; 67
    1abc:	ff 4f       	sbci	r31, 0xFF	; 255
    1abe:	60 81       	ld	r22, Z
    1ac0:	71 81       	ldd	r23, Z+1	; 0x01
    1ac2:	82 81       	ldd	r24, Z+2	; 0x02
    1ac4:	93 81       	ldd	r25, Z+3	; 0x03
    1ac6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	f8 01       	movw	r30, r16
    1ad0:	91 83       	std	Z+1, r25	; 0x01
    1ad2:	80 83       	st	Z, r24
    1ad4:	de 01       	movw	r26, r28
    1ad6:	a9 54       	subi	r26, 0x49	; 73
    1ad8:	bf 4f       	sbci	r27, 0xFF	; 255
    1ada:	fe 01       	movw	r30, r28
    1adc:	e5 54       	subi	r30, 0x45	; 69
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	80 81       	ld	r24, Z
    1ae2:	91 81       	ldd	r25, Z+1	; 0x01
    1ae4:	11 96       	adiw	r26, 0x01	; 1
    1ae6:	9c 93       	st	X, r25
    1ae8:	8e 93       	st	-X, r24
    1aea:	fe 01       	movw	r30, r28
    1aec:	e9 54       	subi	r30, 0x49	; 73
    1aee:	ff 4f       	sbci	r31, 0xFF	; 255
    1af0:	80 81       	ld	r24, Z
    1af2:	91 81       	ldd	r25, Z+1	; 0x01
    1af4:	01 97       	sbiw	r24, 0x01	; 1
    1af6:	f1 f7       	brne	.-4      	; 0x1af4 <main+0xaac>
    1af8:	fe 01       	movw	r30, r28
    1afa:	e9 54       	subi	r30, 0x49	; 73
    1afc:	ff 4f       	sbci	r31, 0xFF	; 255
    1afe:	91 83       	std	Z+1, r25	; 0x01
    1b00:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB3)))
    1b02:	e6 e3       	ldi	r30, 0x36	; 54
    1b04:	f0 e0       	ldi	r31, 0x00	; 0
    1b06:	80 81       	ld	r24, Z
    1b08:	88 2f       	mov	r24, r24
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	88 70       	andi	r24, 0x08	; 8
    1b0e:	90 70       	andi	r25, 0x00	; 0
    1b10:	00 97       	sbiw	r24, 0x00	; 0
    1b12:	09 f0       	breq	.+2      	; 0x1b16 <main+0xace>
    1b14:	47 c6       	rjmp	.+3214   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    1b16:	80 91 68 00 	lds	r24, 0x0068
    1b1a:	88 23       	and	r24, r24
    1b1c:	09 f4       	brne	.+2      	; 0x1b20 <main+0xad8>
    1b1e:	42 c6       	rjmp	.+3204   	; 0x27a4 <main+0x175c>
				{
					if (minutes4 != 0)
    1b20:	80 91 6c 00 	lds	r24, 0x006C
    1b24:	88 23       	and	r24, r24
    1b26:	31 f0       	breq	.+12     	; 0x1b34 <main+0xaec>
					{
						minutes4--;
    1b28:	80 91 6c 00 	lds	r24, 0x006C
    1b2c:	81 50       	subi	r24, 0x01	; 1
    1b2e:	80 93 6c 00 	sts	0x006C, r24
    1b32:	10 c0       	rjmp	.+32     	; 0x1b54 <main+0xb0c>
					}
					else if (minutes3 != 0 && minutes4 == 0)
    1b34:	80 91 6d 00 	lds	r24, 0x006D
    1b38:	88 23       	and	r24, r24
    1b3a:	61 f0       	breq	.+24     	; 0x1b54 <main+0xb0c>
    1b3c:	80 91 6c 00 	lds	r24, 0x006C
    1b40:	88 23       	and	r24, r24
    1b42:	41 f4       	brne	.+16     	; 0x1b54 <main+0xb0c>
					{
						minutes3--;
    1b44:	80 91 6d 00 	lds	r24, 0x006D
    1b48:	81 50       	subi	r24, 0x01	; 1
    1b4a:	80 93 6d 00 	sts	0x006D, r24
						minutes4 = 9;
    1b4e:	89 e0       	ldi	r24, 0x09	; 9
    1b50:	80 93 6c 00 	sts	0x006C, r24
					}
					buttonFlag = 0;
    1b54:	10 92 68 00 	sts	0x0068, r1
    1b58:	25 c6       	rjmp	.+3146   	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PINB & (1 << PINB4))) /*Increment button*/
    1b5a:	e6 e3       	ldi	r30, 0x36	; 54
    1b5c:	f0 e0       	ldi	r31, 0x00	; 0
    1b5e:	80 81       	ld	r24, Z
    1b60:	88 2f       	mov	r24, r24
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	80 71       	andi	r24, 0x10	; 16
    1b66:	90 70       	andi	r25, 0x00	; 0
    1b68:	00 97       	sbiw	r24, 0x00	; 0
    1b6a:	09 f0       	breq	.+2      	; 0x1b6e <main+0xb26>
    1b6c:	e6 c0       	rjmp	.+460    	; 0x1d3a <main+0xcf2>
    1b6e:	fe 01       	movw	r30, r28
    1b70:	ed 54       	subi	r30, 0x4D	; 77
    1b72:	ff 4f       	sbci	r31, 0xFF	; 255
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	a0 ef       	ldi	r26, 0xF0	; 240
    1b7a:	b1 e4       	ldi	r27, 0x41	; 65
    1b7c:	80 83       	st	Z, r24
    1b7e:	91 83       	std	Z+1, r25	; 0x01
    1b80:	a2 83       	std	Z+2, r26	; 0x02
    1b82:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b84:	8e 01       	movw	r16, r28
    1b86:	01 55       	subi	r16, 0x51	; 81
    1b88:	1f 4f       	sbci	r17, 0xFF	; 255
    1b8a:	fe 01       	movw	r30, r28
    1b8c:	ed 54       	subi	r30, 0x4D	; 77
    1b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b90:	60 81       	ld	r22, Z
    1b92:	71 81       	ldd	r23, Z+1	; 0x01
    1b94:	82 81       	ldd	r24, Z+2	; 0x02
    1b96:	93 81       	ldd	r25, Z+3	; 0x03
    1b98:	20 e0       	ldi	r18, 0x00	; 0
    1b9a:	30 e0       	ldi	r19, 0x00	; 0
    1b9c:	4a e7       	ldi	r20, 0x7A	; 122
    1b9e:	55 e4       	ldi	r21, 0x45	; 69
    1ba0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ba4:	dc 01       	movw	r26, r24
    1ba6:	cb 01       	movw	r24, r22
    1ba8:	f8 01       	movw	r30, r16
    1baa:	80 83       	st	Z, r24
    1bac:	91 83       	std	Z+1, r25	; 0x01
    1bae:	a2 83       	std	Z+2, r26	; 0x02
    1bb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	e1 55       	subi	r30, 0x51	; 81
    1bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb8:	60 81       	ld	r22, Z
    1bba:	71 81       	ldd	r23, Z+1	; 0x01
    1bbc:	82 81       	ldd	r24, Z+2	; 0x02
    1bbe:	93 81       	ldd	r25, Z+3	; 0x03
    1bc0:	20 e0       	ldi	r18, 0x00	; 0
    1bc2:	30 e0       	ldi	r19, 0x00	; 0
    1bc4:	40 e8       	ldi	r20, 0x80	; 128
    1bc6:	5f e3       	ldi	r21, 0x3F	; 63
    1bc8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1bcc:	88 23       	and	r24, r24
    1bce:	44 f4       	brge	.+16     	; 0x1be0 <main+0xb98>
		__ticks = 1;
    1bd0:	fe 01       	movw	r30, r28
    1bd2:	e3 55       	subi	r30, 0x53	; 83
    1bd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd6:	81 e0       	ldi	r24, 0x01	; 1
    1bd8:	90 e0       	ldi	r25, 0x00	; 0
    1bda:	91 83       	std	Z+1, r25	; 0x01
    1bdc:	80 83       	st	Z, r24
    1bde:	64 c0       	rjmp	.+200    	; 0x1ca8 <main+0xc60>
	else if (__tmp > 65535)
    1be0:	fe 01       	movw	r30, r28
    1be2:	e1 55       	subi	r30, 0x51	; 81
    1be4:	ff 4f       	sbci	r31, 0xFF	; 255
    1be6:	60 81       	ld	r22, Z
    1be8:	71 81       	ldd	r23, Z+1	; 0x01
    1bea:	82 81       	ldd	r24, Z+2	; 0x02
    1bec:	93 81       	ldd	r25, Z+3	; 0x03
    1bee:	20 e0       	ldi	r18, 0x00	; 0
    1bf0:	3f ef       	ldi	r19, 0xFF	; 255
    1bf2:	4f e7       	ldi	r20, 0x7F	; 127
    1bf4:	57 e4       	ldi	r21, 0x47	; 71
    1bf6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1bfa:	18 16       	cp	r1, r24
    1bfc:	0c f0       	brlt	.+2      	; 0x1c00 <main+0xbb8>
    1bfe:	43 c0       	rjmp	.+134    	; 0x1c86 <main+0xc3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c00:	fe 01       	movw	r30, r28
    1c02:	ed 54       	subi	r30, 0x4D	; 77
    1c04:	ff 4f       	sbci	r31, 0xFF	; 255
    1c06:	60 81       	ld	r22, Z
    1c08:	71 81       	ldd	r23, Z+1	; 0x01
    1c0a:	82 81       	ldd	r24, Z+2	; 0x02
    1c0c:	93 81       	ldd	r25, Z+3	; 0x03
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	40 e2       	ldi	r20, 0x20	; 32
    1c14:	51 e4       	ldi	r21, 0x41	; 65
    1c16:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c1a:	dc 01       	movw	r26, r24
    1c1c:	cb 01       	movw	r24, r22
    1c1e:	8e 01       	movw	r16, r28
    1c20:	03 55       	subi	r16, 0x53	; 83
    1c22:	1f 4f       	sbci	r17, 0xFF	; 255
    1c24:	bc 01       	movw	r22, r24
    1c26:	cd 01       	movw	r24, r26
    1c28:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c2c:	dc 01       	movw	r26, r24
    1c2e:	cb 01       	movw	r24, r22
    1c30:	f8 01       	movw	r30, r16
    1c32:	91 83       	std	Z+1, r25	; 0x01
    1c34:	80 83       	st	Z, r24
    1c36:	1f c0       	rjmp	.+62     	; 0x1c76 <main+0xc2e>
    1c38:	fe 01       	movw	r30, r28
    1c3a:	e5 55       	subi	r30, 0x55	; 85
    1c3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c3e:	80 e9       	ldi	r24, 0x90	; 144
    1c40:	91 e0       	ldi	r25, 0x01	; 1
    1c42:	91 83       	std	Z+1, r25	; 0x01
    1c44:	80 83       	st	Z, r24
    1c46:	fe 01       	movw	r30, r28
    1c48:	e5 55       	subi	r30, 0x55	; 85
    1c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c4c:	80 81       	ld	r24, Z
    1c4e:	91 81       	ldd	r25, Z+1	; 0x01
    1c50:	01 97       	sbiw	r24, 0x01	; 1
    1c52:	f1 f7       	brne	.-4      	; 0x1c50 <main+0xc08>
    1c54:	fe 01       	movw	r30, r28
    1c56:	e5 55       	subi	r30, 0x55	; 85
    1c58:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5a:	91 83       	std	Z+1, r25	; 0x01
    1c5c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c5e:	de 01       	movw	r26, r28
    1c60:	a3 55       	subi	r26, 0x53	; 83
    1c62:	bf 4f       	sbci	r27, 0xFF	; 255
    1c64:	fe 01       	movw	r30, r28
    1c66:	e3 55       	subi	r30, 0x53	; 83
    1c68:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6a:	80 81       	ld	r24, Z
    1c6c:	91 81       	ldd	r25, Z+1	; 0x01
    1c6e:	01 97       	sbiw	r24, 0x01	; 1
    1c70:	11 96       	adiw	r26, 0x01	; 1
    1c72:	9c 93       	st	X, r25
    1c74:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c76:	fe 01       	movw	r30, r28
    1c78:	e3 55       	subi	r30, 0x53	; 83
    1c7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7c:	80 81       	ld	r24, Z
    1c7e:	91 81       	ldd	r25, Z+1	; 0x01
    1c80:	00 97       	sbiw	r24, 0x00	; 0
    1c82:	d1 f6       	brne	.-76     	; 0x1c38 <main+0xbf0>
    1c84:	28 c0       	rjmp	.+80     	; 0x1cd6 <main+0xc8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c86:	8e 01       	movw	r16, r28
    1c88:	03 55       	subi	r16, 0x53	; 83
    1c8a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c8c:	fe 01       	movw	r30, r28
    1c8e:	e1 55       	subi	r30, 0x51	; 81
    1c90:	ff 4f       	sbci	r31, 0xFF	; 255
    1c92:	60 81       	ld	r22, Z
    1c94:	71 81       	ldd	r23, Z+1	; 0x01
    1c96:	82 81       	ldd	r24, Z+2	; 0x02
    1c98:	93 81       	ldd	r25, Z+3	; 0x03
    1c9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c9e:	dc 01       	movw	r26, r24
    1ca0:	cb 01       	movw	r24, r22
    1ca2:	f8 01       	movw	r30, r16
    1ca4:	91 83       	std	Z+1, r25	; 0x01
    1ca6:	80 83       	st	Z, r24
    1ca8:	de 01       	movw	r26, r28
    1caa:	a7 55       	subi	r26, 0x57	; 87
    1cac:	bf 4f       	sbci	r27, 0xFF	; 255
    1cae:	fe 01       	movw	r30, r28
    1cb0:	e3 55       	subi	r30, 0x53	; 83
    1cb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb4:	80 81       	ld	r24, Z
    1cb6:	91 81       	ldd	r25, Z+1	; 0x01
    1cb8:	11 96       	adiw	r26, 0x01	; 1
    1cba:	9c 93       	st	X, r25
    1cbc:	8e 93       	st	-X, r24
    1cbe:	fe 01       	movw	r30, r28
    1cc0:	e7 55       	subi	r30, 0x57	; 87
    1cc2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cc4:	80 81       	ld	r24, Z
    1cc6:	91 81       	ldd	r25, Z+1	; 0x01
    1cc8:	01 97       	sbiw	r24, 0x01	; 1
    1cca:	f1 f7       	brne	.-4      	; 0x1cc8 <main+0xc80>
    1ccc:	fe 01       	movw	r30, r28
    1cce:	e7 55       	subi	r30, 0x57	; 87
    1cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd2:	91 83       	std	Z+1, r25	; 0x01
    1cd4:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB4)))
    1cd6:	e6 e3       	ldi	r30, 0x36	; 54
    1cd8:	f0 e0       	ldi	r31, 0x00	; 0
    1cda:	80 81       	ld	r24, Z
    1cdc:	88 2f       	mov	r24, r24
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	80 71       	andi	r24, 0x10	; 16
    1ce2:	90 70       	andi	r25, 0x00	; 0
    1ce4:	00 97       	sbiw	r24, 0x00	; 0
    1ce6:	09 f0       	breq	.+2      	; 0x1cea <main+0xca2>
    1ce8:	5d c5       	rjmp	.+2746   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    1cea:	80 91 68 00 	lds	r24, 0x0068
    1cee:	88 23       	and	r24, r24
    1cf0:	09 f4       	brne	.+2      	; 0x1cf4 <main+0xcac>
    1cf2:	58 c5       	rjmp	.+2736   	; 0x27a4 <main+0x175c>
				{
					if (minutes4 < 9 && minutes3 <= 5)
    1cf4:	80 91 6c 00 	lds	r24, 0x006C
    1cf8:	89 30       	cpi	r24, 0x09	; 9
    1cfa:	50 f4       	brcc	.+20     	; 0x1d10 <main+0xcc8>
    1cfc:	80 91 6d 00 	lds	r24, 0x006D
    1d00:	86 30       	cpi	r24, 0x06	; 6
    1d02:	30 f4       	brcc	.+12     	; 0x1d10 <main+0xcc8>
					{
						minutes4++;
    1d04:	80 91 6c 00 	lds	r24, 0x006C
    1d08:	8f 5f       	subi	r24, 0xFF	; 255
    1d0a:	80 93 6c 00 	sts	0x006C, r24
    1d0e:	0f c0       	rjmp	.+30     	; 0x1d2e <main+0xce6>
					}
					else if (minutes3 < 5 && minutes4 == 9)
    1d10:	80 91 6d 00 	lds	r24, 0x006D
    1d14:	85 30       	cpi	r24, 0x05	; 5
    1d16:	58 f4       	brcc	.+22     	; 0x1d2e <main+0xce6>
    1d18:	80 91 6c 00 	lds	r24, 0x006C
    1d1c:	89 30       	cpi	r24, 0x09	; 9
    1d1e:	39 f4       	brne	.+14     	; 0x1d2e <main+0xce6>
					{
						minutes4 = 0;
    1d20:	10 92 6c 00 	sts	0x006C, r1
						minutes3++;
    1d24:	80 91 6d 00 	lds	r24, 0x006D
    1d28:	8f 5f       	subi	r24, 0xFF	; 255
    1d2a:	80 93 6d 00 	sts	0x006D, r24
					}
					buttonFlag = 0;
    1d2e:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    1d32:	81 e0       	ldi	r24, 0x01	; 1
    1d34:	80 93 69 00 	sts	0x0069, r24
    1d38:	35 c5       	rjmp	.+2666   	; 0x27a4 <main+0x175c>
				}
			}
		}
		//MINUTES 2nd Digit
		else if (!(PINA & (1 << PINA6))) /*Decrement button*/
    1d3a:	e9 e3       	ldi	r30, 0x39	; 57
    1d3c:	f0 e0       	ldi	r31, 0x00	; 0
    1d3e:	80 81       	ld	r24, Z
    1d40:	88 2f       	mov	r24, r24
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	80 74       	andi	r24, 0x40	; 64
    1d46:	90 70       	andi	r25, 0x00	; 0
    1d48:	00 97       	sbiw	r24, 0x00	; 0
    1d4a:	09 f0       	breq	.+2      	; 0x1d4e <main+0xd06>
    1d4c:	cf c0       	rjmp	.+414    	; 0x1eec <main+0xea4>
    1d4e:	fe 01       	movw	r30, r28
    1d50:	eb 55       	subi	r30, 0x5B	; 91
    1d52:	ff 4f       	sbci	r31, 0xFF	; 255
    1d54:	80 e0       	ldi	r24, 0x00	; 0
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	a0 ef       	ldi	r26, 0xF0	; 240
    1d5a:	b1 e4       	ldi	r27, 0x41	; 65
    1d5c:	80 83       	st	Z, r24
    1d5e:	91 83       	std	Z+1, r25	; 0x01
    1d60:	a2 83       	std	Z+2, r26	; 0x02
    1d62:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d64:	8e 01       	movw	r16, r28
    1d66:	0f 55       	subi	r16, 0x5F	; 95
    1d68:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6a:	fe 01       	movw	r30, r28
    1d6c:	eb 55       	subi	r30, 0x5B	; 91
    1d6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d70:	60 81       	ld	r22, Z
    1d72:	71 81       	ldd	r23, Z+1	; 0x01
    1d74:	82 81       	ldd	r24, Z+2	; 0x02
    1d76:	93 81       	ldd	r25, Z+3	; 0x03
    1d78:	20 e0       	ldi	r18, 0x00	; 0
    1d7a:	30 e0       	ldi	r19, 0x00	; 0
    1d7c:	4a e7       	ldi	r20, 0x7A	; 122
    1d7e:	55 e4       	ldi	r21, 0x45	; 69
    1d80:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d84:	dc 01       	movw	r26, r24
    1d86:	cb 01       	movw	r24, r22
    1d88:	f8 01       	movw	r30, r16
    1d8a:	80 83       	st	Z, r24
    1d8c:	91 83       	std	Z+1, r25	; 0x01
    1d8e:	a2 83       	std	Z+2, r26	; 0x02
    1d90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d92:	fe 01       	movw	r30, r28
    1d94:	ef 55       	subi	r30, 0x5F	; 95
    1d96:	ff 4f       	sbci	r31, 0xFF	; 255
    1d98:	60 81       	ld	r22, Z
    1d9a:	71 81       	ldd	r23, Z+1	; 0x01
    1d9c:	82 81       	ldd	r24, Z+2	; 0x02
    1d9e:	93 81       	ldd	r25, Z+3	; 0x03
    1da0:	20 e0       	ldi	r18, 0x00	; 0
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	40 e8       	ldi	r20, 0x80	; 128
    1da6:	5f e3       	ldi	r21, 0x3F	; 63
    1da8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1dac:	88 23       	and	r24, r24
    1dae:	44 f4       	brge	.+16     	; 0x1dc0 <main+0xd78>
		__ticks = 1;
    1db0:	fe 01       	movw	r30, r28
    1db2:	e1 56       	subi	r30, 0x61	; 97
    1db4:	ff 4f       	sbci	r31, 0xFF	; 255
    1db6:	81 e0       	ldi	r24, 0x01	; 1
    1db8:	90 e0       	ldi	r25, 0x00	; 0
    1dba:	91 83       	std	Z+1, r25	; 0x01
    1dbc:	80 83       	st	Z, r24
    1dbe:	64 c0       	rjmp	.+200    	; 0x1e88 <main+0xe40>
	else if (__tmp > 65535)
    1dc0:	fe 01       	movw	r30, r28
    1dc2:	ef 55       	subi	r30, 0x5F	; 95
    1dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc6:	60 81       	ld	r22, Z
    1dc8:	71 81       	ldd	r23, Z+1	; 0x01
    1dca:	82 81       	ldd	r24, Z+2	; 0x02
    1dcc:	93 81       	ldd	r25, Z+3	; 0x03
    1dce:	20 e0       	ldi	r18, 0x00	; 0
    1dd0:	3f ef       	ldi	r19, 0xFF	; 255
    1dd2:	4f e7       	ldi	r20, 0x7F	; 127
    1dd4:	57 e4       	ldi	r21, 0x47	; 71
    1dd6:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1dda:	18 16       	cp	r1, r24
    1ddc:	0c f0       	brlt	.+2      	; 0x1de0 <main+0xd98>
    1dde:	43 c0       	rjmp	.+134    	; 0x1e66 <main+0xe1e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1de0:	fe 01       	movw	r30, r28
    1de2:	eb 55       	subi	r30, 0x5B	; 91
    1de4:	ff 4f       	sbci	r31, 0xFF	; 255
    1de6:	60 81       	ld	r22, Z
    1de8:	71 81       	ldd	r23, Z+1	; 0x01
    1dea:	82 81       	ldd	r24, Z+2	; 0x02
    1dec:	93 81       	ldd	r25, Z+3	; 0x03
    1dee:	20 e0       	ldi	r18, 0x00	; 0
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	40 e2       	ldi	r20, 0x20	; 32
    1df4:	51 e4       	ldi	r21, 0x41	; 65
    1df6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
    1dfe:	8e 01       	movw	r16, r28
    1e00:	01 56       	subi	r16, 0x61	; 97
    1e02:	1f 4f       	sbci	r17, 0xFF	; 255
    1e04:	bc 01       	movw	r22, r24
    1e06:	cd 01       	movw	r24, r26
    1e08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e0c:	dc 01       	movw	r26, r24
    1e0e:	cb 01       	movw	r24, r22
    1e10:	f8 01       	movw	r30, r16
    1e12:	91 83       	std	Z+1, r25	; 0x01
    1e14:	80 83       	st	Z, r24
    1e16:	1f c0       	rjmp	.+62     	; 0x1e56 <main+0xe0e>
    1e18:	fe 01       	movw	r30, r28
    1e1a:	e3 56       	subi	r30, 0x63	; 99
    1e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e1e:	80 e9       	ldi	r24, 0x90	; 144
    1e20:	91 e0       	ldi	r25, 0x01	; 1
    1e22:	91 83       	std	Z+1, r25	; 0x01
    1e24:	80 83       	st	Z, r24
    1e26:	fe 01       	movw	r30, r28
    1e28:	e3 56       	subi	r30, 0x63	; 99
    1e2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2c:	80 81       	ld	r24, Z
    1e2e:	91 81       	ldd	r25, Z+1	; 0x01
    1e30:	01 97       	sbiw	r24, 0x01	; 1
    1e32:	f1 f7       	brne	.-4      	; 0x1e30 <main+0xde8>
    1e34:	fe 01       	movw	r30, r28
    1e36:	e3 56       	subi	r30, 0x63	; 99
    1e38:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e3e:	de 01       	movw	r26, r28
    1e40:	a1 56       	subi	r26, 0x61	; 97
    1e42:	bf 4f       	sbci	r27, 0xFF	; 255
    1e44:	fe 01       	movw	r30, r28
    1e46:	e1 56       	subi	r30, 0x61	; 97
    1e48:	ff 4f       	sbci	r31, 0xFF	; 255
    1e4a:	80 81       	ld	r24, Z
    1e4c:	91 81       	ldd	r25, Z+1	; 0x01
    1e4e:	01 97       	sbiw	r24, 0x01	; 1
    1e50:	11 96       	adiw	r26, 0x01	; 1
    1e52:	9c 93       	st	X, r25
    1e54:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e56:	fe 01       	movw	r30, r28
    1e58:	e1 56       	subi	r30, 0x61	; 97
    1e5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e5c:	80 81       	ld	r24, Z
    1e5e:	91 81       	ldd	r25, Z+1	; 0x01
    1e60:	00 97       	sbiw	r24, 0x00	; 0
    1e62:	d1 f6       	brne	.-76     	; 0x1e18 <main+0xdd0>
    1e64:	28 c0       	rjmp	.+80     	; 0x1eb6 <main+0xe6e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e66:	8e 01       	movw	r16, r28
    1e68:	01 56       	subi	r16, 0x61	; 97
    1e6a:	1f 4f       	sbci	r17, 0xFF	; 255
    1e6c:	fe 01       	movw	r30, r28
    1e6e:	ef 55       	subi	r30, 0x5F	; 95
    1e70:	ff 4f       	sbci	r31, 0xFF	; 255
    1e72:	60 81       	ld	r22, Z
    1e74:	71 81       	ldd	r23, Z+1	; 0x01
    1e76:	82 81       	ldd	r24, Z+2	; 0x02
    1e78:	93 81       	ldd	r25, Z+3	; 0x03
    1e7a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e7e:	dc 01       	movw	r26, r24
    1e80:	cb 01       	movw	r24, r22
    1e82:	f8 01       	movw	r30, r16
    1e84:	91 83       	std	Z+1, r25	; 0x01
    1e86:	80 83       	st	Z, r24
    1e88:	de 01       	movw	r26, r28
    1e8a:	a5 56       	subi	r26, 0x65	; 101
    1e8c:	bf 4f       	sbci	r27, 0xFF	; 255
    1e8e:	fe 01       	movw	r30, r28
    1e90:	e1 56       	subi	r30, 0x61	; 97
    1e92:	ff 4f       	sbci	r31, 0xFF	; 255
    1e94:	80 81       	ld	r24, Z
    1e96:	91 81       	ldd	r25, Z+1	; 0x01
    1e98:	11 96       	adiw	r26, 0x01	; 1
    1e9a:	9c 93       	st	X, r25
    1e9c:	8e 93       	st	-X, r24
    1e9e:	fe 01       	movw	r30, r28
    1ea0:	e5 56       	subi	r30, 0x65	; 101
    1ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea4:	80 81       	ld	r24, Z
    1ea6:	91 81       	ldd	r25, Z+1	; 0x01
    1ea8:	01 97       	sbiw	r24, 0x01	; 1
    1eaa:	f1 f7       	brne	.-4      	; 0x1ea8 <main+0xe60>
    1eac:	fe 01       	movw	r30, r28
    1eae:	e5 56       	subi	r30, 0x65	; 101
    1eb0:	ff 4f       	sbci	r31, 0xFF	; 255
    1eb2:	91 83       	std	Z+1, r25	; 0x01
    1eb4:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINA & (1 << PINA6)))
    1eb6:	e9 e3       	ldi	r30, 0x39	; 57
    1eb8:	f0 e0       	ldi	r31, 0x00	; 0
    1eba:	80 81       	ld	r24, Z
    1ebc:	88 2f       	mov	r24, r24
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	80 74       	andi	r24, 0x40	; 64
    1ec2:	90 70       	andi	r25, 0x00	; 0
    1ec4:	00 97       	sbiw	r24, 0x00	; 0
    1ec6:	09 f0       	breq	.+2      	; 0x1eca <main+0xe82>
    1ec8:	6d c4       	rjmp	.+2266   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    1eca:	80 91 68 00 	lds	r24, 0x0068
    1ece:	88 23       	and	r24, r24
    1ed0:	09 f4       	brne	.+2      	; 0x1ed4 <main+0xe8c>
    1ed2:	68 c4       	rjmp	.+2256   	; 0x27a4 <main+0x175c>
				{
					if (minutes3 != 0)
    1ed4:	80 91 6d 00 	lds	r24, 0x006D
    1ed8:	88 23       	and	r24, r24
    1eda:	29 f0       	breq	.+10     	; 0x1ee6 <main+0xe9e>
					{
						minutes3--;
    1edc:	80 91 6d 00 	lds	r24, 0x006D
    1ee0:	81 50       	subi	r24, 0x01	; 1
    1ee2:	80 93 6d 00 	sts	0x006D, r24
					}
					buttonFlag = 0;
    1ee6:	10 92 68 00 	sts	0x0068, r1
    1eea:	5c c4       	rjmp	.+2232   	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PINA & (1 << PINA7))) /*Increment button*/
    1eec:	e9 e3       	ldi	r30, 0x39	; 57
    1eee:	f0 e0       	ldi	r31, 0x00	; 0
    1ef0:	80 81       	ld	r24, Z
    1ef2:	88 23       	and	r24, r24
    1ef4:	0c f4       	brge	.+2      	; 0x1ef8 <main+0xeb0>
    1ef6:	ce c0       	rjmp	.+412    	; 0x2094 <main+0x104c>
    1ef8:	fe 01       	movw	r30, r28
    1efa:	e9 56       	subi	r30, 0x69	; 105
    1efc:	ff 4f       	sbci	r31, 0xFF	; 255
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	a0 ef       	ldi	r26, 0xF0	; 240
    1f04:	b1 e4       	ldi	r27, 0x41	; 65
    1f06:	80 83       	st	Z, r24
    1f08:	91 83       	std	Z+1, r25	; 0x01
    1f0a:	a2 83       	std	Z+2, r26	; 0x02
    1f0c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f0e:	8e 01       	movw	r16, r28
    1f10:	0d 56       	subi	r16, 0x6D	; 109
    1f12:	1f 4f       	sbci	r17, 0xFF	; 255
    1f14:	fe 01       	movw	r30, r28
    1f16:	e9 56       	subi	r30, 0x69	; 105
    1f18:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1a:	60 81       	ld	r22, Z
    1f1c:	71 81       	ldd	r23, Z+1	; 0x01
    1f1e:	82 81       	ldd	r24, Z+2	; 0x02
    1f20:	93 81       	ldd	r25, Z+3	; 0x03
    1f22:	20 e0       	ldi	r18, 0x00	; 0
    1f24:	30 e0       	ldi	r19, 0x00	; 0
    1f26:	4a e7       	ldi	r20, 0x7A	; 122
    1f28:	55 e4       	ldi	r21, 0x45	; 69
    1f2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f2e:	dc 01       	movw	r26, r24
    1f30:	cb 01       	movw	r24, r22
    1f32:	f8 01       	movw	r30, r16
    1f34:	80 83       	st	Z, r24
    1f36:	91 83       	std	Z+1, r25	; 0x01
    1f38:	a2 83       	std	Z+2, r26	; 0x02
    1f3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	ed 56       	subi	r30, 0x6D	; 109
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	60 81       	ld	r22, Z
    1f44:	71 81       	ldd	r23, Z+1	; 0x01
    1f46:	82 81       	ldd	r24, Z+2	; 0x02
    1f48:	93 81       	ldd	r25, Z+3	; 0x03
    1f4a:	20 e0       	ldi	r18, 0x00	; 0
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	40 e8       	ldi	r20, 0x80	; 128
    1f50:	5f e3       	ldi	r21, 0x3F	; 63
    1f52:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1f56:	88 23       	and	r24, r24
    1f58:	44 f4       	brge	.+16     	; 0x1f6a <main+0xf22>
		__ticks = 1;
    1f5a:	fe 01       	movw	r30, r28
    1f5c:	ef 56       	subi	r30, 0x6F	; 111
    1f5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	91 83       	std	Z+1, r25	; 0x01
    1f66:	80 83       	st	Z, r24
    1f68:	64 c0       	rjmp	.+200    	; 0x2032 <main+0xfea>
	else if (__tmp > 65535)
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	ed 56       	subi	r30, 0x6D	; 109
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	60 81       	ld	r22, Z
    1f72:	71 81       	ldd	r23, Z+1	; 0x01
    1f74:	82 81       	ldd	r24, Z+2	; 0x02
    1f76:	93 81       	ldd	r25, Z+3	; 0x03
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	3f ef       	ldi	r19, 0xFF	; 255
    1f7c:	4f e7       	ldi	r20, 0x7F	; 127
    1f7e:	57 e4       	ldi	r21, 0x47	; 71
    1f80:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1f84:	18 16       	cp	r1, r24
    1f86:	0c f0       	brlt	.+2      	; 0x1f8a <main+0xf42>
    1f88:	43 c0       	rjmp	.+134    	; 0x2010 <main+0xfc8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f8a:	fe 01       	movw	r30, r28
    1f8c:	e9 56       	subi	r30, 0x69	; 105
    1f8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	20 e0       	ldi	r18, 0x00	; 0
    1f9a:	30 e0       	ldi	r19, 0x00	; 0
    1f9c:	40 e2       	ldi	r20, 0x20	; 32
    1f9e:	51 e4       	ldi	r21, 0x41	; 65
    1fa0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	8e 01       	movw	r16, r28
    1faa:	0f 56       	subi	r16, 0x6F	; 111
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	bc 01       	movw	r22, r24
    1fb0:	cd 01       	movw	r24, r26
    1fb2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fb6:	dc 01       	movw	r26, r24
    1fb8:	cb 01       	movw	r24, r22
    1fba:	f8 01       	movw	r30, r16
    1fbc:	91 83       	std	Z+1, r25	; 0x01
    1fbe:	80 83       	st	Z, r24
    1fc0:	1f c0       	rjmp	.+62     	; 0x2000 <main+0xfb8>
    1fc2:	fe 01       	movw	r30, r28
    1fc4:	e1 57       	subi	r30, 0x71	; 113
    1fc6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc8:	80 e9       	ldi	r24, 0x90	; 144
    1fca:	91 e0       	ldi	r25, 0x01	; 1
    1fcc:	91 83       	std	Z+1, r25	; 0x01
    1fce:	80 83       	st	Z, r24
    1fd0:	fe 01       	movw	r30, r28
    1fd2:	e1 57       	subi	r30, 0x71	; 113
    1fd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd6:	80 81       	ld	r24, Z
    1fd8:	91 81       	ldd	r25, Z+1	; 0x01
    1fda:	01 97       	sbiw	r24, 0x01	; 1
    1fdc:	f1 f7       	brne	.-4      	; 0x1fda <main+0xf92>
    1fde:	fe 01       	movw	r30, r28
    1fe0:	e1 57       	subi	r30, 0x71	; 113
    1fe2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe4:	91 83       	std	Z+1, r25	; 0x01
    1fe6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fe8:	de 01       	movw	r26, r28
    1fea:	af 56       	subi	r26, 0x6F	; 111
    1fec:	bf 4f       	sbci	r27, 0xFF	; 255
    1fee:	fe 01       	movw	r30, r28
    1ff0:	ef 56       	subi	r30, 0x6F	; 111
    1ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff4:	80 81       	ld	r24, Z
    1ff6:	91 81       	ldd	r25, Z+1	; 0x01
    1ff8:	01 97       	sbiw	r24, 0x01	; 1
    1ffa:	11 96       	adiw	r26, 0x01	; 1
    1ffc:	9c 93       	st	X, r25
    1ffe:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2000:	fe 01       	movw	r30, r28
    2002:	ef 56       	subi	r30, 0x6F	; 111
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	80 81       	ld	r24, Z
    2008:	91 81       	ldd	r25, Z+1	; 0x01
    200a:	00 97       	sbiw	r24, 0x00	; 0
    200c:	d1 f6       	brne	.-76     	; 0x1fc2 <main+0xf7a>
    200e:	28 c0       	rjmp	.+80     	; 0x2060 <main+0x1018>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2010:	8e 01       	movw	r16, r28
    2012:	0f 56       	subi	r16, 0x6F	; 111
    2014:	1f 4f       	sbci	r17, 0xFF	; 255
    2016:	fe 01       	movw	r30, r28
    2018:	ed 56       	subi	r30, 0x6D	; 109
    201a:	ff 4f       	sbci	r31, 0xFF	; 255
    201c:	60 81       	ld	r22, Z
    201e:	71 81       	ldd	r23, Z+1	; 0x01
    2020:	82 81       	ldd	r24, Z+2	; 0x02
    2022:	93 81       	ldd	r25, Z+3	; 0x03
    2024:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2028:	dc 01       	movw	r26, r24
    202a:	cb 01       	movw	r24, r22
    202c:	f8 01       	movw	r30, r16
    202e:	91 83       	std	Z+1, r25	; 0x01
    2030:	80 83       	st	Z, r24
    2032:	de 01       	movw	r26, r28
    2034:	a3 57       	subi	r26, 0x73	; 115
    2036:	bf 4f       	sbci	r27, 0xFF	; 255
    2038:	fe 01       	movw	r30, r28
    203a:	ef 56       	subi	r30, 0x6F	; 111
    203c:	ff 4f       	sbci	r31, 0xFF	; 255
    203e:	80 81       	ld	r24, Z
    2040:	91 81       	ldd	r25, Z+1	; 0x01
    2042:	11 96       	adiw	r26, 0x01	; 1
    2044:	9c 93       	st	X, r25
    2046:	8e 93       	st	-X, r24
    2048:	fe 01       	movw	r30, r28
    204a:	e3 57       	subi	r30, 0x73	; 115
    204c:	ff 4f       	sbci	r31, 0xFF	; 255
    204e:	80 81       	ld	r24, Z
    2050:	91 81       	ldd	r25, Z+1	; 0x01
    2052:	01 97       	sbiw	r24, 0x01	; 1
    2054:	f1 f7       	brne	.-4      	; 0x2052 <main+0x100a>
    2056:	fe 01       	movw	r30, r28
    2058:	e3 57       	subi	r30, 0x73	; 115
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	91 83       	std	Z+1, r25	; 0x01
    205e:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINA & (1 << PINA7)))
    2060:	e9 e3       	ldi	r30, 0x39	; 57
    2062:	f0 e0       	ldi	r31, 0x00	; 0
    2064:	80 81       	ld	r24, Z
    2066:	88 23       	and	r24, r24
    2068:	0c f4       	brge	.+2      	; 0x206c <main+0x1024>
    206a:	9c c3       	rjmp	.+1848   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    206c:	80 91 68 00 	lds	r24, 0x0068
    2070:	88 23       	and	r24, r24
    2072:	09 f4       	brne	.+2      	; 0x2076 <main+0x102e>
    2074:	97 c3       	rjmp	.+1838   	; 0x27a4 <main+0x175c>
				{
					if (minutes3 < 5)
    2076:	80 91 6d 00 	lds	r24, 0x006D
    207a:	85 30       	cpi	r24, 0x05	; 5
    207c:	28 f4       	brcc	.+10     	; 0x2088 <main+0x1040>
					{
						minutes3++;
    207e:	80 91 6d 00 	lds	r24, 0x006D
    2082:	8f 5f       	subi	r24, 0xFF	; 255
    2084:	80 93 6d 00 	sts	0x006D, r24
					}
					buttonFlag = 0;
    2088:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    208c:	81 e0       	ldi	r24, 0x01	; 1
    208e:	80 93 69 00 	sts	0x0069, r24
    2092:	88 c3       	rjmp	.+1808   	; 0x27a4 <main+0x175c>
				}
			}
		}
		//SECONDS 1st Digit
		else if (!(PINB & (1 << PINB5))) /*Decrement button*/
    2094:	e6 e3       	ldi	r30, 0x36	; 54
    2096:	f0 e0       	ldi	r31, 0x00	; 0
    2098:	80 81       	ld	r24, Z
    209a:	88 2f       	mov	r24, r24
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	80 72       	andi	r24, 0x20	; 32
    20a0:	90 70       	andi	r25, 0x00	; 0
    20a2:	00 97       	sbiw	r24, 0x00	; 0
    20a4:	09 f0       	breq	.+2      	; 0x20a8 <main+0x1060>
    20a6:	e0 c0       	rjmp	.+448    	; 0x2268 <main+0x1220>
    20a8:	fe 01       	movw	r30, r28
    20aa:	e7 57       	subi	r30, 0x77	; 119
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	80 e0       	ldi	r24, 0x00	; 0
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	a0 ef       	ldi	r26, 0xF0	; 240
    20b4:	b1 e4       	ldi	r27, 0x41	; 65
    20b6:	80 83       	st	Z, r24
    20b8:	91 83       	std	Z+1, r25	; 0x01
    20ba:	a2 83       	std	Z+2, r26	; 0x02
    20bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20be:	8e 01       	movw	r16, r28
    20c0:	0b 57       	subi	r16, 0x7B	; 123
    20c2:	1f 4f       	sbci	r17, 0xFF	; 255
    20c4:	fe 01       	movw	r30, r28
    20c6:	e7 57       	subi	r30, 0x77	; 119
    20c8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ca:	60 81       	ld	r22, Z
    20cc:	71 81       	ldd	r23, Z+1	; 0x01
    20ce:	82 81       	ldd	r24, Z+2	; 0x02
    20d0:	93 81       	ldd	r25, Z+3	; 0x03
    20d2:	20 e0       	ldi	r18, 0x00	; 0
    20d4:	30 e0       	ldi	r19, 0x00	; 0
    20d6:	4a e7       	ldi	r20, 0x7A	; 122
    20d8:	55 e4       	ldi	r21, 0x45	; 69
    20da:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20de:	dc 01       	movw	r26, r24
    20e0:	cb 01       	movw	r24, r22
    20e2:	f8 01       	movw	r30, r16
    20e4:	80 83       	st	Z, r24
    20e6:	91 83       	std	Z+1, r25	; 0x01
    20e8:	a2 83       	std	Z+2, r26	; 0x02
    20ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20ec:	fe 01       	movw	r30, r28
    20ee:	eb 57       	subi	r30, 0x7B	; 123
    20f0:	ff 4f       	sbci	r31, 0xFF	; 255
    20f2:	60 81       	ld	r22, Z
    20f4:	71 81       	ldd	r23, Z+1	; 0x01
    20f6:	82 81       	ldd	r24, Z+2	; 0x02
    20f8:	93 81       	ldd	r25, Z+3	; 0x03
    20fa:	20 e0       	ldi	r18, 0x00	; 0
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	40 e8       	ldi	r20, 0x80	; 128
    2100:	5f e3       	ldi	r21, 0x3F	; 63
    2102:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2106:	88 23       	and	r24, r24
    2108:	44 f4       	brge	.+16     	; 0x211a <main+0x10d2>
		__ticks = 1;
    210a:	fe 01       	movw	r30, r28
    210c:	ed 57       	subi	r30, 0x7D	; 125
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	81 e0       	ldi	r24, 0x01	; 1
    2112:	90 e0       	ldi	r25, 0x00	; 0
    2114:	91 83       	std	Z+1, r25	; 0x01
    2116:	80 83       	st	Z, r24
    2118:	64 c0       	rjmp	.+200    	; 0x21e2 <main+0x119a>
	else if (__tmp > 65535)
    211a:	fe 01       	movw	r30, r28
    211c:	eb 57       	subi	r30, 0x7B	; 123
    211e:	ff 4f       	sbci	r31, 0xFF	; 255
    2120:	60 81       	ld	r22, Z
    2122:	71 81       	ldd	r23, Z+1	; 0x01
    2124:	82 81       	ldd	r24, Z+2	; 0x02
    2126:	93 81       	ldd	r25, Z+3	; 0x03
    2128:	20 e0       	ldi	r18, 0x00	; 0
    212a:	3f ef       	ldi	r19, 0xFF	; 255
    212c:	4f e7       	ldi	r20, 0x7F	; 127
    212e:	57 e4       	ldi	r21, 0x47	; 71
    2130:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2134:	18 16       	cp	r1, r24
    2136:	0c f0       	brlt	.+2      	; 0x213a <main+0x10f2>
    2138:	43 c0       	rjmp	.+134    	; 0x21c0 <main+0x1178>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    213a:	fe 01       	movw	r30, r28
    213c:	e7 57       	subi	r30, 0x77	; 119
    213e:	ff 4f       	sbci	r31, 0xFF	; 255
    2140:	60 81       	ld	r22, Z
    2142:	71 81       	ldd	r23, Z+1	; 0x01
    2144:	82 81       	ldd	r24, Z+2	; 0x02
    2146:	93 81       	ldd	r25, Z+3	; 0x03
    2148:	20 e0       	ldi	r18, 0x00	; 0
    214a:	30 e0       	ldi	r19, 0x00	; 0
    214c:	40 e2       	ldi	r20, 0x20	; 32
    214e:	51 e4       	ldi	r21, 0x41	; 65
    2150:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2154:	dc 01       	movw	r26, r24
    2156:	cb 01       	movw	r24, r22
    2158:	8e 01       	movw	r16, r28
    215a:	0d 57       	subi	r16, 0x7D	; 125
    215c:	1f 4f       	sbci	r17, 0xFF	; 255
    215e:	bc 01       	movw	r22, r24
    2160:	cd 01       	movw	r24, r26
    2162:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2166:	dc 01       	movw	r26, r24
    2168:	cb 01       	movw	r24, r22
    216a:	f8 01       	movw	r30, r16
    216c:	91 83       	std	Z+1, r25	; 0x01
    216e:	80 83       	st	Z, r24
    2170:	1f c0       	rjmp	.+62     	; 0x21b0 <main+0x1168>
    2172:	fe 01       	movw	r30, r28
    2174:	ef 57       	subi	r30, 0x7F	; 127
    2176:	ff 4f       	sbci	r31, 0xFF	; 255
    2178:	80 e9       	ldi	r24, 0x90	; 144
    217a:	91 e0       	ldi	r25, 0x01	; 1
    217c:	91 83       	std	Z+1, r25	; 0x01
    217e:	80 83       	st	Z, r24
    2180:	fe 01       	movw	r30, r28
    2182:	ef 57       	subi	r30, 0x7F	; 127
    2184:	ff 4f       	sbci	r31, 0xFF	; 255
    2186:	80 81       	ld	r24, Z
    2188:	91 81       	ldd	r25, Z+1	; 0x01
    218a:	01 97       	sbiw	r24, 0x01	; 1
    218c:	f1 f7       	brne	.-4      	; 0x218a <main+0x1142>
    218e:	fe 01       	movw	r30, r28
    2190:	ef 57       	subi	r30, 0x7F	; 127
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	91 83       	std	Z+1, r25	; 0x01
    2196:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2198:	de 01       	movw	r26, r28
    219a:	ad 57       	subi	r26, 0x7D	; 125
    219c:	bf 4f       	sbci	r27, 0xFF	; 255
    219e:	fe 01       	movw	r30, r28
    21a0:	ed 57       	subi	r30, 0x7D	; 125
    21a2:	ff 4f       	sbci	r31, 0xFF	; 255
    21a4:	80 81       	ld	r24, Z
    21a6:	91 81       	ldd	r25, Z+1	; 0x01
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	11 96       	adiw	r26, 0x01	; 1
    21ac:	9c 93       	st	X, r25
    21ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21b0:	fe 01       	movw	r30, r28
    21b2:	ed 57       	subi	r30, 0x7D	; 125
    21b4:	ff 4f       	sbci	r31, 0xFF	; 255
    21b6:	80 81       	ld	r24, Z
    21b8:	91 81       	ldd	r25, Z+1	; 0x01
    21ba:	00 97       	sbiw	r24, 0x00	; 0
    21bc:	d1 f6       	brne	.-76     	; 0x2172 <main+0x112a>
    21be:	28 c0       	rjmp	.+80     	; 0x2210 <main+0x11c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21c0:	8e 01       	movw	r16, r28
    21c2:	0d 57       	subi	r16, 0x7D	; 125
    21c4:	1f 4f       	sbci	r17, 0xFF	; 255
    21c6:	fe 01       	movw	r30, r28
    21c8:	eb 57       	subi	r30, 0x7B	; 123
    21ca:	ff 4f       	sbci	r31, 0xFF	; 255
    21cc:	60 81       	ld	r22, Z
    21ce:	71 81       	ldd	r23, Z+1	; 0x01
    21d0:	82 81       	ldd	r24, Z+2	; 0x02
    21d2:	93 81       	ldd	r25, Z+3	; 0x03
    21d4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21d8:	dc 01       	movw	r26, r24
    21da:	cb 01       	movw	r24, r22
    21dc:	f8 01       	movw	r30, r16
    21de:	91 83       	std	Z+1, r25	; 0x01
    21e0:	80 83       	st	Z, r24
    21e2:	de 01       	movw	r26, r28
    21e4:	a1 58       	subi	r26, 0x81	; 129
    21e6:	bf 4f       	sbci	r27, 0xFF	; 255
    21e8:	fe 01       	movw	r30, r28
    21ea:	ed 57       	subi	r30, 0x7D	; 125
    21ec:	ff 4f       	sbci	r31, 0xFF	; 255
    21ee:	80 81       	ld	r24, Z
    21f0:	91 81       	ldd	r25, Z+1	; 0x01
    21f2:	11 96       	adiw	r26, 0x01	; 1
    21f4:	9c 93       	st	X, r25
    21f6:	8e 93       	st	-X, r24
    21f8:	fe 01       	movw	r30, r28
    21fa:	e1 58       	subi	r30, 0x81	; 129
    21fc:	ff 4f       	sbci	r31, 0xFF	; 255
    21fe:	80 81       	ld	r24, Z
    2200:	91 81       	ldd	r25, Z+1	; 0x01
    2202:	01 97       	sbiw	r24, 0x01	; 1
    2204:	f1 f7       	brne	.-4      	; 0x2202 <main+0x11ba>
    2206:	fe 01       	movw	r30, r28
    2208:	e1 58       	subi	r30, 0x81	; 129
    220a:	ff 4f       	sbci	r31, 0xFF	; 255
    220c:	91 83       	std	Z+1, r25	; 0x01
    220e:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB5)))
    2210:	e6 e3       	ldi	r30, 0x36	; 54
    2212:	f0 e0       	ldi	r31, 0x00	; 0
    2214:	80 81       	ld	r24, Z
    2216:	88 2f       	mov	r24, r24
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	80 72       	andi	r24, 0x20	; 32
    221c:	90 70       	andi	r25, 0x00	; 0
    221e:	00 97       	sbiw	r24, 0x00	; 0
    2220:	09 f0       	breq	.+2      	; 0x2224 <main+0x11dc>
    2222:	c0 c2       	rjmp	.+1408   	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    2224:	80 91 68 00 	lds	r24, 0x0068
    2228:	88 23       	and	r24, r24
    222a:	09 f4       	brne	.+2      	; 0x222e <main+0x11e6>
    222c:	bb c2       	rjmp	.+1398   	; 0x27a4 <main+0x175c>
				{
					if (seconds6 != 0)
    222e:	80 91 6a 00 	lds	r24, 0x006A
    2232:	88 23       	and	r24, r24
    2234:	31 f0       	breq	.+12     	; 0x2242 <main+0x11fa>
					{
						seconds6--;
    2236:	80 91 6a 00 	lds	r24, 0x006A
    223a:	81 50       	subi	r24, 0x01	; 1
    223c:	80 93 6a 00 	sts	0x006A, r24
    2240:	10 c0       	rjmp	.+32     	; 0x2262 <main+0x121a>
					}
					else if (seconds5 != 0 && seconds6 == 0)
    2242:	80 91 6b 00 	lds	r24, 0x006B
    2246:	88 23       	and	r24, r24
    2248:	61 f0       	breq	.+24     	; 0x2262 <main+0x121a>
    224a:	80 91 6a 00 	lds	r24, 0x006A
    224e:	88 23       	and	r24, r24
    2250:	41 f4       	brne	.+16     	; 0x2262 <main+0x121a>
					{
						seconds5--;
    2252:	80 91 6b 00 	lds	r24, 0x006B
    2256:	81 50       	subi	r24, 0x01	; 1
    2258:	80 93 6b 00 	sts	0x006B, r24
						seconds6 = 9;
    225c:	89 e0       	ldi	r24, 0x09	; 9
    225e:	80 93 6a 00 	sts	0x006A, r24
					}
					buttonFlag = 0;
    2262:	10 92 68 00 	sts	0x0068, r1
    2266:	9e c2       	rjmp	.+1340   	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PINB & (1 << PINB6))) /*Increment button*/
    2268:	e6 e3       	ldi	r30, 0x36	; 54
    226a:	f0 e0       	ldi	r31, 0x00	; 0
    226c:	80 81       	ld	r24, Z
    226e:	88 2f       	mov	r24, r24
    2270:	90 e0       	ldi	r25, 0x00	; 0
    2272:	80 74       	andi	r24, 0x40	; 64
    2274:	90 70       	andi	r25, 0x00	; 0
    2276:	00 97       	sbiw	r24, 0x00	; 0
    2278:	09 f0       	breq	.+2      	; 0x227c <main+0x1234>
    227a:	e6 c0       	rjmp	.+460    	; 0x2448 <main+0x1400>
    227c:	fe 01       	movw	r30, r28
    227e:	e5 58       	subi	r30, 0x85	; 133
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	80 e0       	ldi	r24, 0x00	; 0
    2284:	90 e0       	ldi	r25, 0x00	; 0
    2286:	a0 ef       	ldi	r26, 0xF0	; 240
    2288:	b1 e4       	ldi	r27, 0x41	; 65
    228a:	80 83       	st	Z, r24
    228c:	91 83       	std	Z+1, r25	; 0x01
    228e:	a2 83       	std	Z+2, r26	; 0x02
    2290:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2292:	8e 01       	movw	r16, r28
    2294:	09 58       	subi	r16, 0x89	; 137
    2296:	1f 4f       	sbci	r17, 0xFF	; 255
    2298:	fe 01       	movw	r30, r28
    229a:	e5 58       	subi	r30, 0x85	; 133
    229c:	ff 4f       	sbci	r31, 0xFF	; 255
    229e:	60 81       	ld	r22, Z
    22a0:	71 81       	ldd	r23, Z+1	; 0x01
    22a2:	82 81       	ldd	r24, Z+2	; 0x02
    22a4:	93 81       	ldd	r25, Z+3	; 0x03
    22a6:	20 e0       	ldi	r18, 0x00	; 0
    22a8:	30 e0       	ldi	r19, 0x00	; 0
    22aa:	4a e7       	ldi	r20, 0x7A	; 122
    22ac:	55 e4       	ldi	r21, 0x45	; 69
    22ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    22b2:	dc 01       	movw	r26, r24
    22b4:	cb 01       	movw	r24, r22
    22b6:	f8 01       	movw	r30, r16
    22b8:	80 83       	st	Z, r24
    22ba:	91 83       	std	Z+1, r25	; 0x01
    22bc:	a2 83       	std	Z+2, r26	; 0x02
    22be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22c0:	fe 01       	movw	r30, r28
    22c2:	e9 58       	subi	r30, 0x89	; 137
    22c4:	ff 4f       	sbci	r31, 0xFF	; 255
    22c6:	60 81       	ld	r22, Z
    22c8:	71 81       	ldd	r23, Z+1	; 0x01
    22ca:	82 81       	ldd	r24, Z+2	; 0x02
    22cc:	93 81       	ldd	r25, Z+3	; 0x03
    22ce:	20 e0       	ldi	r18, 0x00	; 0
    22d0:	30 e0       	ldi	r19, 0x00	; 0
    22d2:	40 e8       	ldi	r20, 0x80	; 128
    22d4:	5f e3       	ldi	r21, 0x3F	; 63
    22d6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    22da:	88 23       	and	r24, r24
    22dc:	44 f4       	brge	.+16     	; 0x22ee <main+0x12a6>
		__ticks = 1;
    22de:	fe 01       	movw	r30, r28
    22e0:	eb 58       	subi	r30, 0x8B	; 139
    22e2:	ff 4f       	sbci	r31, 0xFF	; 255
    22e4:	81 e0       	ldi	r24, 0x01	; 1
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	91 83       	std	Z+1, r25	; 0x01
    22ea:	80 83       	st	Z, r24
    22ec:	64 c0       	rjmp	.+200    	; 0x23b6 <main+0x136e>
	else if (__tmp > 65535)
    22ee:	fe 01       	movw	r30, r28
    22f0:	e9 58       	subi	r30, 0x89	; 137
    22f2:	ff 4f       	sbci	r31, 0xFF	; 255
    22f4:	60 81       	ld	r22, Z
    22f6:	71 81       	ldd	r23, Z+1	; 0x01
    22f8:	82 81       	ldd	r24, Z+2	; 0x02
    22fa:	93 81       	ldd	r25, Z+3	; 0x03
    22fc:	20 e0       	ldi	r18, 0x00	; 0
    22fe:	3f ef       	ldi	r19, 0xFF	; 255
    2300:	4f e7       	ldi	r20, 0x7F	; 127
    2302:	57 e4       	ldi	r21, 0x47	; 71
    2304:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2308:	18 16       	cp	r1, r24
    230a:	0c f0       	brlt	.+2      	; 0x230e <main+0x12c6>
    230c:	43 c0       	rjmp	.+134    	; 0x2394 <main+0x134c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    230e:	fe 01       	movw	r30, r28
    2310:	e5 58       	subi	r30, 0x85	; 133
    2312:	ff 4f       	sbci	r31, 0xFF	; 255
    2314:	60 81       	ld	r22, Z
    2316:	71 81       	ldd	r23, Z+1	; 0x01
    2318:	82 81       	ldd	r24, Z+2	; 0x02
    231a:	93 81       	ldd	r25, Z+3	; 0x03
    231c:	20 e0       	ldi	r18, 0x00	; 0
    231e:	30 e0       	ldi	r19, 0x00	; 0
    2320:	40 e2       	ldi	r20, 0x20	; 32
    2322:	51 e4       	ldi	r21, 0x41	; 65
    2324:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2328:	dc 01       	movw	r26, r24
    232a:	cb 01       	movw	r24, r22
    232c:	8e 01       	movw	r16, r28
    232e:	0b 58       	subi	r16, 0x8B	; 139
    2330:	1f 4f       	sbci	r17, 0xFF	; 255
    2332:	bc 01       	movw	r22, r24
    2334:	cd 01       	movw	r24, r26
    2336:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    233a:	dc 01       	movw	r26, r24
    233c:	cb 01       	movw	r24, r22
    233e:	f8 01       	movw	r30, r16
    2340:	91 83       	std	Z+1, r25	; 0x01
    2342:	80 83       	st	Z, r24
    2344:	1f c0       	rjmp	.+62     	; 0x2384 <main+0x133c>
    2346:	fe 01       	movw	r30, r28
    2348:	ed 58       	subi	r30, 0x8D	; 141
    234a:	ff 4f       	sbci	r31, 0xFF	; 255
    234c:	80 e9       	ldi	r24, 0x90	; 144
    234e:	91 e0       	ldi	r25, 0x01	; 1
    2350:	91 83       	std	Z+1, r25	; 0x01
    2352:	80 83       	st	Z, r24
    2354:	fe 01       	movw	r30, r28
    2356:	ed 58       	subi	r30, 0x8D	; 141
    2358:	ff 4f       	sbci	r31, 0xFF	; 255
    235a:	80 81       	ld	r24, Z
    235c:	91 81       	ldd	r25, Z+1	; 0x01
    235e:	01 97       	sbiw	r24, 0x01	; 1
    2360:	f1 f7       	brne	.-4      	; 0x235e <main+0x1316>
    2362:	fe 01       	movw	r30, r28
    2364:	ed 58       	subi	r30, 0x8D	; 141
    2366:	ff 4f       	sbci	r31, 0xFF	; 255
    2368:	91 83       	std	Z+1, r25	; 0x01
    236a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    236c:	de 01       	movw	r26, r28
    236e:	ab 58       	subi	r26, 0x8B	; 139
    2370:	bf 4f       	sbci	r27, 0xFF	; 255
    2372:	fe 01       	movw	r30, r28
    2374:	eb 58       	subi	r30, 0x8B	; 139
    2376:	ff 4f       	sbci	r31, 0xFF	; 255
    2378:	80 81       	ld	r24, Z
    237a:	91 81       	ldd	r25, Z+1	; 0x01
    237c:	01 97       	sbiw	r24, 0x01	; 1
    237e:	11 96       	adiw	r26, 0x01	; 1
    2380:	9c 93       	st	X, r25
    2382:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2384:	fe 01       	movw	r30, r28
    2386:	eb 58       	subi	r30, 0x8B	; 139
    2388:	ff 4f       	sbci	r31, 0xFF	; 255
    238a:	80 81       	ld	r24, Z
    238c:	91 81       	ldd	r25, Z+1	; 0x01
    238e:	00 97       	sbiw	r24, 0x00	; 0
    2390:	d1 f6       	brne	.-76     	; 0x2346 <main+0x12fe>
    2392:	28 c0       	rjmp	.+80     	; 0x23e4 <main+0x139c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2394:	8e 01       	movw	r16, r28
    2396:	0b 58       	subi	r16, 0x8B	; 139
    2398:	1f 4f       	sbci	r17, 0xFF	; 255
    239a:	fe 01       	movw	r30, r28
    239c:	e9 58       	subi	r30, 0x89	; 137
    239e:	ff 4f       	sbci	r31, 0xFF	; 255
    23a0:	60 81       	ld	r22, Z
    23a2:	71 81       	ldd	r23, Z+1	; 0x01
    23a4:	82 81       	ldd	r24, Z+2	; 0x02
    23a6:	93 81       	ldd	r25, Z+3	; 0x03
    23a8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23ac:	dc 01       	movw	r26, r24
    23ae:	cb 01       	movw	r24, r22
    23b0:	f8 01       	movw	r30, r16
    23b2:	91 83       	std	Z+1, r25	; 0x01
    23b4:	80 83       	st	Z, r24
    23b6:	de 01       	movw	r26, r28
    23b8:	af 58       	subi	r26, 0x8F	; 143
    23ba:	bf 4f       	sbci	r27, 0xFF	; 255
    23bc:	fe 01       	movw	r30, r28
    23be:	eb 58       	subi	r30, 0x8B	; 139
    23c0:	ff 4f       	sbci	r31, 0xFF	; 255
    23c2:	80 81       	ld	r24, Z
    23c4:	91 81       	ldd	r25, Z+1	; 0x01
    23c6:	11 96       	adiw	r26, 0x01	; 1
    23c8:	9c 93       	st	X, r25
    23ca:	8e 93       	st	-X, r24
    23cc:	fe 01       	movw	r30, r28
    23ce:	ef 58       	subi	r30, 0x8F	; 143
    23d0:	ff 4f       	sbci	r31, 0xFF	; 255
    23d2:	80 81       	ld	r24, Z
    23d4:	91 81       	ldd	r25, Z+1	; 0x01
    23d6:	01 97       	sbiw	r24, 0x01	; 1
    23d8:	f1 f7       	brne	.-4      	; 0x23d6 <main+0x138e>
    23da:	fe 01       	movw	r30, r28
    23dc:	ef 58       	subi	r30, 0x8F	; 143
    23de:	ff 4f       	sbci	r31, 0xFF	; 255
    23e0:	91 83       	std	Z+1, r25	; 0x01
    23e2:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINB & (1 << PINB6)))
    23e4:	e6 e3       	ldi	r30, 0x36	; 54
    23e6:	f0 e0       	ldi	r31, 0x00	; 0
    23e8:	80 81       	ld	r24, Z
    23ea:	88 2f       	mov	r24, r24
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	80 74       	andi	r24, 0x40	; 64
    23f0:	90 70       	andi	r25, 0x00	; 0
    23f2:	00 97       	sbiw	r24, 0x00	; 0
    23f4:	09 f0       	breq	.+2      	; 0x23f8 <main+0x13b0>
    23f6:	d6 c1       	rjmp	.+940    	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    23f8:	80 91 68 00 	lds	r24, 0x0068
    23fc:	88 23       	and	r24, r24
    23fe:	09 f4       	brne	.+2      	; 0x2402 <main+0x13ba>
    2400:	d1 c1       	rjmp	.+930    	; 0x27a4 <main+0x175c>
				{
					if (seconds6 < 9 && seconds5 <= 5)
    2402:	80 91 6a 00 	lds	r24, 0x006A
    2406:	89 30       	cpi	r24, 0x09	; 9
    2408:	50 f4       	brcc	.+20     	; 0x241e <main+0x13d6>
    240a:	80 91 6b 00 	lds	r24, 0x006B
    240e:	86 30       	cpi	r24, 0x06	; 6
    2410:	30 f4       	brcc	.+12     	; 0x241e <main+0x13d6>
					{
						seconds6++;
    2412:	80 91 6a 00 	lds	r24, 0x006A
    2416:	8f 5f       	subi	r24, 0xFF	; 255
    2418:	80 93 6a 00 	sts	0x006A, r24
    241c:	0f c0       	rjmp	.+30     	; 0x243c <main+0x13f4>
					}
					else if (seconds5 < 5 && seconds6 == 9)
    241e:	80 91 6b 00 	lds	r24, 0x006B
    2422:	85 30       	cpi	r24, 0x05	; 5
    2424:	58 f4       	brcc	.+22     	; 0x243c <main+0x13f4>
    2426:	80 91 6a 00 	lds	r24, 0x006A
    242a:	89 30       	cpi	r24, 0x09	; 9
    242c:	39 f4       	brne	.+14     	; 0x243c <main+0x13f4>
					{
						seconds6 = 0;
    242e:	10 92 6a 00 	sts	0x006A, r1
						seconds5++;
    2432:	80 91 6b 00 	lds	r24, 0x006B
    2436:	8f 5f       	subi	r24, 0xFF	; 255
    2438:	80 93 6b 00 	sts	0x006B, r24
					}
					buttonFlag = 0;
    243c:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    2440:	81 e0       	ldi	r24, 0x01	; 1
    2442:	80 93 69 00 	sts	0x0069, r24
    2446:	ae c1       	rjmp	.+860    	; 0x27a4 <main+0x175c>
				}
			}
		}
		//SECONDS 2nd Digit
		else if (!(PINC & (1 << PINC6))) /*Decrement button*/
    2448:	e3 e3       	ldi	r30, 0x33	; 51
    244a:	f0 e0       	ldi	r31, 0x00	; 0
    244c:	80 81       	ld	r24, Z
    244e:	88 2f       	mov	r24, r24
    2450:	90 e0       	ldi	r25, 0x00	; 0
    2452:	80 74       	andi	r24, 0x40	; 64
    2454:	90 70       	andi	r25, 0x00	; 0
    2456:	00 97       	sbiw	r24, 0x00	; 0
    2458:	09 f0       	breq	.+2      	; 0x245c <main+0x1414>
    245a:	cf c0       	rjmp	.+414    	; 0x25fa <main+0x15b2>
    245c:	fe 01       	movw	r30, r28
    245e:	e3 59       	subi	r30, 0x93	; 147
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	80 e0       	ldi	r24, 0x00	; 0
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	a0 ef       	ldi	r26, 0xF0	; 240
    2468:	b1 e4       	ldi	r27, 0x41	; 65
    246a:	80 83       	st	Z, r24
    246c:	91 83       	std	Z+1, r25	; 0x01
    246e:	a2 83       	std	Z+2, r26	; 0x02
    2470:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2472:	8e 01       	movw	r16, r28
    2474:	07 59       	subi	r16, 0x97	; 151
    2476:	1f 4f       	sbci	r17, 0xFF	; 255
    2478:	fe 01       	movw	r30, r28
    247a:	e3 59       	subi	r30, 0x93	; 147
    247c:	ff 4f       	sbci	r31, 0xFF	; 255
    247e:	60 81       	ld	r22, Z
    2480:	71 81       	ldd	r23, Z+1	; 0x01
    2482:	82 81       	ldd	r24, Z+2	; 0x02
    2484:	93 81       	ldd	r25, Z+3	; 0x03
    2486:	20 e0       	ldi	r18, 0x00	; 0
    2488:	30 e0       	ldi	r19, 0x00	; 0
    248a:	4a e7       	ldi	r20, 0x7A	; 122
    248c:	55 e4       	ldi	r21, 0x45	; 69
    248e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2492:	dc 01       	movw	r26, r24
    2494:	cb 01       	movw	r24, r22
    2496:	f8 01       	movw	r30, r16
    2498:	80 83       	st	Z, r24
    249a:	91 83       	std	Z+1, r25	; 0x01
    249c:	a2 83       	std	Z+2, r26	; 0x02
    249e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    24a0:	fe 01       	movw	r30, r28
    24a2:	e7 59       	subi	r30, 0x97	; 151
    24a4:	ff 4f       	sbci	r31, 0xFF	; 255
    24a6:	60 81       	ld	r22, Z
    24a8:	71 81       	ldd	r23, Z+1	; 0x01
    24aa:	82 81       	ldd	r24, Z+2	; 0x02
    24ac:	93 81       	ldd	r25, Z+3	; 0x03
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	40 e8       	ldi	r20, 0x80	; 128
    24b4:	5f e3       	ldi	r21, 0x3F	; 63
    24b6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    24ba:	88 23       	and	r24, r24
    24bc:	44 f4       	brge	.+16     	; 0x24ce <main+0x1486>
		__ticks = 1;
    24be:	fe 01       	movw	r30, r28
    24c0:	e9 59       	subi	r30, 0x99	; 153
    24c2:	ff 4f       	sbci	r31, 0xFF	; 255
    24c4:	81 e0       	ldi	r24, 0x01	; 1
    24c6:	90 e0       	ldi	r25, 0x00	; 0
    24c8:	91 83       	std	Z+1, r25	; 0x01
    24ca:	80 83       	st	Z, r24
    24cc:	64 c0       	rjmp	.+200    	; 0x2596 <main+0x154e>
	else if (__tmp > 65535)
    24ce:	fe 01       	movw	r30, r28
    24d0:	e7 59       	subi	r30, 0x97	; 151
    24d2:	ff 4f       	sbci	r31, 0xFF	; 255
    24d4:	60 81       	ld	r22, Z
    24d6:	71 81       	ldd	r23, Z+1	; 0x01
    24d8:	82 81       	ldd	r24, Z+2	; 0x02
    24da:	93 81       	ldd	r25, Z+3	; 0x03
    24dc:	20 e0       	ldi	r18, 0x00	; 0
    24de:	3f ef       	ldi	r19, 0xFF	; 255
    24e0:	4f e7       	ldi	r20, 0x7F	; 127
    24e2:	57 e4       	ldi	r21, 0x47	; 71
    24e4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    24e8:	18 16       	cp	r1, r24
    24ea:	0c f0       	brlt	.+2      	; 0x24ee <main+0x14a6>
    24ec:	43 c0       	rjmp	.+134    	; 0x2574 <main+0x152c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24ee:	fe 01       	movw	r30, r28
    24f0:	e3 59       	subi	r30, 0x93	; 147
    24f2:	ff 4f       	sbci	r31, 0xFF	; 255
    24f4:	60 81       	ld	r22, Z
    24f6:	71 81       	ldd	r23, Z+1	; 0x01
    24f8:	82 81       	ldd	r24, Z+2	; 0x02
    24fa:	93 81       	ldd	r25, Z+3	; 0x03
    24fc:	20 e0       	ldi	r18, 0x00	; 0
    24fe:	30 e0       	ldi	r19, 0x00	; 0
    2500:	40 e2       	ldi	r20, 0x20	; 32
    2502:	51 e4       	ldi	r21, 0x41	; 65
    2504:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2508:	dc 01       	movw	r26, r24
    250a:	cb 01       	movw	r24, r22
    250c:	8e 01       	movw	r16, r28
    250e:	09 59       	subi	r16, 0x99	; 153
    2510:	1f 4f       	sbci	r17, 0xFF	; 255
    2512:	bc 01       	movw	r22, r24
    2514:	cd 01       	movw	r24, r26
    2516:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    251a:	dc 01       	movw	r26, r24
    251c:	cb 01       	movw	r24, r22
    251e:	f8 01       	movw	r30, r16
    2520:	91 83       	std	Z+1, r25	; 0x01
    2522:	80 83       	st	Z, r24
    2524:	1f c0       	rjmp	.+62     	; 0x2564 <main+0x151c>
    2526:	fe 01       	movw	r30, r28
    2528:	eb 59       	subi	r30, 0x9B	; 155
    252a:	ff 4f       	sbci	r31, 0xFF	; 255
    252c:	80 e9       	ldi	r24, 0x90	; 144
    252e:	91 e0       	ldi	r25, 0x01	; 1
    2530:	91 83       	std	Z+1, r25	; 0x01
    2532:	80 83       	st	Z, r24
    2534:	fe 01       	movw	r30, r28
    2536:	eb 59       	subi	r30, 0x9B	; 155
    2538:	ff 4f       	sbci	r31, 0xFF	; 255
    253a:	80 81       	ld	r24, Z
    253c:	91 81       	ldd	r25, Z+1	; 0x01
    253e:	01 97       	sbiw	r24, 0x01	; 1
    2540:	f1 f7       	brne	.-4      	; 0x253e <main+0x14f6>
    2542:	fe 01       	movw	r30, r28
    2544:	eb 59       	subi	r30, 0x9B	; 155
    2546:	ff 4f       	sbci	r31, 0xFF	; 255
    2548:	91 83       	std	Z+1, r25	; 0x01
    254a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    254c:	de 01       	movw	r26, r28
    254e:	a9 59       	subi	r26, 0x99	; 153
    2550:	bf 4f       	sbci	r27, 0xFF	; 255
    2552:	fe 01       	movw	r30, r28
    2554:	e9 59       	subi	r30, 0x99	; 153
    2556:	ff 4f       	sbci	r31, 0xFF	; 255
    2558:	80 81       	ld	r24, Z
    255a:	91 81       	ldd	r25, Z+1	; 0x01
    255c:	01 97       	sbiw	r24, 0x01	; 1
    255e:	11 96       	adiw	r26, 0x01	; 1
    2560:	9c 93       	st	X, r25
    2562:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2564:	fe 01       	movw	r30, r28
    2566:	e9 59       	subi	r30, 0x99	; 153
    2568:	ff 4f       	sbci	r31, 0xFF	; 255
    256a:	80 81       	ld	r24, Z
    256c:	91 81       	ldd	r25, Z+1	; 0x01
    256e:	00 97       	sbiw	r24, 0x00	; 0
    2570:	d1 f6       	brne	.-76     	; 0x2526 <main+0x14de>
    2572:	28 c0       	rjmp	.+80     	; 0x25c4 <main+0x157c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2574:	8e 01       	movw	r16, r28
    2576:	09 59       	subi	r16, 0x99	; 153
    2578:	1f 4f       	sbci	r17, 0xFF	; 255
    257a:	fe 01       	movw	r30, r28
    257c:	e7 59       	subi	r30, 0x97	; 151
    257e:	ff 4f       	sbci	r31, 0xFF	; 255
    2580:	60 81       	ld	r22, Z
    2582:	71 81       	ldd	r23, Z+1	; 0x01
    2584:	82 81       	ldd	r24, Z+2	; 0x02
    2586:	93 81       	ldd	r25, Z+3	; 0x03
    2588:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    258c:	dc 01       	movw	r26, r24
    258e:	cb 01       	movw	r24, r22
    2590:	f8 01       	movw	r30, r16
    2592:	91 83       	std	Z+1, r25	; 0x01
    2594:	80 83       	st	Z, r24
    2596:	de 01       	movw	r26, r28
    2598:	ad 59       	subi	r26, 0x9D	; 157
    259a:	bf 4f       	sbci	r27, 0xFF	; 255
    259c:	fe 01       	movw	r30, r28
    259e:	e9 59       	subi	r30, 0x99	; 153
    25a0:	ff 4f       	sbci	r31, 0xFF	; 255
    25a2:	80 81       	ld	r24, Z
    25a4:	91 81       	ldd	r25, Z+1	; 0x01
    25a6:	11 96       	adiw	r26, 0x01	; 1
    25a8:	9c 93       	st	X, r25
    25aa:	8e 93       	st	-X, r24
    25ac:	fe 01       	movw	r30, r28
    25ae:	ed 59       	subi	r30, 0x9D	; 157
    25b0:	ff 4f       	sbci	r31, 0xFF	; 255
    25b2:	80 81       	ld	r24, Z
    25b4:	91 81       	ldd	r25, Z+1	; 0x01
    25b6:	01 97       	sbiw	r24, 0x01	; 1
    25b8:	f1 f7       	brne	.-4      	; 0x25b6 <main+0x156e>
    25ba:	fe 01       	movw	r30, r28
    25bc:	ed 59       	subi	r30, 0x9D	; 157
    25be:	ff 4f       	sbci	r31, 0xFF	; 255
    25c0:	91 83       	std	Z+1, r25	; 0x01
    25c2:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINC & (1 << PINC6)))
    25c4:	e3 e3       	ldi	r30, 0x33	; 51
    25c6:	f0 e0       	ldi	r31, 0x00	; 0
    25c8:	80 81       	ld	r24, Z
    25ca:	88 2f       	mov	r24, r24
    25cc:	90 e0       	ldi	r25, 0x00	; 0
    25ce:	80 74       	andi	r24, 0x40	; 64
    25d0:	90 70       	andi	r25, 0x00	; 0
    25d2:	00 97       	sbiw	r24, 0x00	; 0
    25d4:	09 f0       	breq	.+2      	; 0x25d8 <main+0x1590>
    25d6:	e6 c0       	rjmp	.+460    	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    25d8:	80 91 68 00 	lds	r24, 0x0068
    25dc:	88 23       	and	r24, r24
    25de:	09 f4       	brne	.+2      	; 0x25e2 <main+0x159a>
    25e0:	e1 c0       	rjmp	.+450    	; 0x27a4 <main+0x175c>
				{
					if (seconds5 != 0)
    25e2:	80 91 6b 00 	lds	r24, 0x006B
    25e6:	88 23       	and	r24, r24
    25e8:	29 f0       	breq	.+10     	; 0x25f4 <main+0x15ac>
					{
						seconds5--;
    25ea:	80 91 6b 00 	lds	r24, 0x006B
    25ee:	81 50       	subi	r24, 0x01	; 1
    25f0:	80 93 6b 00 	sts	0x006B, r24
					}
					buttonFlag = 0;
    25f4:	10 92 68 00 	sts	0x0068, r1
    25f8:	d5 c0       	rjmp	.+426    	; 0x27a4 <main+0x175c>
				}
			}
		}
		else if (!(PINC & (1 << PINC7))) /*Increment button*/
    25fa:	e3 e3       	ldi	r30, 0x33	; 51
    25fc:	f0 e0       	ldi	r31, 0x00	; 0
    25fe:	80 81       	ld	r24, Z
    2600:	88 23       	and	r24, r24
    2602:	0c f4       	brge	.+2      	; 0x2606 <main+0x15be>
    2604:	cc c0       	rjmp	.+408    	; 0x279e <main+0x1756>
    2606:	fe 01       	movw	r30, r28
    2608:	e1 5a       	subi	r30, 0xA1	; 161
    260a:	ff 4f       	sbci	r31, 0xFF	; 255
    260c:	80 e0       	ldi	r24, 0x00	; 0
    260e:	90 e0       	ldi	r25, 0x00	; 0
    2610:	a0 ef       	ldi	r26, 0xF0	; 240
    2612:	b1 e4       	ldi	r27, 0x41	; 65
    2614:	80 83       	st	Z, r24
    2616:	91 83       	std	Z+1, r25	; 0x01
    2618:	a2 83       	std	Z+2, r26	; 0x02
    261a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    261c:	8e 01       	movw	r16, r28
    261e:	05 5a       	subi	r16, 0xA5	; 165
    2620:	1f 4f       	sbci	r17, 0xFF	; 255
    2622:	fe 01       	movw	r30, r28
    2624:	e1 5a       	subi	r30, 0xA1	; 161
    2626:	ff 4f       	sbci	r31, 0xFF	; 255
    2628:	60 81       	ld	r22, Z
    262a:	71 81       	ldd	r23, Z+1	; 0x01
    262c:	82 81       	ldd	r24, Z+2	; 0x02
    262e:	93 81       	ldd	r25, Z+3	; 0x03
    2630:	20 e0       	ldi	r18, 0x00	; 0
    2632:	30 e0       	ldi	r19, 0x00	; 0
    2634:	4a e7       	ldi	r20, 0x7A	; 122
    2636:	55 e4       	ldi	r21, 0x45	; 69
    2638:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    263c:	dc 01       	movw	r26, r24
    263e:	cb 01       	movw	r24, r22
    2640:	f8 01       	movw	r30, r16
    2642:	80 83       	st	Z, r24
    2644:	91 83       	std	Z+1, r25	; 0x01
    2646:	a2 83       	std	Z+2, r26	; 0x02
    2648:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    264a:	fe 01       	movw	r30, r28
    264c:	e5 5a       	subi	r30, 0xA5	; 165
    264e:	ff 4f       	sbci	r31, 0xFF	; 255
    2650:	60 81       	ld	r22, Z
    2652:	71 81       	ldd	r23, Z+1	; 0x01
    2654:	82 81       	ldd	r24, Z+2	; 0x02
    2656:	93 81       	ldd	r25, Z+3	; 0x03
    2658:	20 e0       	ldi	r18, 0x00	; 0
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	40 e8       	ldi	r20, 0x80	; 128
    265e:	5f e3       	ldi	r21, 0x3F	; 63
    2660:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2664:	88 23       	and	r24, r24
    2666:	44 f4       	brge	.+16     	; 0x2678 <main+0x1630>
		__ticks = 1;
    2668:	fe 01       	movw	r30, r28
    266a:	e7 5a       	subi	r30, 0xA7	; 167
    266c:	ff 4f       	sbci	r31, 0xFF	; 255
    266e:	81 e0       	ldi	r24, 0x01	; 1
    2670:	90 e0       	ldi	r25, 0x00	; 0
    2672:	91 83       	std	Z+1, r25	; 0x01
    2674:	80 83       	st	Z, r24
    2676:	64 c0       	rjmp	.+200    	; 0x2740 <main+0x16f8>
	else if (__tmp > 65535)
    2678:	fe 01       	movw	r30, r28
    267a:	e5 5a       	subi	r30, 0xA5	; 165
    267c:	ff 4f       	sbci	r31, 0xFF	; 255
    267e:	60 81       	ld	r22, Z
    2680:	71 81       	ldd	r23, Z+1	; 0x01
    2682:	82 81       	ldd	r24, Z+2	; 0x02
    2684:	93 81       	ldd	r25, Z+3	; 0x03
    2686:	20 e0       	ldi	r18, 0x00	; 0
    2688:	3f ef       	ldi	r19, 0xFF	; 255
    268a:	4f e7       	ldi	r20, 0x7F	; 127
    268c:	57 e4       	ldi	r21, 0x47	; 71
    268e:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2692:	18 16       	cp	r1, r24
    2694:	0c f0       	brlt	.+2      	; 0x2698 <main+0x1650>
    2696:	43 c0       	rjmp	.+134    	; 0x271e <main+0x16d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2698:	fe 01       	movw	r30, r28
    269a:	e1 5a       	subi	r30, 0xA1	; 161
    269c:	ff 4f       	sbci	r31, 0xFF	; 255
    269e:	60 81       	ld	r22, Z
    26a0:	71 81       	ldd	r23, Z+1	; 0x01
    26a2:	82 81       	ldd	r24, Z+2	; 0x02
    26a4:	93 81       	ldd	r25, Z+3	; 0x03
    26a6:	20 e0       	ldi	r18, 0x00	; 0
    26a8:	30 e0       	ldi	r19, 0x00	; 0
    26aa:	40 e2       	ldi	r20, 0x20	; 32
    26ac:	51 e4       	ldi	r21, 0x41	; 65
    26ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    26b2:	dc 01       	movw	r26, r24
    26b4:	cb 01       	movw	r24, r22
    26b6:	8e 01       	movw	r16, r28
    26b8:	07 5a       	subi	r16, 0xA7	; 167
    26ba:	1f 4f       	sbci	r17, 0xFF	; 255
    26bc:	bc 01       	movw	r22, r24
    26be:	cd 01       	movw	r24, r26
    26c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26c4:	dc 01       	movw	r26, r24
    26c6:	cb 01       	movw	r24, r22
    26c8:	f8 01       	movw	r30, r16
    26ca:	91 83       	std	Z+1, r25	; 0x01
    26cc:	80 83       	st	Z, r24
    26ce:	1f c0       	rjmp	.+62     	; 0x270e <main+0x16c6>
    26d0:	fe 01       	movw	r30, r28
    26d2:	e9 5a       	subi	r30, 0xA9	; 169
    26d4:	ff 4f       	sbci	r31, 0xFF	; 255
    26d6:	80 e9       	ldi	r24, 0x90	; 144
    26d8:	91 e0       	ldi	r25, 0x01	; 1
    26da:	91 83       	std	Z+1, r25	; 0x01
    26dc:	80 83       	st	Z, r24
    26de:	fe 01       	movw	r30, r28
    26e0:	e9 5a       	subi	r30, 0xA9	; 169
    26e2:	ff 4f       	sbci	r31, 0xFF	; 255
    26e4:	80 81       	ld	r24, Z
    26e6:	91 81       	ldd	r25, Z+1	; 0x01
    26e8:	01 97       	sbiw	r24, 0x01	; 1
    26ea:	f1 f7       	brne	.-4      	; 0x26e8 <main+0x16a0>
    26ec:	fe 01       	movw	r30, r28
    26ee:	e9 5a       	subi	r30, 0xA9	; 169
    26f0:	ff 4f       	sbci	r31, 0xFF	; 255
    26f2:	91 83       	std	Z+1, r25	; 0x01
    26f4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26f6:	de 01       	movw	r26, r28
    26f8:	a7 5a       	subi	r26, 0xA7	; 167
    26fa:	bf 4f       	sbci	r27, 0xFF	; 255
    26fc:	fe 01       	movw	r30, r28
    26fe:	e7 5a       	subi	r30, 0xA7	; 167
    2700:	ff 4f       	sbci	r31, 0xFF	; 255
    2702:	80 81       	ld	r24, Z
    2704:	91 81       	ldd	r25, Z+1	; 0x01
    2706:	01 97       	sbiw	r24, 0x01	; 1
    2708:	11 96       	adiw	r26, 0x01	; 1
    270a:	9c 93       	st	X, r25
    270c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    270e:	fe 01       	movw	r30, r28
    2710:	e7 5a       	subi	r30, 0xA7	; 167
    2712:	ff 4f       	sbci	r31, 0xFF	; 255
    2714:	80 81       	ld	r24, Z
    2716:	91 81       	ldd	r25, Z+1	; 0x01
    2718:	00 97       	sbiw	r24, 0x00	; 0
    271a:	d1 f6       	brne	.-76     	; 0x26d0 <main+0x1688>
    271c:	28 c0       	rjmp	.+80     	; 0x276e <main+0x1726>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    271e:	8e 01       	movw	r16, r28
    2720:	07 5a       	subi	r16, 0xA7	; 167
    2722:	1f 4f       	sbci	r17, 0xFF	; 255
    2724:	fe 01       	movw	r30, r28
    2726:	e5 5a       	subi	r30, 0xA5	; 165
    2728:	ff 4f       	sbci	r31, 0xFF	; 255
    272a:	60 81       	ld	r22, Z
    272c:	71 81       	ldd	r23, Z+1	; 0x01
    272e:	82 81       	ldd	r24, Z+2	; 0x02
    2730:	93 81       	ldd	r25, Z+3	; 0x03
    2732:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2736:	dc 01       	movw	r26, r24
    2738:	cb 01       	movw	r24, r22
    273a:	f8 01       	movw	r30, r16
    273c:	91 83       	std	Z+1, r25	; 0x01
    273e:	80 83       	st	Z, r24
    2740:	de 01       	movw	r26, r28
    2742:	ab 5a       	subi	r26, 0xAB	; 171
    2744:	bf 4f       	sbci	r27, 0xFF	; 255
    2746:	fe 01       	movw	r30, r28
    2748:	e7 5a       	subi	r30, 0xA7	; 167
    274a:	ff 4f       	sbci	r31, 0xFF	; 255
    274c:	80 81       	ld	r24, Z
    274e:	91 81       	ldd	r25, Z+1	; 0x01
    2750:	11 96       	adiw	r26, 0x01	; 1
    2752:	9c 93       	st	X, r25
    2754:	8e 93       	st	-X, r24
    2756:	fe 01       	movw	r30, r28
    2758:	eb 5a       	subi	r30, 0xAB	; 171
    275a:	ff 4f       	sbci	r31, 0xFF	; 255
    275c:	80 81       	ld	r24, Z
    275e:	91 81       	ldd	r25, Z+1	; 0x01
    2760:	01 97       	sbiw	r24, 0x01	; 1
    2762:	f1 f7       	brne	.-4      	; 0x2760 <main+0x1718>
    2764:	fe 01       	movw	r30, r28
    2766:	eb 5a       	subi	r30, 0xAB	; 171
    2768:	ff 4f       	sbci	r31, 0xFF	; 255
    276a:	91 83       	std	Z+1, r25	; 0x01
    276c:	80 83       	st	Z, r24
		{
			_delay_ms(30);
			if (!(PINC & (1 << PINC7)))
    276e:	e3 e3       	ldi	r30, 0x33	; 51
    2770:	f0 e0       	ldi	r31, 0x00	; 0
    2772:	80 81       	ld	r24, Z
    2774:	88 23       	and	r24, r24
    2776:	b4 f0       	brlt	.+44     	; 0x27a4 <main+0x175c>
			{
				if (buttonFlag)
    2778:	80 91 68 00 	lds	r24, 0x0068
    277c:	88 23       	and	r24, r24
    277e:	91 f0       	breq	.+36     	; 0x27a4 <main+0x175c>
				{
					if (seconds5 < 5)
    2780:	80 91 6b 00 	lds	r24, 0x006B
    2784:	85 30       	cpi	r24, 0x05	; 5
    2786:	28 f4       	brcc	.+10     	; 0x2792 <main+0x174a>
					{
						seconds5++;
    2788:	80 91 6b 00 	lds	r24, 0x006B
    278c:	8f 5f       	subi	r24, 0xFF	; 255
    278e:	80 93 6b 00 	sts	0x006B, r24
					}
					buttonFlag = 0;
    2792:	10 92 68 00 	sts	0x0068, r1
					resetFlag = 1;
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	80 93 69 00 	sts	0x0069, r24
    279c:	03 c0       	rjmp	.+6      	; 0x27a4 <main+0x175c>
				}
			}
		}
		else
		{
			buttonFlag = 1; /*if noting pushed set the button flag*/
    279e:	81 e0       	ldi	r24, 0x01	; 1
    27a0:	80 93 68 00 	sts	0x0068, r24
		}

		//Turn off five 7-segment and turn on the targeted 7-segment to write a number into it
		PORTA = (PORTA & 0xC0) | (1 << PA5);
    27a4:	ab e3       	ldi	r26, 0x3B	; 59
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	eb e3       	ldi	r30, 0x3B	; 59
    27aa:	f0 e0       	ldi	r31, 0x00	; 0
    27ac:	80 81       	ld	r24, Z
    27ae:	80 7c       	andi	r24, 0xC0	; 192
    27b0:	80 62       	ori	r24, 0x20	; 32
    27b2:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (seconds6 & 0x0F);
    27b4:	a5 e3       	ldi	r26, 0x35	; 53
    27b6:	b0 e0       	ldi	r27, 0x00	; 0
    27b8:	e5 e3       	ldi	r30, 0x35	; 53
    27ba:	f0 e0       	ldi	r31, 0x00	; 0
    27bc:	80 81       	ld	r24, Z
    27be:	98 2f       	mov	r25, r24
    27c0:	90 7f       	andi	r25, 0xF0	; 240
    27c2:	80 91 6a 00 	lds	r24, 0x006A
    27c6:	8f 70       	andi	r24, 0x0F	; 15
    27c8:	89 2b       	or	r24, r25
    27ca:	8c 93       	st	X, r24
    27cc:	fe 01       	movw	r30, r28
    27ce:	ef 5a       	subi	r30, 0xAF	; 175
    27d0:	ff 4f       	sbci	r31, 0xFF	; 255
    27d2:	80 e0       	ldi	r24, 0x00	; 0
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	a0 e8       	ldi	r26, 0x80	; 128
    27d8:	bf e3       	ldi	r27, 0x3F	; 63
    27da:	80 83       	st	Z, r24
    27dc:	91 83       	std	Z+1, r25	; 0x01
    27de:	a2 83       	std	Z+2, r26	; 0x02
    27e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27e2:	8e 01       	movw	r16, r28
    27e4:	03 5b       	subi	r16, 0xB3	; 179
    27e6:	1f 4f       	sbci	r17, 0xFF	; 255
    27e8:	fe 01       	movw	r30, r28
    27ea:	ef 5a       	subi	r30, 0xAF	; 175
    27ec:	ff 4f       	sbci	r31, 0xFF	; 255
    27ee:	60 81       	ld	r22, Z
    27f0:	71 81       	ldd	r23, Z+1	; 0x01
    27f2:	82 81       	ldd	r24, Z+2	; 0x02
    27f4:	93 81       	ldd	r25, Z+3	; 0x03
    27f6:	20 e0       	ldi	r18, 0x00	; 0
    27f8:	30 e0       	ldi	r19, 0x00	; 0
    27fa:	4a e7       	ldi	r20, 0x7A	; 122
    27fc:	55 e4       	ldi	r21, 0x45	; 69
    27fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2802:	dc 01       	movw	r26, r24
    2804:	cb 01       	movw	r24, r22
    2806:	f8 01       	movw	r30, r16
    2808:	80 83       	st	Z, r24
    280a:	91 83       	std	Z+1, r25	; 0x01
    280c:	a2 83       	std	Z+2, r26	; 0x02
    280e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2810:	fe 01       	movw	r30, r28
    2812:	e3 5b       	subi	r30, 0xB3	; 179
    2814:	ff 4f       	sbci	r31, 0xFF	; 255
    2816:	60 81       	ld	r22, Z
    2818:	71 81       	ldd	r23, Z+1	; 0x01
    281a:	82 81       	ldd	r24, Z+2	; 0x02
    281c:	93 81       	ldd	r25, Z+3	; 0x03
    281e:	20 e0       	ldi	r18, 0x00	; 0
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	40 e8       	ldi	r20, 0x80	; 128
    2824:	5f e3       	ldi	r21, 0x3F	; 63
    2826:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    282a:	88 23       	and	r24, r24
    282c:	44 f4       	brge	.+16     	; 0x283e <main+0x17f6>
		__ticks = 1;
    282e:	fe 01       	movw	r30, r28
    2830:	e5 5b       	subi	r30, 0xB5	; 181
    2832:	ff 4f       	sbci	r31, 0xFF	; 255
    2834:	81 e0       	ldi	r24, 0x01	; 1
    2836:	90 e0       	ldi	r25, 0x00	; 0
    2838:	91 83       	std	Z+1, r25	; 0x01
    283a:	80 83       	st	Z, r24
    283c:	64 c0       	rjmp	.+200    	; 0x2906 <main+0x18be>
	else if (__tmp > 65535)
    283e:	fe 01       	movw	r30, r28
    2840:	e3 5b       	subi	r30, 0xB3	; 179
    2842:	ff 4f       	sbci	r31, 0xFF	; 255
    2844:	60 81       	ld	r22, Z
    2846:	71 81       	ldd	r23, Z+1	; 0x01
    2848:	82 81       	ldd	r24, Z+2	; 0x02
    284a:	93 81       	ldd	r25, Z+3	; 0x03
    284c:	20 e0       	ldi	r18, 0x00	; 0
    284e:	3f ef       	ldi	r19, 0xFF	; 255
    2850:	4f e7       	ldi	r20, 0x7F	; 127
    2852:	57 e4       	ldi	r21, 0x47	; 71
    2854:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2858:	18 16       	cp	r1, r24
    285a:	0c f0       	brlt	.+2      	; 0x285e <main+0x1816>
    285c:	43 c0       	rjmp	.+134    	; 0x28e4 <main+0x189c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    285e:	fe 01       	movw	r30, r28
    2860:	ef 5a       	subi	r30, 0xAF	; 175
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	60 81       	ld	r22, Z
    2866:	71 81       	ldd	r23, Z+1	; 0x01
    2868:	82 81       	ldd	r24, Z+2	; 0x02
    286a:	93 81       	ldd	r25, Z+3	; 0x03
    286c:	20 e0       	ldi	r18, 0x00	; 0
    286e:	30 e0       	ldi	r19, 0x00	; 0
    2870:	40 e2       	ldi	r20, 0x20	; 32
    2872:	51 e4       	ldi	r21, 0x41	; 65
    2874:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2878:	dc 01       	movw	r26, r24
    287a:	cb 01       	movw	r24, r22
    287c:	8e 01       	movw	r16, r28
    287e:	05 5b       	subi	r16, 0xB5	; 181
    2880:	1f 4f       	sbci	r17, 0xFF	; 255
    2882:	bc 01       	movw	r22, r24
    2884:	cd 01       	movw	r24, r26
    2886:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    288a:	dc 01       	movw	r26, r24
    288c:	cb 01       	movw	r24, r22
    288e:	f8 01       	movw	r30, r16
    2890:	91 83       	std	Z+1, r25	; 0x01
    2892:	80 83       	st	Z, r24
    2894:	1f c0       	rjmp	.+62     	; 0x28d4 <main+0x188c>
    2896:	fe 01       	movw	r30, r28
    2898:	e7 5b       	subi	r30, 0xB7	; 183
    289a:	ff 4f       	sbci	r31, 0xFF	; 255
    289c:	80 e9       	ldi	r24, 0x90	; 144
    289e:	91 e0       	ldi	r25, 0x01	; 1
    28a0:	91 83       	std	Z+1, r25	; 0x01
    28a2:	80 83       	st	Z, r24
    28a4:	fe 01       	movw	r30, r28
    28a6:	e7 5b       	subi	r30, 0xB7	; 183
    28a8:	ff 4f       	sbci	r31, 0xFF	; 255
    28aa:	80 81       	ld	r24, Z
    28ac:	91 81       	ldd	r25, Z+1	; 0x01
    28ae:	01 97       	sbiw	r24, 0x01	; 1
    28b0:	f1 f7       	brne	.-4      	; 0x28ae <main+0x1866>
    28b2:	fe 01       	movw	r30, r28
    28b4:	e7 5b       	subi	r30, 0xB7	; 183
    28b6:	ff 4f       	sbci	r31, 0xFF	; 255
    28b8:	91 83       	std	Z+1, r25	; 0x01
    28ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28bc:	de 01       	movw	r26, r28
    28be:	a5 5b       	subi	r26, 0xB5	; 181
    28c0:	bf 4f       	sbci	r27, 0xFF	; 255
    28c2:	fe 01       	movw	r30, r28
    28c4:	e5 5b       	subi	r30, 0xB5	; 181
    28c6:	ff 4f       	sbci	r31, 0xFF	; 255
    28c8:	80 81       	ld	r24, Z
    28ca:	91 81       	ldd	r25, Z+1	; 0x01
    28cc:	01 97       	sbiw	r24, 0x01	; 1
    28ce:	11 96       	adiw	r26, 0x01	; 1
    28d0:	9c 93       	st	X, r25
    28d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28d4:	fe 01       	movw	r30, r28
    28d6:	e5 5b       	subi	r30, 0xB5	; 181
    28d8:	ff 4f       	sbci	r31, 0xFF	; 255
    28da:	80 81       	ld	r24, Z
    28dc:	91 81       	ldd	r25, Z+1	; 0x01
    28de:	00 97       	sbiw	r24, 0x00	; 0
    28e0:	d1 f6       	brne	.-76     	; 0x2896 <main+0x184e>
    28e2:	27 c0       	rjmp	.+78     	; 0x2932 <main+0x18ea>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28e4:	8e 01       	movw	r16, r28
    28e6:	05 5b       	subi	r16, 0xB5	; 181
    28e8:	1f 4f       	sbci	r17, 0xFF	; 255
    28ea:	fe 01       	movw	r30, r28
    28ec:	e3 5b       	subi	r30, 0xB3	; 179
    28ee:	ff 4f       	sbci	r31, 0xFF	; 255
    28f0:	60 81       	ld	r22, Z
    28f2:	71 81       	ldd	r23, Z+1	; 0x01
    28f4:	82 81       	ldd	r24, Z+2	; 0x02
    28f6:	93 81       	ldd	r25, Z+3	; 0x03
    28f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    28fc:	dc 01       	movw	r26, r24
    28fe:	cb 01       	movw	r24, r22
    2900:	f8 01       	movw	r30, r16
    2902:	91 83       	std	Z+1, r25	; 0x01
    2904:	80 83       	st	Z, r24
    2906:	de 01       	movw	r26, r28
    2908:	a9 5b       	subi	r26, 0xB9	; 185
    290a:	bf 4f       	sbci	r27, 0xFF	; 255
    290c:	fe 01       	movw	r30, r28
    290e:	e5 5b       	subi	r30, 0xB5	; 181
    2910:	ff 4f       	sbci	r31, 0xFF	; 255
    2912:	80 81       	ld	r24, Z
    2914:	91 81       	ldd	r25, Z+1	; 0x01
    2916:	8d 93       	st	X+, r24
    2918:	9c 93       	st	X, r25
    291a:	fe 01       	movw	r30, r28
    291c:	e9 5b       	subi	r30, 0xB9	; 185
    291e:	ff 4f       	sbci	r31, 0xFF	; 255
    2920:	80 81       	ld	r24, Z
    2922:	91 81       	ldd	r25, Z+1	; 0x01
    2924:	01 97       	sbiw	r24, 0x01	; 1
    2926:	f1 f7       	brne	.-4      	; 0x2924 <main+0x18dc>
    2928:	fe 01       	movw	r30, r28
    292a:	e9 5b       	subi	r30, 0xB9	; 185
    292c:	ff 4f       	sbci	r31, 0xFF	; 255
    292e:	91 83       	std	Z+1, r25	; 0x01
    2930:	80 83       	st	Z, r24
		_delay_ms(1); /*Delay 1 millisecond to see the six 7-segment all turned on at the same time for the naked eye*/

		PORTA = (PORTA & 0xC0) | (1 << PA4);
    2932:	ab e3       	ldi	r26, 0x3B	; 59
    2934:	b0 e0       	ldi	r27, 0x00	; 0
    2936:	eb e3       	ldi	r30, 0x3B	; 59
    2938:	f0 e0       	ldi	r31, 0x00	; 0
    293a:	80 81       	ld	r24, Z
    293c:	80 7c       	andi	r24, 0xC0	; 192
    293e:	80 61       	ori	r24, 0x10	; 16
    2940:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (seconds5 & 0x0F);
    2942:	a5 e3       	ldi	r26, 0x35	; 53
    2944:	b0 e0       	ldi	r27, 0x00	; 0
    2946:	e5 e3       	ldi	r30, 0x35	; 53
    2948:	f0 e0       	ldi	r31, 0x00	; 0
    294a:	80 81       	ld	r24, Z
    294c:	98 2f       	mov	r25, r24
    294e:	90 7f       	andi	r25, 0xF0	; 240
    2950:	80 91 6b 00 	lds	r24, 0x006B
    2954:	8f 70       	andi	r24, 0x0F	; 15
    2956:	89 2b       	or	r24, r25
    2958:	8c 93       	st	X, r24
    295a:	fe 01       	movw	r30, r28
    295c:	ed 5b       	subi	r30, 0xBD	; 189
    295e:	ff 4f       	sbci	r31, 0xFF	; 255
    2960:	80 e0       	ldi	r24, 0x00	; 0
    2962:	90 e0       	ldi	r25, 0x00	; 0
    2964:	a0 e8       	ldi	r26, 0x80	; 128
    2966:	bf e3       	ldi	r27, 0x3F	; 63
    2968:	80 83       	st	Z, r24
    296a:	91 83       	std	Z+1, r25	; 0x01
    296c:	a2 83       	std	Z+2, r26	; 0x02
    296e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2970:	8e 01       	movw	r16, r28
    2972:	01 5c       	subi	r16, 0xC1	; 193
    2974:	1f 4f       	sbci	r17, 0xFF	; 255
    2976:	fe 01       	movw	r30, r28
    2978:	ed 5b       	subi	r30, 0xBD	; 189
    297a:	ff 4f       	sbci	r31, 0xFF	; 255
    297c:	60 81       	ld	r22, Z
    297e:	71 81       	ldd	r23, Z+1	; 0x01
    2980:	82 81       	ldd	r24, Z+2	; 0x02
    2982:	93 81       	ldd	r25, Z+3	; 0x03
    2984:	20 e0       	ldi	r18, 0x00	; 0
    2986:	30 e0       	ldi	r19, 0x00	; 0
    2988:	4a e7       	ldi	r20, 0x7A	; 122
    298a:	55 e4       	ldi	r21, 0x45	; 69
    298c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2990:	dc 01       	movw	r26, r24
    2992:	cb 01       	movw	r24, r22
    2994:	f8 01       	movw	r30, r16
    2996:	80 83       	st	Z, r24
    2998:	91 83       	std	Z+1, r25	; 0x01
    299a:	a2 83       	std	Z+2, r26	; 0x02
    299c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    299e:	fe 01       	movw	r30, r28
    29a0:	ff 96       	adiw	r30, 0x3f	; 63
    29a2:	60 81       	ld	r22, Z
    29a4:	71 81       	ldd	r23, Z+1	; 0x01
    29a6:	82 81       	ldd	r24, Z+2	; 0x02
    29a8:	93 81       	ldd	r25, Z+3	; 0x03
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	40 e8       	ldi	r20, 0x80	; 128
    29b0:	5f e3       	ldi	r21, 0x3F	; 63
    29b2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    29b6:	88 23       	and	r24, r24
    29b8:	2c f4       	brge	.+10     	; 0x29c4 <main+0x197c>
		__ticks = 1;
    29ba:	81 e0       	ldi	r24, 0x01	; 1
    29bc:	90 e0       	ldi	r25, 0x00	; 0
    29be:	9e af       	std	Y+62, r25	; 0x3e
    29c0:	8d af       	std	Y+61, r24	; 0x3d
    29c2:	46 c0       	rjmp	.+140    	; 0x2a50 <main+0x1a08>
	else if (__tmp > 65535)
    29c4:	fe 01       	movw	r30, r28
    29c6:	ff 96       	adiw	r30, 0x3f	; 63
    29c8:	60 81       	ld	r22, Z
    29ca:	71 81       	ldd	r23, Z+1	; 0x01
    29cc:	82 81       	ldd	r24, Z+2	; 0x02
    29ce:	93 81       	ldd	r25, Z+3	; 0x03
    29d0:	20 e0       	ldi	r18, 0x00	; 0
    29d2:	3f ef       	ldi	r19, 0xFF	; 255
    29d4:	4f e7       	ldi	r20, 0x7F	; 127
    29d6:	57 e4       	ldi	r21, 0x47	; 71
    29d8:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    29dc:	18 16       	cp	r1, r24
    29de:	64 f5       	brge	.+88     	; 0x2a38 <main+0x19f0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29e0:	fe 01       	movw	r30, r28
    29e2:	ed 5b       	subi	r30, 0xBD	; 189
    29e4:	ff 4f       	sbci	r31, 0xFF	; 255
    29e6:	60 81       	ld	r22, Z
    29e8:	71 81       	ldd	r23, Z+1	; 0x01
    29ea:	82 81       	ldd	r24, Z+2	; 0x02
    29ec:	93 81       	ldd	r25, Z+3	; 0x03
    29ee:	20 e0       	ldi	r18, 0x00	; 0
    29f0:	30 e0       	ldi	r19, 0x00	; 0
    29f2:	40 e2       	ldi	r20, 0x20	; 32
    29f4:	51 e4       	ldi	r21, 0x41	; 65
    29f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    29fa:	dc 01       	movw	r26, r24
    29fc:	cb 01       	movw	r24, r22
    29fe:	bc 01       	movw	r22, r24
    2a00:	cd 01       	movw	r24, r26
    2a02:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a06:	dc 01       	movw	r26, r24
    2a08:	cb 01       	movw	r24, r22
    2a0a:	9e af       	std	Y+62, r25	; 0x3e
    2a0c:	8d af       	std	Y+61, r24	; 0x3d
    2a0e:	0f c0       	rjmp	.+30     	; 0x2a2e <main+0x19e6>
    2a10:	80 e9       	ldi	r24, 0x90	; 144
    2a12:	91 e0       	ldi	r25, 0x01	; 1
    2a14:	9c af       	std	Y+60, r25	; 0x3c
    2a16:	8b af       	std	Y+59, r24	; 0x3b
    2a18:	8b ad       	ldd	r24, Y+59	; 0x3b
    2a1a:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a1c:	01 97       	sbiw	r24, 0x01	; 1
    2a1e:	f1 f7       	brne	.-4      	; 0x2a1c <main+0x19d4>
    2a20:	9c af       	std	Y+60, r25	; 0x3c
    2a22:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a24:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a26:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a28:	01 97       	sbiw	r24, 0x01	; 1
    2a2a:	9e af       	std	Y+62, r25	; 0x3e
    2a2c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a2e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a30:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a32:	00 97       	sbiw	r24, 0x00	; 0
    2a34:	69 f7       	brne	.-38     	; 0x2a10 <main+0x19c8>
    2a36:	16 c0       	rjmp	.+44     	; 0x2a64 <main+0x1a1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a38:	fe 01       	movw	r30, r28
    2a3a:	ff 96       	adiw	r30, 0x3f	; 63
    2a3c:	60 81       	ld	r22, Z
    2a3e:	71 81       	ldd	r23, Z+1	; 0x01
    2a40:	82 81       	ldd	r24, Z+2	; 0x02
    2a42:	93 81       	ldd	r25, Z+3	; 0x03
    2a44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2a48:	dc 01       	movw	r26, r24
    2a4a:	cb 01       	movw	r24, r22
    2a4c:	9e af       	std	Y+62, r25	; 0x3e
    2a4e:	8d af       	std	Y+61, r24	; 0x3d
    2a50:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a52:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a54:	9a af       	std	Y+58, r25	; 0x3a
    2a56:	89 af       	std	Y+57, r24	; 0x39
    2a58:	89 ad       	ldd	r24, Y+57	; 0x39
    2a5a:	9a ad       	ldd	r25, Y+58	; 0x3a
    2a5c:	01 97       	sbiw	r24, 0x01	; 1
    2a5e:	f1 f7       	brne	.-4      	; 0x2a5c <main+0x1a14>
    2a60:	9a af       	std	Y+58, r25	; 0x3a
    2a62:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1);

		PORTA = (PORTA & 0xC0) | (1 << PA3);
    2a64:	ab e3       	ldi	r26, 0x3B	; 59
    2a66:	b0 e0       	ldi	r27, 0x00	; 0
    2a68:	eb e3       	ldi	r30, 0x3B	; 59
    2a6a:	f0 e0       	ldi	r31, 0x00	; 0
    2a6c:	80 81       	ld	r24, Z
    2a6e:	80 7c       	andi	r24, 0xC0	; 192
    2a70:	88 60       	ori	r24, 0x08	; 8
    2a72:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (minutes4 & 0x0F);
    2a74:	a5 e3       	ldi	r26, 0x35	; 53
    2a76:	b0 e0       	ldi	r27, 0x00	; 0
    2a78:	e5 e3       	ldi	r30, 0x35	; 53
    2a7a:	f0 e0       	ldi	r31, 0x00	; 0
    2a7c:	80 81       	ld	r24, Z
    2a7e:	98 2f       	mov	r25, r24
    2a80:	90 7f       	andi	r25, 0xF0	; 240
    2a82:	80 91 6c 00 	lds	r24, 0x006C
    2a86:	8f 70       	andi	r24, 0x0F	; 15
    2a88:	89 2b       	or	r24, r25
    2a8a:	8c 93       	st	X, r24
    2a8c:	80 e0       	ldi	r24, 0x00	; 0
    2a8e:	90 e0       	ldi	r25, 0x00	; 0
    2a90:	a0 e8       	ldi	r26, 0x80	; 128
    2a92:	bf e3       	ldi	r27, 0x3F	; 63
    2a94:	8d ab       	std	Y+53, r24	; 0x35
    2a96:	9e ab       	std	Y+54, r25	; 0x36
    2a98:	af ab       	std	Y+55, r26	; 0x37
    2a9a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a9c:	6d a9       	ldd	r22, Y+53	; 0x35
    2a9e:	7e a9       	ldd	r23, Y+54	; 0x36
    2aa0:	8f a9       	ldd	r24, Y+55	; 0x37
    2aa2:	98 ad       	ldd	r25, Y+56	; 0x38
    2aa4:	20 e0       	ldi	r18, 0x00	; 0
    2aa6:	30 e0       	ldi	r19, 0x00	; 0
    2aa8:	4a e7       	ldi	r20, 0x7A	; 122
    2aaa:	55 e4       	ldi	r21, 0x45	; 69
    2aac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2ab0:	dc 01       	movw	r26, r24
    2ab2:	cb 01       	movw	r24, r22
    2ab4:	89 ab       	std	Y+49, r24	; 0x31
    2ab6:	9a ab       	std	Y+50, r25	; 0x32
    2ab8:	ab ab       	std	Y+51, r26	; 0x33
    2aba:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2abc:	69 a9       	ldd	r22, Y+49	; 0x31
    2abe:	7a a9       	ldd	r23, Y+50	; 0x32
    2ac0:	8b a9       	ldd	r24, Y+51	; 0x33
    2ac2:	9c a9       	ldd	r25, Y+52	; 0x34
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	40 e8       	ldi	r20, 0x80	; 128
    2aca:	5f e3       	ldi	r21, 0x3F	; 63
    2acc:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2ad0:	88 23       	and	r24, r24
    2ad2:	2c f4       	brge	.+10     	; 0x2ade <main+0x1a96>
		__ticks = 1;
    2ad4:	81 e0       	ldi	r24, 0x01	; 1
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	98 ab       	std	Y+48, r25	; 0x30
    2ada:	8f a7       	std	Y+47, r24	; 0x2f
    2adc:	3f c0       	rjmp	.+126    	; 0x2b5c <main+0x1b14>
	else if (__tmp > 65535)
    2ade:	69 a9       	ldd	r22, Y+49	; 0x31
    2ae0:	7a a9       	ldd	r23, Y+50	; 0x32
    2ae2:	8b a9       	ldd	r24, Y+51	; 0x33
    2ae4:	9c a9       	ldd	r25, Y+52	; 0x34
    2ae6:	20 e0       	ldi	r18, 0x00	; 0
    2ae8:	3f ef       	ldi	r19, 0xFF	; 255
    2aea:	4f e7       	ldi	r20, 0x7F	; 127
    2aec:	57 e4       	ldi	r21, 0x47	; 71
    2aee:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2af2:	18 16       	cp	r1, r24
    2af4:	4c f5       	brge	.+82     	; 0x2b48 <main+0x1b00>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2af6:	6d a9       	ldd	r22, Y+53	; 0x35
    2af8:	7e a9       	ldd	r23, Y+54	; 0x36
    2afa:	8f a9       	ldd	r24, Y+55	; 0x37
    2afc:	98 ad       	ldd	r25, Y+56	; 0x38
    2afe:	20 e0       	ldi	r18, 0x00	; 0
    2b00:	30 e0       	ldi	r19, 0x00	; 0
    2b02:	40 e2       	ldi	r20, 0x20	; 32
    2b04:	51 e4       	ldi	r21, 0x41	; 65
    2b06:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2b0a:	dc 01       	movw	r26, r24
    2b0c:	cb 01       	movw	r24, r22
    2b0e:	bc 01       	movw	r22, r24
    2b10:	cd 01       	movw	r24, r26
    2b12:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b16:	dc 01       	movw	r26, r24
    2b18:	cb 01       	movw	r24, r22
    2b1a:	98 ab       	std	Y+48, r25	; 0x30
    2b1c:	8f a7       	std	Y+47, r24	; 0x2f
    2b1e:	0f c0       	rjmp	.+30     	; 0x2b3e <main+0x1af6>
    2b20:	80 e9       	ldi	r24, 0x90	; 144
    2b22:	91 e0       	ldi	r25, 0x01	; 1
    2b24:	9e a7       	std	Y+46, r25	; 0x2e
    2b26:	8d a7       	std	Y+45, r24	; 0x2d
    2b28:	8d a5       	ldd	r24, Y+45	; 0x2d
    2b2a:	9e a5       	ldd	r25, Y+46	; 0x2e
    2b2c:	01 97       	sbiw	r24, 0x01	; 1
    2b2e:	f1 f7       	brne	.-4      	; 0x2b2c <main+0x1ae4>
    2b30:	9e a7       	std	Y+46, r25	; 0x2e
    2b32:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b34:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b36:	98 a9       	ldd	r25, Y+48	; 0x30
    2b38:	01 97       	sbiw	r24, 0x01	; 1
    2b3a:	98 ab       	std	Y+48, r25	; 0x30
    2b3c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b3e:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b40:	98 a9       	ldd	r25, Y+48	; 0x30
    2b42:	00 97       	sbiw	r24, 0x00	; 0
    2b44:	69 f7       	brne	.-38     	; 0x2b20 <main+0x1ad8>
    2b46:	14 c0       	rjmp	.+40     	; 0x2b70 <main+0x1b28>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b48:	69 a9       	ldd	r22, Y+49	; 0x31
    2b4a:	7a a9       	ldd	r23, Y+50	; 0x32
    2b4c:	8b a9       	ldd	r24, Y+51	; 0x33
    2b4e:	9c a9       	ldd	r25, Y+52	; 0x34
    2b50:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2b54:	dc 01       	movw	r26, r24
    2b56:	cb 01       	movw	r24, r22
    2b58:	98 ab       	std	Y+48, r25	; 0x30
    2b5a:	8f a7       	std	Y+47, r24	; 0x2f
    2b5c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b5e:	98 a9       	ldd	r25, Y+48	; 0x30
    2b60:	9c a7       	std	Y+44, r25	; 0x2c
    2b62:	8b a7       	std	Y+43, r24	; 0x2b
    2b64:	8b a5       	ldd	r24, Y+43	; 0x2b
    2b66:	9c a5       	ldd	r25, Y+44	; 0x2c
    2b68:	01 97       	sbiw	r24, 0x01	; 1
    2b6a:	f1 f7       	brne	.-4      	; 0x2b68 <main+0x1b20>
    2b6c:	9c a7       	std	Y+44, r25	; 0x2c
    2b6e:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);

		PORTA = (PORTA & 0xC0) | (1 << PA2);
    2b70:	ab e3       	ldi	r26, 0x3B	; 59
    2b72:	b0 e0       	ldi	r27, 0x00	; 0
    2b74:	eb e3       	ldi	r30, 0x3B	; 59
    2b76:	f0 e0       	ldi	r31, 0x00	; 0
    2b78:	80 81       	ld	r24, Z
    2b7a:	80 7c       	andi	r24, 0xC0	; 192
    2b7c:	84 60       	ori	r24, 0x04	; 4
    2b7e:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (minutes3 & 0x0F);
    2b80:	a5 e3       	ldi	r26, 0x35	; 53
    2b82:	b0 e0       	ldi	r27, 0x00	; 0
    2b84:	e5 e3       	ldi	r30, 0x35	; 53
    2b86:	f0 e0       	ldi	r31, 0x00	; 0
    2b88:	80 81       	ld	r24, Z
    2b8a:	98 2f       	mov	r25, r24
    2b8c:	90 7f       	andi	r25, 0xF0	; 240
    2b8e:	80 91 6d 00 	lds	r24, 0x006D
    2b92:	8f 70       	andi	r24, 0x0F	; 15
    2b94:	89 2b       	or	r24, r25
    2b96:	8c 93       	st	X, r24
    2b98:	80 e0       	ldi	r24, 0x00	; 0
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	a0 e8       	ldi	r26, 0x80	; 128
    2b9e:	bf e3       	ldi	r27, 0x3F	; 63
    2ba0:	8f a3       	std	Y+39, r24	; 0x27
    2ba2:	98 a7       	std	Y+40, r25	; 0x28
    2ba4:	a9 a7       	std	Y+41, r26	; 0x29
    2ba6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ba8:	6f a1       	ldd	r22, Y+39	; 0x27
    2baa:	78 a5       	ldd	r23, Y+40	; 0x28
    2bac:	89 a5       	ldd	r24, Y+41	; 0x29
    2bae:	9a a5       	ldd	r25, Y+42	; 0x2a
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	4a e7       	ldi	r20, 0x7A	; 122
    2bb6:	55 e4       	ldi	r21, 0x45	; 69
    2bb8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2bbc:	dc 01       	movw	r26, r24
    2bbe:	cb 01       	movw	r24, r22
    2bc0:	8b a3       	std	Y+35, r24	; 0x23
    2bc2:	9c a3       	std	Y+36, r25	; 0x24
    2bc4:	ad a3       	std	Y+37, r26	; 0x25
    2bc6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2bc8:	6b a1       	ldd	r22, Y+35	; 0x23
    2bca:	7c a1       	ldd	r23, Y+36	; 0x24
    2bcc:	8d a1       	ldd	r24, Y+37	; 0x25
    2bce:	9e a1       	ldd	r25, Y+38	; 0x26
    2bd0:	20 e0       	ldi	r18, 0x00	; 0
    2bd2:	30 e0       	ldi	r19, 0x00	; 0
    2bd4:	40 e8       	ldi	r20, 0x80	; 128
    2bd6:	5f e3       	ldi	r21, 0x3F	; 63
    2bd8:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2bdc:	88 23       	and	r24, r24
    2bde:	2c f4       	brge	.+10     	; 0x2bea <main+0x1ba2>
		__ticks = 1;
    2be0:	81 e0       	ldi	r24, 0x01	; 1
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	9a a3       	std	Y+34, r25	; 0x22
    2be6:	89 a3       	std	Y+33, r24	; 0x21
    2be8:	3f c0       	rjmp	.+126    	; 0x2c68 <main+0x1c20>
	else if (__tmp > 65535)
    2bea:	6b a1       	ldd	r22, Y+35	; 0x23
    2bec:	7c a1       	ldd	r23, Y+36	; 0x24
    2bee:	8d a1       	ldd	r24, Y+37	; 0x25
    2bf0:	9e a1       	ldd	r25, Y+38	; 0x26
    2bf2:	20 e0       	ldi	r18, 0x00	; 0
    2bf4:	3f ef       	ldi	r19, 0xFF	; 255
    2bf6:	4f e7       	ldi	r20, 0x7F	; 127
    2bf8:	57 e4       	ldi	r21, 0x47	; 71
    2bfa:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2bfe:	18 16       	cp	r1, r24
    2c00:	4c f5       	brge	.+82     	; 0x2c54 <main+0x1c0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c02:	6f a1       	ldd	r22, Y+39	; 0x27
    2c04:	78 a5       	ldd	r23, Y+40	; 0x28
    2c06:	89 a5       	ldd	r24, Y+41	; 0x29
    2c08:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c0a:	20 e0       	ldi	r18, 0x00	; 0
    2c0c:	30 e0       	ldi	r19, 0x00	; 0
    2c0e:	40 e2       	ldi	r20, 0x20	; 32
    2c10:	51 e4       	ldi	r21, 0x41	; 65
    2c12:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2c16:	dc 01       	movw	r26, r24
    2c18:	cb 01       	movw	r24, r22
    2c1a:	bc 01       	movw	r22, r24
    2c1c:	cd 01       	movw	r24, r26
    2c1e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c22:	dc 01       	movw	r26, r24
    2c24:	cb 01       	movw	r24, r22
    2c26:	9a a3       	std	Y+34, r25	; 0x22
    2c28:	89 a3       	std	Y+33, r24	; 0x21
    2c2a:	0f c0       	rjmp	.+30     	; 0x2c4a <main+0x1c02>
    2c2c:	80 e9       	ldi	r24, 0x90	; 144
    2c2e:	91 e0       	ldi	r25, 0x01	; 1
    2c30:	98 a3       	std	Y+32, r25	; 0x20
    2c32:	8f 8f       	std	Y+31, r24	; 0x1f
    2c34:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c36:	98 a1       	ldd	r25, Y+32	; 0x20
    2c38:	01 97       	sbiw	r24, 0x01	; 1
    2c3a:	f1 f7       	brne	.-4      	; 0x2c38 <main+0x1bf0>
    2c3c:	98 a3       	std	Y+32, r25	; 0x20
    2c3e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c40:	89 a1       	ldd	r24, Y+33	; 0x21
    2c42:	9a a1       	ldd	r25, Y+34	; 0x22
    2c44:	01 97       	sbiw	r24, 0x01	; 1
    2c46:	9a a3       	std	Y+34, r25	; 0x22
    2c48:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c4a:	89 a1       	ldd	r24, Y+33	; 0x21
    2c4c:	9a a1       	ldd	r25, Y+34	; 0x22
    2c4e:	00 97       	sbiw	r24, 0x00	; 0
    2c50:	69 f7       	brne	.-38     	; 0x2c2c <main+0x1be4>
    2c52:	14 c0       	rjmp	.+40     	; 0x2c7c <main+0x1c34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c54:	6b a1       	ldd	r22, Y+35	; 0x23
    2c56:	7c a1       	ldd	r23, Y+36	; 0x24
    2c58:	8d a1       	ldd	r24, Y+37	; 0x25
    2c5a:	9e a1       	ldd	r25, Y+38	; 0x26
    2c5c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2c60:	dc 01       	movw	r26, r24
    2c62:	cb 01       	movw	r24, r22
    2c64:	9a a3       	std	Y+34, r25	; 0x22
    2c66:	89 a3       	std	Y+33, r24	; 0x21
    2c68:	89 a1       	ldd	r24, Y+33	; 0x21
    2c6a:	9a a1       	ldd	r25, Y+34	; 0x22
    2c6c:	9e 8f       	std	Y+30, r25	; 0x1e
    2c6e:	8d 8f       	std	Y+29, r24	; 0x1d
    2c70:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2c72:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2c74:	01 97       	sbiw	r24, 0x01	; 1
    2c76:	f1 f7       	brne	.-4      	; 0x2c74 <main+0x1c2c>
    2c78:	9e 8f       	std	Y+30, r25	; 0x1e
    2c7a:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);

		PORTA = (PORTA & 0xC0) | (1 << PA1);
    2c7c:	ab e3       	ldi	r26, 0x3B	; 59
    2c7e:	b0 e0       	ldi	r27, 0x00	; 0
    2c80:	eb e3       	ldi	r30, 0x3B	; 59
    2c82:	f0 e0       	ldi	r31, 0x00	; 0
    2c84:	80 81       	ld	r24, Z
    2c86:	80 7c       	andi	r24, 0xC0	; 192
    2c88:	82 60       	ori	r24, 0x02	; 2
    2c8a:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (hours2 & 0x0F);
    2c8c:	a5 e3       	ldi	r26, 0x35	; 53
    2c8e:	b0 e0       	ldi	r27, 0x00	; 0
    2c90:	e5 e3       	ldi	r30, 0x35	; 53
    2c92:	f0 e0       	ldi	r31, 0x00	; 0
    2c94:	80 81       	ld	r24, Z
    2c96:	98 2f       	mov	r25, r24
    2c98:	90 7f       	andi	r25, 0xF0	; 240
    2c9a:	80 91 6e 00 	lds	r24, 0x006E
    2c9e:	8f 70       	andi	r24, 0x0F	; 15
    2ca0:	89 2b       	or	r24, r25
    2ca2:	8c 93       	st	X, r24
    2ca4:	80 e0       	ldi	r24, 0x00	; 0
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	a0 e8       	ldi	r26, 0x80	; 128
    2caa:	bf e3       	ldi	r27, 0x3F	; 63
    2cac:	89 8f       	std	Y+25, r24	; 0x19
    2cae:	9a 8f       	std	Y+26, r25	; 0x1a
    2cb0:	ab 8f       	std	Y+27, r26	; 0x1b
    2cb2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cb4:	69 8d       	ldd	r22, Y+25	; 0x19
    2cb6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2cb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2cba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2cbc:	20 e0       	ldi	r18, 0x00	; 0
    2cbe:	30 e0       	ldi	r19, 0x00	; 0
    2cc0:	4a e7       	ldi	r20, 0x7A	; 122
    2cc2:	55 e4       	ldi	r21, 0x45	; 69
    2cc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2cc8:	dc 01       	movw	r26, r24
    2cca:	cb 01       	movw	r24, r22
    2ccc:	8d 8b       	std	Y+21, r24	; 0x15
    2cce:	9e 8b       	std	Y+22, r25	; 0x16
    2cd0:	af 8b       	std	Y+23, r26	; 0x17
    2cd2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2cd4:	6d 89       	ldd	r22, Y+21	; 0x15
    2cd6:	7e 89       	ldd	r23, Y+22	; 0x16
    2cd8:	8f 89       	ldd	r24, Y+23	; 0x17
    2cda:	98 8d       	ldd	r25, Y+24	; 0x18
    2cdc:	20 e0       	ldi	r18, 0x00	; 0
    2cde:	30 e0       	ldi	r19, 0x00	; 0
    2ce0:	40 e8       	ldi	r20, 0x80	; 128
    2ce2:	5f e3       	ldi	r21, 0x3F	; 63
    2ce4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2ce8:	88 23       	and	r24, r24
    2cea:	2c f4       	brge	.+10     	; 0x2cf6 <main+0x1cae>
		__ticks = 1;
    2cec:	81 e0       	ldi	r24, 0x01	; 1
    2cee:	90 e0       	ldi	r25, 0x00	; 0
    2cf0:	9c 8b       	std	Y+20, r25	; 0x14
    2cf2:	8b 8b       	std	Y+19, r24	; 0x13
    2cf4:	3f c0       	rjmp	.+126    	; 0x2d74 <main+0x1d2c>
	else if (__tmp > 65535)
    2cf6:	6d 89       	ldd	r22, Y+21	; 0x15
    2cf8:	7e 89       	ldd	r23, Y+22	; 0x16
    2cfa:	8f 89       	ldd	r24, Y+23	; 0x17
    2cfc:	98 8d       	ldd	r25, Y+24	; 0x18
    2cfe:	20 e0       	ldi	r18, 0x00	; 0
    2d00:	3f ef       	ldi	r19, 0xFF	; 255
    2d02:	4f e7       	ldi	r20, 0x7F	; 127
    2d04:	57 e4       	ldi	r21, 0x47	; 71
    2d06:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2d0a:	18 16       	cp	r1, r24
    2d0c:	4c f5       	brge	.+82     	; 0x2d60 <main+0x1d18>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d0e:	69 8d       	ldd	r22, Y+25	; 0x19
    2d10:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d16:	20 e0       	ldi	r18, 0x00	; 0
    2d18:	30 e0       	ldi	r19, 0x00	; 0
    2d1a:	40 e2       	ldi	r20, 0x20	; 32
    2d1c:	51 e4       	ldi	r21, 0x41	; 65
    2d1e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2d22:	dc 01       	movw	r26, r24
    2d24:	cb 01       	movw	r24, r22
    2d26:	bc 01       	movw	r22, r24
    2d28:	cd 01       	movw	r24, r26
    2d2a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d2e:	dc 01       	movw	r26, r24
    2d30:	cb 01       	movw	r24, r22
    2d32:	9c 8b       	std	Y+20, r25	; 0x14
    2d34:	8b 8b       	std	Y+19, r24	; 0x13
    2d36:	0f c0       	rjmp	.+30     	; 0x2d56 <main+0x1d0e>
    2d38:	80 e9       	ldi	r24, 0x90	; 144
    2d3a:	91 e0       	ldi	r25, 0x01	; 1
    2d3c:	9a 8b       	std	Y+18, r25	; 0x12
    2d3e:	89 8b       	std	Y+17, r24	; 0x11
    2d40:	89 89       	ldd	r24, Y+17	; 0x11
    2d42:	9a 89       	ldd	r25, Y+18	; 0x12
    2d44:	01 97       	sbiw	r24, 0x01	; 1
    2d46:	f1 f7       	brne	.-4      	; 0x2d44 <main+0x1cfc>
    2d48:	9a 8b       	std	Y+18, r25	; 0x12
    2d4a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d4c:	8b 89       	ldd	r24, Y+19	; 0x13
    2d4e:	9c 89       	ldd	r25, Y+20	; 0x14
    2d50:	01 97       	sbiw	r24, 0x01	; 1
    2d52:	9c 8b       	std	Y+20, r25	; 0x14
    2d54:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d56:	8b 89       	ldd	r24, Y+19	; 0x13
    2d58:	9c 89       	ldd	r25, Y+20	; 0x14
    2d5a:	00 97       	sbiw	r24, 0x00	; 0
    2d5c:	69 f7       	brne	.-38     	; 0x2d38 <main+0x1cf0>
    2d5e:	14 c0       	rjmp	.+40     	; 0x2d88 <main+0x1d40>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d60:	6d 89       	ldd	r22, Y+21	; 0x15
    2d62:	7e 89       	ldd	r23, Y+22	; 0x16
    2d64:	8f 89       	ldd	r24, Y+23	; 0x17
    2d66:	98 8d       	ldd	r25, Y+24	; 0x18
    2d68:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2d6c:	dc 01       	movw	r26, r24
    2d6e:	cb 01       	movw	r24, r22
    2d70:	9c 8b       	std	Y+20, r25	; 0x14
    2d72:	8b 8b       	std	Y+19, r24	; 0x13
    2d74:	8b 89       	ldd	r24, Y+19	; 0x13
    2d76:	9c 89       	ldd	r25, Y+20	; 0x14
    2d78:	98 8b       	std	Y+16, r25	; 0x10
    2d7a:	8f 87       	std	Y+15, r24	; 0x0f
    2d7c:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d7e:	98 89       	ldd	r25, Y+16	; 0x10
    2d80:	01 97       	sbiw	r24, 0x01	; 1
    2d82:	f1 f7       	brne	.-4      	; 0x2d80 <main+0x1d38>
    2d84:	98 8b       	std	Y+16, r25	; 0x10
    2d86:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);

		PORTA = (PORTA & 0xC0) | (1 << PA0);
    2d88:	ab e3       	ldi	r26, 0x3B	; 59
    2d8a:	b0 e0       	ldi	r27, 0x00	; 0
    2d8c:	eb e3       	ldi	r30, 0x3B	; 59
    2d8e:	f0 e0       	ldi	r31, 0x00	; 0
    2d90:	80 81       	ld	r24, Z
    2d92:	80 7c       	andi	r24, 0xC0	; 192
    2d94:	81 60       	ori	r24, 0x01	; 1
    2d96:	8c 93       	st	X, r24
		PORTC = (PORTC & 0xF0) | (hours1 & 0x0F);
    2d98:	a5 e3       	ldi	r26, 0x35	; 53
    2d9a:	b0 e0       	ldi	r27, 0x00	; 0
    2d9c:	e5 e3       	ldi	r30, 0x35	; 53
    2d9e:	f0 e0       	ldi	r31, 0x00	; 0
    2da0:	80 81       	ld	r24, Z
    2da2:	98 2f       	mov	r25, r24
    2da4:	90 7f       	andi	r25, 0xF0	; 240
    2da6:	80 91 6f 00 	lds	r24, 0x006F
    2daa:	8f 70       	andi	r24, 0x0F	; 15
    2dac:	89 2b       	or	r24, r25
    2dae:	8c 93       	st	X, r24
    2db0:	80 e0       	ldi	r24, 0x00	; 0
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	a0 e8       	ldi	r26, 0x80	; 128
    2db6:	bf e3       	ldi	r27, 0x3F	; 63
    2db8:	8b 87       	std	Y+11, r24	; 0x0b
    2dba:	9c 87       	std	Y+12, r25	; 0x0c
    2dbc:	ad 87       	std	Y+13, r26	; 0x0d
    2dbe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dc0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2dc2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2dc4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dc6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2dc8:	20 e0       	ldi	r18, 0x00	; 0
    2dca:	30 e0       	ldi	r19, 0x00	; 0
    2dcc:	4a e7       	ldi	r20, 0x7A	; 122
    2dce:	55 e4       	ldi	r21, 0x45	; 69
    2dd0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2dd4:	dc 01       	movw	r26, r24
    2dd6:	cb 01       	movw	r24, r22
    2dd8:	8f 83       	std	Y+7, r24	; 0x07
    2dda:	98 87       	std	Y+8, r25	; 0x08
    2ddc:	a9 87       	std	Y+9, r26	; 0x09
    2dde:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2de0:	6f 81       	ldd	r22, Y+7	; 0x07
    2de2:	78 85       	ldd	r23, Y+8	; 0x08
    2de4:	89 85       	ldd	r24, Y+9	; 0x09
    2de6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2de8:	20 e0       	ldi	r18, 0x00	; 0
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	40 e8       	ldi	r20, 0x80	; 128
    2dee:	5f e3       	ldi	r21, 0x3F	; 63
    2df0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    2df4:	88 23       	and	r24, r24
    2df6:	2c f4       	brge	.+10     	; 0x2e02 <main+0x1dba>
		__ticks = 1;
    2df8:	81 e0       	ldi	r24, 0x01	; 1
    2dfa:	90 e0       	ldi	r25, 0x00	; 0
    2dfc:	9e 83       	std	Y+6, r25	; 0x06
    2dfe:	8d 83       	std	Y+5, r24	; 0x05
    2e00:	40 c0       	rjmp	.+128    	; 0x2e82 <main+0x1e3a>
	else if (__tmp > 65535)
    2e02:	6f 81       	ldd	r22, Y+7	; 0x07
    2e04:	78 85       	ldd	r23, Y+8	; 0x08
    2e06:	89 85       	ldd	r24, Y+9	; 0x09
    2e08:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e0a:	20 e0       	ldi	r18, 0x00	; 0
    2e0c:	3f ef       	ldi	r19, 0xFF	; 255
    2e0e:	4f e7       	ldi	r20, 0x7F	; 127
    2e10:	57 e4       	ldi	r21, 0x47	; 71
    2e12:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    2e16:	18 16       	cp	r1, r24
    2e18:	54 f5       	brge	.+84     	; 0x2e6e <main+0x1e26>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e20:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e22:	20 e0       	ldi	r18, 0x00	; 0
    2e24:	30 e0       	ldi	r19, 0x00	; 0
    2e26:	40 e2       	ldi	r20, 0x20	; 32
    2e28:	51 e4       	ldi	r21, 0x41	; 65
    2e2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2e2e:	dc 01       	movw	r26, r24
    2e30:	cb 01       	movw	r24, r22
    2e32:	bc 01       	movw	r22, r24
    2e34:	cd 01       	movw	r24, r26
    2e36:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e3a:	dc 01       	movw	r26, r24
    2e3c:	cb 01       	movw	r24, r22
    2e3e:	9e 83       	std	Y+6, r25	; 0x06
    2e40:	8d 83       	std	Y+5, r24	; 0x05
    2e42:	0f c0       	rjmp	.+30     	; 0x2e62 <main+0x1e1a>
    2e44:	80 e9       	ldi	r24, 0x90	; 144
    2e46:	91 e0       	ldi	r25, 0x01	; 1
    2e48:	9c 83       	std	Y+4, r25	; 0x04
    2e4a:	8b 83       	std	Y+3, r24	; 0x03
    2e4c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e4e:	9c 81       	ldd	r25, Y+4	; 0x04
    2e50:	01 97       	sbiw	r24, 0x01	; 1
    2e52:	f1 f7       	brne	.-4      	; 0x2e50 <main+0x1e08>
    2e54:	9c 83       	std	Y+4, r25	; 0x04
    2e56:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e58:	8d 81       	ldd	r24, Y+5	; 0x05
    2e5a:	9e 81       	ldd	r25, Y+6	; 0x06
    2e5c:	01 97       	sbiw	r24, 0x01	; 1
    2e5e:	9e 83       	std	Y+6, r25	; 0x06
    2e60:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e62:	8d 81       	ldd	r24, Y+5	; 0x05
    2e64:	9e 81       	ldd	r25, Y+6	; 0x06
    2e66:	00 97       	sbiw	r24, 0x00	; 0
    2e68:	69 f7       	brne	.-38     	; 0x2e44 <main+0x1dfc>
    2e6a:	0c 94 3e 08 	jmp	0x107c	; 0x107c <main+0x34>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e6e:	6f 81       	ldd	r22, Y+7	; 0x07
    2e70:	78 85       	ldd	r23, Y+8	; 0x08
    2e72:	89 85       	ldd	r24, Y+9	; 0x09
    2e74:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e76:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2e7a:	dc 01       	movw	r26, r24
    2e7c:	cb 01       	movw	r24, r22
    2e7e:	9e 83       	std	Y+6, r25	; 0x06
    2e80:	8d 83       	std	Y+5, r24	; 0x05
    2e82:	8d 81       	ldd	r24, Y+5	; 0x05
    2e84:	9e 81       	ldd	r25, Y+6	; 0x06
    2e86:	9a 83       	std	Y+2, r25	; 0x02
    2e88:	89 83       	std	Y+1, r24	; 0x01
    2e8a:	89 81       	ldd	r24, Y+1	; 0x01
    2e8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e8e:	01 97       	sbiw	r24, 0x01	; 1
    2e90:	f1 f7       	brne	.-4      	; 0x2e8e <main+0x1e46>
    2e92:	9a 83       	std	Y+2, r25	; 0x02
    2e94:	89 83       	std	Y+1, r24	; 0x01
    2e96:	0c 94 3e 08 	jmp	0x107c	; 0x107c <main+0x34>

00002e9a <__prologue_saves__>:
    2e9a:	2f 92       	push	r2
    2e9c:	3f 92       	push	r3
    2e9e:	4f 92       	push	r4
    2ea0:	5f 92       	push	r5
    2ea2:	6f 92       	push	r6
    2ea4:	7f 92       	push	r7
    2ea6:	8f 92       	push	r8
    2ea8:	9f 92       	push	r9
    2eaa:	af 92       	push	r10
    2eac:	bf 92       	push	r11
    2eae:	cf 92       	push	r12
    2eb0:	df 92       	push	r13
    2eb2:	ef 92       	push	r14
    2eb4:	ff 92       	push	r15
    2eb6:	0f 93       	push	r16
    2eb8:	1f 93       	push	r17
    2eba:	cf 93       	push	r28
    2ebc:	df 93       	push	r29
    2ebe:	cd b7       	in	r28, 0x3d	; 61
    2ec0:	de b7       	in	r29, 0x3e	; 62
    2ec2:	ca 1b       	sub	r28, r26
    2ec4:	db 0b       	sbc	r29, r27
    2ec6:	0f b6       	in	r0, 0x3f	; 63
    2ec8:	f8 94       	cli
    2eca:	de bf       	out	0x3e, r29	; 62
    2ecc:	0f be       	out	0x3f, r0	; 63
    2ece:	cd bf       	out	0x3d, r28	; 61
    2ed0:	09 94       	ijmp

00002ed2 <__epilogue_restores__>:
    2ed2:	2a 88       	ldd	r2, Y+18	; 0x12
    2ed4:	39 88       	ldd	r3, Y+17	; 0x11
    2ed6:	48 88       	ldd	r4, Y+16	; 0x10
    2ed8:	5f 84       	ldd	r5, Y+15	; 0x0f
    2eda:	6e 84       	ldd	r6, Y+14	; 0x0e
    2edc:	7d 84       	ldd	r7, Y+13	; 0x0d
    2ede:	8c 84       	ldd	r8, Y+12	; 0x0c
    2ee0:	9b 84       	ldd	r9, Y+11	; 0x0b
    2ee2:	aa 84       	ldd	r10, Y+10	; 0x0a
    2ee4:	b9 84       	ldd	r11, Y+9	; 0x09
    2ee6:	c8 84       	ldd	r12, Y+8	; 0x08
    2ee8:	df 80       	ldd	r13, Y+7	; 0x07
    2eea:	ee 80       	ldd	r14, Y+6	; 0x06
    2eec:	fd 80       	ldd	r15, Y+5	; 0x05
    2eee:	0c 81       	ldd	r16, Y+4	; 0x04
    2ef0:	1b 81       	ldd	r17, Y+3	; 0x03
    2ef2:	aa 81       	ldd	r26, Y+2	; 0x02
    2ef4:	b9 81       	ldd	r27, Y+1	; 0x01
    2ef6:	ce 0f       	add	r28, r30
    2ef8:	d1 1d       	adc	r29, r1
    2efa:	0f b6       	in	r0, 0x3f	; 63
    2efc:	f8 94       	cli
    2efe:	de bf       	out	0x3e, r29	; 62
    2f00:	0f be       	out	0x3f, r0	; 63
    2f02:	cd bf       	out	0x3d, r28	; 61
    2f04:	ed 01       	movw	r28, r26
    2f06:	08 95       	ret

00002f08 <_exit>:
    2f08:	f8 94       	cli

00002f0a <__stop_program>:
    2f0a:	ff cf       	rjmp	.-2      	; 0x2f0a <__stop_program>
